// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/types/base.proto

#include "sensoris/protobuf/types/base.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace protobuf_google_2fprotobuf_2fwrappers_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int64Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StringValue;
}  // namespace protobuf_google_2fprotobuf_2fwrappers_2eproto
namespace protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Confidence;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AbsoluteInt64Histogram_Bin;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Int64StatisticMeasure;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Int64ValueAndAccuracy_ValueAndAccuracy;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RelativeInt64Histogram_Bin;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Timestamp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TimestampInterval;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Int64GaussianDistribution;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Int64StatisticMeasureAndAccuracy;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Version;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_AbsoluteInt64Histogram;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_RelativeInt64Histogram;
}  // namespace protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto
namespace sensoris {
namespace protobuf {
namespace types {
namespace base {
class VersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Version>
      _instance;
} _Version_default_instance_;
class EntityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Entity>
      _instance;
} _Entity_default_instance_;
class TimestampDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Timestamp>
      _instance;
} _Timestamp_default_instance_;
class TimestampIntervalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimestampInterval>
      _instance;
} _TimestampInterval_default_instance_;
class EventEnvelopeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventEnvelope>
      _instance;
} _EventEnvelope_default_instance_;
class EventDetectionStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventDetectionStatus>
      _instance;
} _EventDetectionStatus_default_instance_;
class CategoryEnvelopeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CategoryEnvelope>
      _instance;
} _CategoryEnvelope_default_instance_;
class Int64StatisticMeasureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Int64StatisticMeasure>
      _instance;
} _Int64StatisticMeasure_default_instance_;
class Int64StatisticMeasureAndAccuracyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Int64StatisticMeasureAndAccuracy>
      _instance;
} _Int64StatisticMeasureAndAccuracy_default_instance_;
class AbsoluteInt64Histogram_BinDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AbsoluteInt64Histogram_Bin>
      _instance;
} _AbsoluteInt64Histogram_Bin_default_instance_;
class AbsoluteInt64HistogramDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AbsoluteInt64Histogram>
      _instance;
} _AbsoluteInt64Histogram_default_instance_;
class RelativeInt64Histogram_BinDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RelativeInt64Histogram_Bin>
      _instance;
} _RelativeInt64Histogram_Bin_default_instance_;
class RelativeInt64HistogramDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RelativeInt64Histogram>
      _instance;
} _RelativeInt64Histogram_default_instance_;
class Int64GaussianDistributionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Int64GaussianDistribution>
      _instance;
} _Int64GaussianDistribution_default_instance_;
class Int64ValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Int64Value>
      _instance;
  ::google::protobuf::int64 value_;
  const ::sensoris::protobuf::types::base::Int64StatisticMeasure* statistic_measure_;
  const ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* absolute_histogram_;
  const ::sensoris::protobuf::types::base::RelativeInt64Histogram* relative_histogram_;
  const ::sensoris::protobuf::types::base::Int64GaussianDistribution* gaussian_distribution_;
} _Int64Value_default_instance_;
class Int64ValueAndAccuracy_ValueAndAccuracyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Int64ValueAndAccuracy_ValueAndAccuracy>
      _instance;
} _Int64ValueAndAccuracy_ValueAndAccuracy_default_instance_;
class Int64ValueAndAccuracyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Int64ValueAndAccuracy>
      _instance;
  const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy* value_and_accuracy_;
  const ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy* statistic_measure_and_accuracy_;
  const ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* absolute_histogram_;
  const ::sensoris::protobuf::types::base::RelativeInt64Histogram* relative_histogram_;
  const ::sensoris::protobuf::types::base::Int64GaussianDistribution* gaussian_distribution_;
} _Int64ValueAndAccuracy_default_instance_;
class ConfidenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Confidence>
      _instance;
} _Confidence_default_instance_;
class CountAndConfidenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CountAndConfidence>
      _instance;
} _CountAndConfidence_default_instance_;
class Int64Matrix3x3DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Int64Matrix3x3>
      _instance;
} _Int64Matrix3x3_default_instance_;
}  // namespace base
}  // namespace types
}  // namespace protobuf
}  // namespace sensoris
namespace protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto {
static void InitDefaultsVersion() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::types::base::_Version_default_instance_;
    new (ptr) ::sensoris::protobuf::types::base::Version();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::types::base::Version::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Version =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsVersion}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_StringValue.base,}};

static void InitDefaultsEntity() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::types::base::_Entity_default_instance_;
    new (ptr) ::sensoris::protobuf::types::base::Entity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::types::base::Entity::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Entity =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsEntity}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_StringValue.base,
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Version.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsTimestamp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::types::base::_Timestamp_default_instance_;
    new (ptr) ::sensoris::protobuf::types::base::Timestamp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::types::base::Timestamp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Timestamp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTimestamp}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,}};

static void InitDefaultsTimestampInterval() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::types::base::_TimestampInterval_default_instance_;
    new (ptr) ::sensoris::protobuf::types::base::TimestampInterval();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::types::base::TimestampInterval::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TimestampInterval =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTimestampInterval}, {
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsEventEnvelope() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::types::base::_EventEnvelope_default_instance_;
    new (ptr) ::sensoris::protobuf::types::base::EventEnvelope();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::types::base::EventEnvelope::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_EventEnvelope =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsEventEnvelope}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Timestamp.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsEventDetectionStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::types::base::_EventDetectionStatus_default_instance_;
    new (ptr) ::sensoris::protobuf::types::base::EventDetectionStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::types::base::EventDetectionStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EventDetectionStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEventDetectionStatus}, {
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Confidence.base,}};

static void InitDefaultsCategoryEnvelope() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::types::base::_CategoryEnvelope_default_instance_;
    new (ptr) ::sensoris::protobuf::types::base::CategoryEnvelope();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::types::base::CategoryEnvelope::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CategoryEnvelope =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCategoryEnvelope}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsInt64StatisticMeasure() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::types::base::_Int64StatisticMeasure_default_instance_;
    new (ptr) ::sensoris::protobuf::types::base::Int64StatisticMeasure();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::types::base::Int64StatisticMeasure::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Int64StatisticMeasure =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInt64StatisticMeasure}, {
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_TimestampInterval.base,}};

static void InitDefaultsInt64StatisticMeasureAndAccuracy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::types::base::_Int64StatisticMeasureAndAccuracy_default_instance_;
    new (ptr) ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Int64StatisticMeasureAndAccuracy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsInt64StatisticMeasureAndAccuracy}, {
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_TimestampInterval.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,}};

static void InitDefaultsAbsoluteInt64Histogram_Bin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::types::base::_AbsoluteInt64Histogram_Bin_default_instance_;
    new (ptr) ::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AbsoluteInt64Histogram_Bin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAbsoluteInt64Histogram_Bin}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,}};

static void InitDefaultsAbsoluteInt64Histogram() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::types::base::_AbsoluteInt64Histogram_default_instance_;
    new (ptr) ::sensoris::protobuf::types::base::AbsoluteInt64Histogram();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::types::base::AbsoluteInt64Histogram::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_AbsoluteInt64Histogram =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsAbsoluteInt64Histogram}, {
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_TimestampInterval.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_AbsoluteInt64Histogram_Bin.base,}};

static void InitDefaultsRelativeInt64Histogram_Bin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::types::base::_RelativeInt64Histogram_Bin_default_instance_;
    new (ptr) ::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RelativeInt64Histogram_Bin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRelativeInt64Histogram_Bin}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,}};

static void InitDefaultsRelativeInt64Histogram() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::types::base::_RelativeInt64Histogram_default_instance_;
    new (ptr) ::sensoris::protobuf::types::base::RelativeInt64Histogram();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::types::base::RelativeInt64Histogram::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_RelativeInt64Histogram =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsRelativeInt64Histogram}, {
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_TimestampInterval.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_RelativeInt64Histogram_Bin.base,}};

static void InitDefaultsInt64GaussianDistribution() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::types::base::_Int64GaussianDistribution_default_instance_;
    new (ptr) ::sensoris::protobuf::types::base::Int64GaussianDistribution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::types::base::Int64GaussianDistribution::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Int64GaussianDistribution =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsInt64GaussianDistribution}, {
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_TimestampInterval.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,}};

static void InitDefaultsInt64Value() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::types::base::_Int64Value_default_instance_;
    new (ptr) ::sensoris::protobuf::types::base::Int64Value();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::types::base::Int64Value::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Int64Value =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsInt64Value}, {
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64StatisticMeasure.base,
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_AbsoluteInt64Histogram.base,
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_RelativeInt64Histogram.base,
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64GaussianDistribution.base,}};

static void InitDefaultsInt64ValueAndAccuracy_ValueAndAccuracy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::types::base::_Int64ValueAndAccuracy_ValueAndAccuracy_default_instance_;
    new (ptr) ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Int64ValueAndAccuracy_ValueAndAccuracy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInt64ValueAndAccuracy_ValueAndAccuracy}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,}};

static void InitDefaultsInt64ValueAndAccuracy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::types::base::_Int64ValueAndAccuracy_default_instance_;
    new (ptr) ::sensoris::protobuf::types::base::Int64ValueAndAccuracy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_Int64ValueAndAccuracy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsInt64ValueAndAccuracy}, {
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64ValueAndAccuracy_ValueAndAccuracy.base,
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64StatisticMeasureAndAccuracy.base,
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_AbsoluteInt64Histogram.base,
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_RelativeInt64Histogram.base,
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64GaussianDistribution.base,}};

static void InitDefaultsConfidence() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::types::base::_Confidence_default_instance_;
    new (ptr) ::sensoris::protobuf::types::base::Confidence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::types::base::Confidence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Confidence =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfidence}, {}};

static void InitDefaultsCountAndConfidence() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::types::base::_CountAndConfidence_default_instance_;
    new (ptr) ::sensoris::protobuf::types::base::CountAndConfidence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::types::base::CountAndConfidence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CountAndConfidence =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCountAndConfidence}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Confidence.base,}};

static void InitDefaultsInt64Matrix3x3() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::types::base::_Int64Matrix3x3_default_instance_;
    new (ptr) ::sensoris::protobuf::types::base::Int64Matrix3x3();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::types::base::Int64Matrix3x3::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Int64Matrix3x3 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInt64Matrix3x3}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Version.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Entity.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Timestamp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TimestampInterval.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EventEnvelope.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EventDetectionStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CategoryEnvelope.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Int64StatisticMeasure.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Int64StatisticMeasureAndAccuracy.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AbsoluteInt64Histogram_Bin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AbsoluteInt64Histogram.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RelativeInt64Histogram_Bin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RelativeInt64Histogram.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Int64GaussianDistribution.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Int64Value.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Int64ValueAndAccuracy_ValueAndAccuracy.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Int64ValueAndAccuracy.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Confidence.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CountAndConfidence.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Int64Matrix3x3.base);
}

::google::protobuf::Metadata file_level_metadata[20];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Version, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Version, major_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Version, minor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Version, patch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Version, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Entity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Entity, primary_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Entity, secondary_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Entity, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Entity, software_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Entity, hardware_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Entity, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Timestamp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Timestamp, posix_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Timestamp, posix_time_fraction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::TimestampInterval, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::TimestampInterval, start_inclusive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::TimestampInterval, end_exclusive_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::EventEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::EventEnvelope, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::EventEnvelope, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::EventEnvelope, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::EventDetectionStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::EventDetectionStatus, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::EventDetectionStatus, confidence_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::CategoryEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::CategoryEnvelope, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64StatisticMeasure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64StatisticMeasure, timestamp_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64StatisticMeasure, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64StatisticMeasure, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy, timestamp_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy, accuracy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin, lower_endpoint_inclusive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin, frequency_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::AbsoluteInt64Histogram, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::AbsoluteInt64Histogram, timestamp_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::AbsoluteInt64Histogram, total_elements_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::AbsoluteInt64Histogram, bin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::AbsoluteInt64Histogram, upper_endpoint_inclusive_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin, lower_endpoint_inclusive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin, relative_frequency_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::RelativeInt64Histogram, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::RelativeInt64Histogram, timestamp_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::RelativeInt64Histogram, total_elements_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::RelativeInt64Histogram, bin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::RelativeInt64Histogram, upper_endpoint_inclusive_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64GaussianDistribution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64GaussianDistribution, timestamp_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64GaussianDistribution, mean_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64GaussianDistribution, variance_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Value, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Value, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::sensoris::protobuf::types::base::Int64ValueDefaultTypeInternal, value_),
  offsetof(::sensoris::protobuf::types::base::Int64ValueDefaultTypeInternal, statistic_measure_),
  offsetof(::sensoris::protobuf::types::base::Int64ValueDefaultTypeInternal, absolute_histogram_),
  offsetof(::sensoris::protobuf::types::base::Int64ValueDefaultTypeInternal, relative_histogram_),
  offsetof(::sensoris::protobuf::types::base::Int64ValueDefaultTypeInternal, gaussian_distribution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Value, value_oneof_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy, accuracy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64ValueAndAccuracy, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64ValueAndAccuracy, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::sensoris::protobuf::types::base::Int64ValueAndAccuracyDefaultTypeInternal, value_and_accuracy_),
  offsetof(::sensoris::protobuf::types::base::Int64ValueAndAccuracyDefaultTypeInternal, statistic_measure_and_accuracy_),
  offsetof(::sensoris::protobuf::types::base::Int64ValueAndAccuracyDefaultTypeInternal, absolute_histogram_),
  offsetof(::sensoris::protobuf::types::base::Int64ValueAndAccuracyDefaultTypeInternal, relative_histogram_),
  offsetof(::sensoris::protobuf::types::base::Int64ValueAndAccuracyDefaultTypeInternal, gaussian_distribution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64ValueAndAccuracy, value_oneof_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Confidence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Confidence, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::CountAndConfidence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::CountAndConfidence, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::CountAndConfidence, confidence_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Matrix3x3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Matrix3x3, a11_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Matrix3x3, a12_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Matrix3x3, a13_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Matrix3x3, a21_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Matrix3x3, a22_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Matrix3x3, a23_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Matrix3x3, a31_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Matrix3x3, a32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Matrix3x3, a33_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::sensoris::protobuf::types::base::Version)},
  { 9, -1, sizeof(::sensoris::protobuf::types::base::Entity)},
  { 20, -1, sizeof(::sensoris::protobuf::types::base::Timestamp)},
  { 27, -1, sizeof(::sensoris::protobuf::types::base::TimestampInterval)},
  { 34, -1, sizeof(::sensoris::protobuf::types::base::EventEnvelope)},
  { 42, -1, sizeof(::sensoris::protobuf::types::base::EventDetectionStatus)},
  { 49, -1, sizeof(::sensoris::protobuf::types::base::CategoryEnvelope)},
  { 55, -1, sizeof(::sensoris::protobuf::types::base::Int64StatisticMeasure)},
  { 63, -1, sizeof(::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy)},
  { 72, -1, sizeof(::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin)},
  { 79, -1, sizeof(::sensoris::protobuf::types::base::AbsoluteInt64Histogram)},
  { 88, -1, sizeof(::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin)},
  { 95, -1, sizeof(::sensoris::protobuf::types::base::RelativeInt64Histogram)},
  { 104, -1, sizeof(::sensoris::protobuf::types::base::Int64GaussianDistribution)},
  { 112, -1, sizeof(::sensoris::protobuf::types::base::Int64Value)},
  { 123, -1, sizeof(::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy)},
  { 130, -1, sizeof(::sensoris::protobuf::types::base::Int64ValueAndAccuracy)},
  { 141, -1, sizeof(::sensoris::protobuf::types::base::Confidence)},
  { 147, -1, sizeof(::sensoris::protobuf::types::base::CountAndConfidence)},
  { 154, -1, sizeof(::sensoris::protobuf::types::base::Int64Matrix3x3)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::types::base::_Version_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::types::base::_Entity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::types::base::_Timestamp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::types::base::_TimestampInterval_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::types::base::_EventEnvelope_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::types::base::_EventDetectionStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::types::base::_CategoryEnvelope_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::types::base::_Int64StatisticMeasure_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::types::base::_Int64StatisticMeasureAndAccuracy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::types::base::_AbsoluteInt64Histogram_Bin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::types::base::_AbsoluteInt64Histogram_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::types::base::_RelativeInt64Histogram_Bin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::types::base::_RelativeInt64Histogram_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::types::base::_Int64GaussianDistribution_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::types::base::_Int64Value_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::types::base::_Int64ValueAndAccuracy_ValueAndAccuracy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::types::base::_Int64ValueAndAccuracy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::types::base::_Confidence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::types::base::_CountAndConfidence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::types::base::_Int64Matrix3x3_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "sensoris/protobuf/types/base.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 20);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\"sensoris/protobuf/types/base.proto\022\034se"
      "nsoris.protobuf.types.base\032\031google/proto"
      "buf/any.proto\032 google/protobuf/descripto"
      "r.proto\032\036google/protobuf/wrappers.proto\""
      "\271\001\n\007Version\022*\n\005major\030\001 \001(\0132\033.google.prot"
      "obuf.Int64Value\022*\n\005minor\030\002 \001(\0132\033.google."
      "protobuf.Int64Value\022*\n\005patch\030\003 \001(\0132\033.goo"
      "gle.protobuf.Int64Value\022*\n\004name\030\004 \001(\0132\034."
      "google.protobuf.StringValue\"\305\002\n\006Entity\0220"
      "\n\nprimary_id\030\001 \001(\0132\034.google.protobuf.Str"
      "ingValue\0222\n\014secondary_id\030\002 \001(\0132\034.google."
      "protobuf.StringValue\022*\n\004type\030\003 \001(\0132\034.goo"
      "gle.protobuf.StringValue\022\?\n\020software_ver"
      "sion\030\004 \001(\0132%.sensoris.protobuf.types.bas"
      "e.Version\022\?\n\020hardware_version\030\005 \001(\0132%.se"
      "nsoris.protobuf.types.base.Version\022\'\n\tex"
      "tension\030\017 \003(\0132\024.google.protobuf.Any\"|\n\tT"
      "imestamp\022/\n\nposix_time\030\001 \001(\0132\033.google.pr"
      "otobuf.Int64Value\022>\n\023posix_time_fraction"
      "\030\002 \001(\0132\033.google.protobuf.Int64ValueB\004\210\265\030"
      "\000\"\225\001\n\021TimestampInterval\022@\n\017start_inclusi"
      "ve\030\001 \001(\0132\'.sensoris.protobuf.types.base."
      "Timestamp\022>\n\rend_exclusive\030\002 \001(\0132\'.senso"
      "ris.protobuf.types.base.Timestamp\"\235\001\n\rEv"
      "entEnvelope\022\'\n\002id\030\001 \001(\0132\033.google.protobu"
      "f.Int64Value\022:\n\ttimestamp\030\002 \001(\0132\'.sensor"
      "is.protobuf.types.base.Timestamp\022\'\n\texte"
      "nsion\030\017 \003(\0132\024.google.protobuf.Any\"\355\002\n\024Ev"
      "entDetectionStatus\022E\n\004type\030\001 \001(\01627.senso"
      "ris.protobuf.types.base.EventDetectionSt"
      "atus.Type\022<\n\nconfidence\030\002 \001(\0132(.sensoris"
      ".protobuf.types.base.Confidence\"\317\001\n\004Type"
      "\022\020\n\014UNKNOWN_TYPE\020\000\022\031\n\025EXPECTED_AND_DETEC"
      "TED\020\001\022\035\n\031EXPECTED_AND_NOT_DETECTED\020\002\022,\n("
      "EXPECTED_AND_NOT_DETECTED_ACCESS_BLOCKED"
      "\020\003\022.\n*EXPECTED_AND_NOT_DETECTED_ACCESS_A"
      "VAILABLE\020\004\022\035\n\031NOT_EXPECTED_AND_DETECTED\020"
      "\005\";\n\020CategoryEnvelope\022\'\n\textension\030\017 \003(\013"
      "2\024.google.protobuf.Any\"\265\001\n\025Int64Statisti"
      "cMeasure\022K\n\022timestamp_interval\030\001 \001(\0132/.s"
      "ensoris.protobuf.types.base.TimestampInt"
      "erval\022@\n\004type\030\002 \001(\01622.sensoris.protobuf."
      "types.base.StatisticMeasureType\022\r\n\005value"
      "\030\003 \001(\003\"\357\001\n Int64StatisticMeasureAndAccur"
      "acy\022K\n\022timestamp_interval\030\001 \001(\0132/.sensor"
      "is.protobuf.types.base.TimestampInterval"
      "\022@\n\004type\030\002 \001(\01622.sensoris.protobuf.types"
      ".base.StatisticMeasureType\022\r\n\005value\030\003 \001("
      "\003\022-\n\010accuracy\030\004 \001(\0132\033.google.protobuf.In"
      "t64Value\"\226\003\n\026AbsoluteInt64Histogram\022K\n\022t"
      "imestamp_interval\030\001 \001(\0132/.sensoris.proto"
      "buf.types.base.TimestampInterval\0223\n\016tota"
      "l_elements\030\002 \001(\0132\033.google.protobuf.Int64"
      "Value\022E\n\003bin\030\003 \003(\01328.sensoris.protobuf.t"
      "ypes.base.AbsoluteInt64Histogram.Bin\022=\n\030"
      "upper_endpoint_inclusive\030\004 \001(\0132\033.google."
      "protobuf.Int64Value\032t\n\003Bin\022=\n\030lower_endp"
      "oint_inclusive\030\001 \001(\0132\033.google.protobuf.I"
      "nt64Value\022.\n\tfrequency\030\002 \001(\0132\033.google.pr"
      "otobuf.Int64Value\"\246\003\n\026RelativeInt64Histo"
      "gram\022K\n\022timestamp_interval\030\001 \001(\0132/.senso"
      "ris.protobuf.types.base.TimestampInterva"
      "l\0223\n\016total_elements\030\002 \001(\0132\033.google.proto"
      "buf.Int64Value\022E\n\003bin\030\003 \003(\01328.sensoris.p"
      "rotobuf.types.base.RelativeInt64Histogra"
      "m.Bin\022=\n\030upper_endpoint_inclusive\030\004 \001(\0132"
      "\033.google.protobuf.Int64Value\032\203\001\n\003Bin\022=\n\030"
      "lower_endpoint_inclusive\030\001 \001(\0132\033.google."
      "protobuf.Int64Value\022=\n\022relative_frequenc"
      "y\030\003 \001(\0132\033.google.protobuf.Int64ValueB\004\210\265"
      "\030\001\"\302\001\n\031Int64GaussianDistribution\022K\n\022time"
      "stamp_interval\030\001 \001(\0132/.sensoris.protobuf"
      ".types.base.TimestampInterval\022)\n\004mean\030\002 "
      "\001(\0132\033.google.protobuf.Int64Value\022-\n\010vari"
      "ance\030\003 \001(\0132\033.google.protobuf.Int64Value\""
      "\200\003\n\nInt64Value\022\017\n\005value\030\001 \001(\003H\000\022P\n\021stati"
      "stic_measure\030\002 \001(\01323.sensoris.protobuf.t"
      "ypes.base.Int64StatisticMeasureH\000\022R\n\022abs"
      "olute_histogram\030\003 \001(\01324.sensoris.protobu"
      "f.types.base.AbsoluteInt64HistogramH\000\022R\n"
      "\022relative_histogram\030\004 \001(\01324.sensoris.pro"
      "tobuf.types.base.RelativeInt64HistogramH"
      "\000\022X\n\025gaussian_distribution\030\005 \001(\01327.senso"
      "ris.protobuf.types.base.Int64GaussianDis"
      "tributionH\000B\r\n\013value_oneof\"\310\004\n\025Int64Valu"
      "eAndAccuracy\022b\n\022value_and_accuracy\030\001 \001(\013"
      "2D.sensoris.protobuf.types.base.Int64Val"
      "ueAndAccuracy.ValueAndAccuracyH\000\022h\n\036stat"
      "istic_measure_and_accuracy\030\002 \001(\0132>.senso"
      "ris.protobuf.types.base.Int64StatisticMe"
      "asureAndAccuracyH\000\022R\n\022absolute_histogram"
      "\030\003 \001(\01324.sensoris.protobuf.types.base.Ab"
      "soluteInt64HistogramH\000\022R\n\022relative_histo"
      "gram\030\004 \001(\01324.sensoris.protobuf.types.bas"
      "e.RelativeInt64HistogramH\000\022X\n\025gaussian_d"
      "istribution\030\005 \001(\01327.sensoris.protobuf.ty"
      "pes.base.Int64GaussianDistributionH\000\032P\n\020"
      "ValueAndAccuracy\022\r\n\005value\030\001 \001(\003\022-\n\010accur"
      "acy\030\002 \001(\0132\033.google.protobuf.Int64ValueB\r"
      "\n\013value_oneof\"!\n\nConfidence\022\023\n\005value\030\001 \001"
      "(\003B\004\210\265\030\000\"~\n\022CountAndConfidence\022*\n\005count\030"
      "\001 \001(\0132\033.google.protobuf.Int64Value\022<\n\nco"
      "nfidence\030\002 \001(\0132(.sensoris.protobuf.types"
      ".base.Confidence\"\212\003\n\016Int64Matrix3x3\022(\n\003a"
      "11\030\001 \001(\0132\033.google.protobuf.Int64Value\022(\n"
      "\003a12\030\002 \001(\0132\033.google.protobuf.Int64Value\022"
      "(\n\003a13\030\003 \001(\0132\033.google.protobuf.Int64Valu"
      "e\022(\n\003a21\030\004 \001(\0132\033.google.protobuf.Int64Va"
      "lue\022(\n\003a22\030\005 \001(\0132\033.google.protobuf.Int64"
      "Value\022(\n\003a23\030\006 \001(\0132\033.google.protobuf.Int"
      "64Value\022(\n\003a31\030\007 \001(\0132\033.google.protobuf.I"
      "nt64Value\022(\n\003a32\030\010 \001(\0132\033.google.protobuf"
      ".Int64Value\022(\n\003a33\030\t \001(\0132\033.google.protob"
      "uf.Int64Value*m\n\024StatisticMeasureType\022\"\n"
      "\036UNKNOWN_STATISTIC_MEASURE_TYPE\020\000\022\013\n\007MIN"
      "IMUM\020\001\022\013\n\007MAXIMUM\020\002\022\013\n\007AVERAGE\020\003\022\n\n\006MEDI"
      "AN\020\004*Q\n\014SystemStatus\022\031\n\025UNKNOWN_SYSTEM_S"
      "TATUS\020\000\022\n\n\006ACTIVE\020\001\022\014\n\010INACTIVE\020\002\022\014\n\010DIS"
      "ABLED\020\003:1\n\010exponent\022\035.google.protobuf.Fi"
      "eldOptions\030\321\206\003 \001(\003B1\n\027org.sensoris.types"
      ".baseB\021SensorisBaseTypesP\001\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4837);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sensoris/protobuf/types/base.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fdescriptor_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto
namespace sensoris {
namespace protobuf {
namespace types {
namespace base {
const ::google::protobuf::EnumDescriptor* EventDetectionStatus_Type_descriptor() {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_enum_descriptors[0];
}
bool EventDetectionStatus_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EventDetectionStatus_Type EventDetectionStatus::UNKNOWN_TYPE;
const EventDetectionStatus_Type EventDetectionStatus::EXPECTED_AND_DETECTED;
const EventDetectionStatus_Type EventDetectionStatus::EXPECTED_AND_NOT_DETECTED;
const EventDetectionStatus_Type EventDetectionStatus::EXPECTED_AND_NOT_DETECTED_ACCESS_BLOCKED;
const EventDetectionStatus_Type EventDetectionStatus::EXPECTED_AND_NOT_DETECTED_ACCESS_AVAILABLE;
const EventDetectionStatus_Type EventDetectionStatus::NOT_EXPECTED_AND_DETECTED;
const EventDetectionStatus_Type EventDetectionStatus::Type_MIN;
const EventDetectionStatus_Type EventDetectionStatus::Type_MAX;
const int EventDetectionStatus::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* StatisticMeasureType_descriptor() {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_enum_descriptors[1];
}
bool StatisticMeasureType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SystemStatus_descriptor() {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_enum_descriptors[2];
}
bool SystemStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Version::InitAsDefaultInstance() {
  ::sensoris::protobuf::types::base::_Version_default_instance_._instance.get_mutable()->major_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::types::base::_Version_default_instance_._instance.get_mutable()->minor_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::types::base::_Version_default_instance_._instance.get_mutable()->patch_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::types::base::_Version_default_instance_._instance.get_mutable()->name_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
}
void Version::unsafe_arena_set_allocated_major(
    ::google::protobuf::Int64Value* major) {
  if (GetArenaNoVirtual() == NULL) {
    delete major_;
  }
  major_ = major;
  if (major) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Version.major)
}
void Version::clear_major() {
  if (GetArenaNoVirtual() == NULL && major_ != NULL) {
    delete major_;
  }
  major_ = NULL;
}
void Version::unsafe_arena_set_allocated_minor(
    ::google::protobuf::Int64Value* minor) {
  if (GetArenaNoVirtual() == NULL) {
    delete minor_;
  }
  minor_ = minor;
  if (minor) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Version.minor)
}
void Version::clear_minor() {
  if (GetArenaNoVirtual() == NULL && minor_ != NULL) {
    delete minor_;
  }
  minor_ = NULL;
}
void Version::unsafe_arena_set_allocated_patch(
    ::google::protobuf::Int64Value* patch) {
  if (GetArenaNoVirtual() == NULL) {
    delete patch_;
  }
  patch_ = patch;
  if (patch) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Version.patch)
}
void Version::clear_patch() {
  if (GetArenaNoVirtual() == NULL && patch_ != NULL) {
    delete patch_;
  }
  patch_ = NULL;
}
void Version::unsafe_arena_set_allocated_name(
    ::google::protobuf::StringValue* name) {
  if (GetArenaNoVirtual() == NULL) {
    delete name_;
  }
  name_ = name;
  if (name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Version.name)
}
void Version::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Version::kMajorFieldNumber;
const int Version::kMinorFieldNumber;
const int Version::kPatchFieldNumber;
const int Version::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Version::Version()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Version.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.types.base.Version)
}
Version::Version(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Version.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Version)
}
Version::Version(const Version& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_major()) {
    major_ = new ::google::protobuf::Int64Value(*from.major_);
  } else {
    major_ = NULL;
  }
  if (from.has_minor()) {
    minor_ = new ::google::protobuf::Int64Value(*from.minor_);
  } else {
    minor_ = NULL;
  }
  if (from.has_patch()) {
    patch_ = new ::google::protobuf::Int64Value(*from.patch_);
  } else {
    patch_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::google::protobuf::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Version)
}

void Version::SharedCtor() {
  ::memset(&major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&name_) -
      reinterpret_cast<char*>(&major_)) + sizeof(name_));
}

Version::~Version() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Version)
  SharedDtor();
}

void Version::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete major_;
  if (this != internal_default_instance()) delete minor_;
  if (this != internal_default_instance()) delete patch_;
  if (this != internal_default_instance()) delete name_;
}

void Version::ArenaDtor(void* object) {
  Version* _this = reinterpret_cast< Version* >(object);
  (void)_this;
}
void Version::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Version::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Version::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Version& Version::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Version.base);
  return *internal_default_instance();
}


void Version::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && major_ != NULL) {
    delete major_;
  }
  major_ = NULL;
  if (GetArenaNoVirtual() == NULL && minor_ != NULL) {
    delete minor_;
  }
  minor_ = NULL;
  if (GetArenaNoVirtual() == NULL && patch_ != NULL) {
    delete patch_;
  }
  patch_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  _internal_metadata_.Clear();
}

bool Version::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.types.base.Version)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Int64Value major = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_major()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value minor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_minor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value patch = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_patch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.types.base.Version)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.types.base.Version)
  return false;
#undef DO_
}

void Version::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.types.base.Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value major = 1;
  if (this->has_major()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_major(), output);
  }

  // .google.protobuf.Int64Value minor = 2;
  if (this->has_minor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_minor(), output);
  }

  // .google.protobuf.Int64Value patch = 3;
  if (this->has_patch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_patch(), output);
  }

  // .google.protobuf.StringValue name = 4;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.types.base.Version)
}

::google::protobuf::uint8* Version::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value major = 1;
  if (this->has_major()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_major(), deterministic, target);
  }

  // .google.protobuf.Int64Value minor = 2;
  if (this->has_minor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_minor(), deterministic, target);
  }

  // .google.protobuf.Int64Value patch = 3;
  if (this->has_patch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_patch(), deterministic, target);
  }

  // .google.protobuf.StringValue name = 4;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_name(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Version)
  return target;
}

size_t Version::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Version)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Int64Value major = 1;
  if (this->has_major()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *major_);
  }

  // .google.protobuf.Int64Value minor = 2;
  if (this->has_minor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *minor_);
  }

  // .google.protobuf.Int64Value patch = 3;
  if (this->has_patch()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *patch_);
  }

  // .google.protobuf.StringValue name = 4;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Version::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.types.base.Version)
  GOOGLE_DCHECK_NE(&from, this);
  const Version* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Version>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.types.base.Version)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.types.base.Version)
    MergeFrom(*source);
  }
}

void Version::MergeFrom(const Version& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Version)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_major()) {
    mutable_major()->::google::protobuf::Int64Value::MergeFrom(from.major());
  }
  if (from.has_minor()) {
    mutable_minor()->::google::protobuf::Int64Value::MergeFrom(from.minor());
  }
  if (from.has_patch()) {
    mutable_patch()->::google::protobuf::Int64Value::MergeFrom(from.patch());
  }
  if (from.has_name()) {
    mutable_name()->::google::protobuf::StringValue::MergeFrom(from.name());
  }
}

void Version::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.types.base.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Version::CopyFrom(const Version& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Version::IsInitialized() const {
  return true;
}

void Version::Swap(Version* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Version* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Version::UnsafeArenaSwap(Version* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Version::InternalSwap(Version* other) {
  using std::swap;
  swap(major_, other->major_);
  swap(minor_, other->minor_);
  swap(patch_, other->patch_);
  swap(name_, other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Version::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Entity::InitAsDefaultInstance() {
  ::sensoris::protobuf::types::base::_Entity_default_instance_._instance.get_mutable()->primary_id_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::sensoris::protobuf::types::base::_Entity_default_instance_._instance.get_mutable()->secondary_id_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::sensoris::protobuf::types::base::_Entity_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::sensoris::protobuf::types::base::_Entity_default_instance_._instance.get_mutable()->software_version_ = const_cast< ::sensoris::protobuf::types::base::Version*>(
      ::sensoris::protobuf::types::base::Version::internal_default_instance());
  ::sensoris::protobuf::types::base::_Entity_default_instance_._instance.get_mutable()->hardware_version_ = const_cast< ::sensoris::protobuf::types::base::Version*>(
      ::sensoris::protobuf::types::base::Version::internal_default_instance());
}
void Entity::unsafe_arena_set_allocated_primary_id(
    ::google::protobuf::StringValue* primary_id) {
  if (GetArenaNoVirtual() == NULL) {
    delete primary_id_;
  }
  primary_id_ = primary_id;
  if (primary_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Entity.primary_id)
}
void Entity::clear_primary_id() {
  if (GetArenaNoVirtual() == NULL && primary_id_ != NULL) {
    delete primary_id_;
  }
  primary_id_ = NULL;
}
void Entity::unsafe_arena_set_allocated_secondary_id(
    ::google::protobuf::StringValue* secondary_id) {
  if (GetArenaNoVirtual() == NULL) {
    delete secondary_id_;
  }
  secondary_id_ = secondary_id;
  if (secondary_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Entity.secondary_id)
}
void Entity::clear_secondary_id() {
  if (GetArenaNoVirtual() == NULL && secondary_id_ != NULL) {
    delete secondary_id_;
  }
  secondary_id_ = NULL;
}
void Entity::unsafe_arena_set_allocated_type(
    ::google::protobuf::StringValue* type) {
  if (GetArenaNoVirtual() == NULL) {
    delete type_;
  }
  type_ = type;
  if (type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Entity.type)
}
void Entity::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
void Entity::unsafe_arena_set_allocated_software_version(
    ::sensoris::protobuf::types::base::Version* software_version) {
  if (GetArenaNoVirtual() == NULL) {
    delete software_version_;
  }
  software_version_ = software_version;
  if (software_version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Entity.software_version)
}
void Entity::unsafe_arena_set_allocated_hardware_version(
    ::sensoris::protobuf::types::base::Version* hardware_version) {
  if (GetArenaNoVirtual() == NULL) {
    delete hardware_version_;
  }
  hardware_version_ = hardware_version;
  if (hardware_version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Entity.hardware_version)
}
void Entity::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Entity::kPrimaryIdFieldNumber;
const int Entity::kSecondaryIdFieldNumber;
const int Entity::kTypeFieldNumber;
const int Entity::kSoftwareVersionFieldNumber;
const int Entity::kHardwareVersionFieldNumber;
const int Entity::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Entity::Entity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Entity.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.types.base.Entity)
}
Entity::Entity(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  extension_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Entity.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Entity)
}
Entity::Entity(const Entity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_primary_id()) {
    primary_id_ = new ::google::protobuf::StringValue(*from.primary_id_);
  } else {
    primary_id_ = NULL;
  }
  if (from.has_secondary_id()) {
    secondary_id_ = new ::google::protobuf::StringValue(*from.secondary_id_);
  } else {
    secondary_id_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::google::protobuf::StringValue(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_software_version()) {
    software_version_ = new ::sensoris::protobuf::types::base::Version(*from.software_version_);
  } else {
    software_version_ = NULL;
  }
  if (from.has_hardware_version()) {
    hardware_version_ = new ::sensoris::protobuf::types::base::Version(*from.hardware_version_);
  } else {
    hardware_version_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Entity)
}

void Entity::SharedCtor() {
  ::memset(&primary_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hardware_version_) -
      reinterpret_cast<char*>(&primary_id_)) + sizeof(hardware_version_));
}

Entity::~Entity() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Entity)
  SharedDtor();
}

void Entity::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete primary_id_;
  if (this != internal_default_instance()) delete secondary_id_;
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete software_version_;
  if (this != internal_default_instance()) delete hardware_version_;
}

void Entity::ArenaDtor(void* object) {
  Entity* _this = reinterpret_cast< Entity* >(object);
  (void)_this;
}
void Entity::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Entity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Entity::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Entity& Entity::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Entity.base);
  return *internal_default_instance();
}


void Entity::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && primary_id_ != NULL) {
    delete primary_id_;
  }
  primary_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && secondary_id_ != NULL) {
    delete secondary_id_;
  }
  secondary_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && software_version_ != NULL) {
    delete software_version_;
  }
  software_version_ = NULL;
  if (GetArenaNoVirtual() == NULL && hardware_version_ != NULL) {
    delete hardware_version_;
  }
  hardware_version_ = NULL;
  _internal_metadata_.Clear();
}

bool Entity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.types.base.Entity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.StringValue primary_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_primary_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue secondary_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_secondary_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.types.base.Version software_version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_software_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.types.base.Version hardware_version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hardware_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.types.base.Entity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.types.base.Entity)
  return false;
#undef DO_
}

void Entity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.types.base.Entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue primary_id = 1;
  if (this->has_primary_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_primary_id(), output);
  }

  // .google.protobuf.StringValue secondary_id = 2;
  if (this->has_secondary_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_secondary_id(), output);
  }

  // .google.protobuf.StringValue type = 3;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_type(), output);
  }

  // .sensoris.protobuf.types.base.Version software_version = 4;
  if (this->has_software_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_software_version(), output);
  }

  // .sensoris.protobuf.types.base.Version hardware_version = 5;
  if (this->has_hardware_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_hardware_version(), output);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.types.base.Entity)
}

::google::protobuf::uint8* Entity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue primary_id = 1;
  if (this->has_primary_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_primary_id(), deterministic, target);
  }

  // .google.protobuf.StringValue secondary_id = 2;
  if (this->has_secondary_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_secondary_id(), deterministic, target);
  }

  // .google.protobuf.StringValue type = 3;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_type(), deterministic, target);
  }

  // .sensoris.protobuf.types.base.Version software_version = 4;
  if (this->has_software_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_software_version(), deterministic, target);
  }

  // .sensoris.protobuf.types.base.Version hardware_version = 5;
  if (this->has_hardware_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_hardware_version(), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Entity)
  return target;
}

size_t Entity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Entity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.protobuf.StringValue primary_id = 1;
  if (this->has_primary_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *primary_id_);
  }

  // .google.protobuf.StringValue secondary_id = 2;
  if (this->has_secondary_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *secondary_id_);
  }

  // .google.protobuf.StringValue type = 3;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .sensoris.protobuf.types.base.Version software_version = 4;
  if (this->has_software_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *software_version_);
  }

  // .sensoris.protobuf.types.base.Version hardware_version = 5;
  if (this->has_hardware_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hardware_version_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Entity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.types.base.Entity)
  GOOGLE_DCHECK_NE(&from, this);
  const Entity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Entity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.types.base.Entity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.types.base.Entity)
    MergeFrom(*source);
  }
}

void Entity::MergeFrom(const Entity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Entity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_primary_id()) {
    mutable_primary_id()->::google::protobuf::StringValue::MergeFrom(from.primary_id());
  }
  if (from.has_secondary_id()) {
    mutable_secondary_id()->::google::protobuf::StringValue::MergeFrom(from.secondary_id());
  }
  if (from.has_type()) {
    mutable_type()->::google::protobuf::StringValue::MergeFrom(from.type());
  }
  if (from.has_software_version()) {
    mutable_software_version()->::sensoris::protobuf::types::base::Version::MergeFrom(from.software_version());
  }
  if (from.has_hardware_version()) {
    mutable_hardware_version()->::sensoris::protobuf::types::base::Version::MergeFrom(from.hardware_version());
  }
}

void Entity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.types.base.Entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Entity::CopyFrom(const Entity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Entity::IsInitialized() const {
  return true;
}

void Entity::Swap(Entity* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Entity* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Entity::UnsafeArenaSwap(Entity* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Entity::InternalSwap(Entity* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(primary_id_, other->primary_id_);
  swap(secondary_id_, other->secondary_id_);
  swap(type_, other->type_);
  swap(software_version_, other->software_version_);
  swap(hardware_version_, other->hardware_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Entity::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Timestamp::InitAsDefaultInstance() {
  ::sensoris::protobuf::types::base::_Timestamp_default_instance_._instance.get_mutable()->posix_time_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::types::base::_Timestamp_default_instance_._instance.get_mutable()->posix_time_fraction_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
void Timestamp::unsafe_arena_set_allocated_posix_time(
    ::google::protobuf::Int64Value* posix_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete posix_time_;
  }
  posix_time_ = posix_time;
  if (posix_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Timestamp.posix_time)
}
void Timestamp::clear_posix_time() {
  if (GetArenaNoVirtual() == NULL && posix_time_ != NULL) {
    delete posix_time_;
  }
  posix_time_ = NULL;
}
void Timestamp::unsafe_arena_set_allocated_posix_time_fraction(
    ::google::protobuf::Int64Value* posix_time_fraction) {
  if (GetArenaNoVirtual() == NULL) {
    delete posix_time_fraction_;
  }
  posix_time_fraction_ = posix_time_fraction;
  if (posix_time_fraction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Timestamp.posix_time_fraction)
}
void Timestamp::clear_posix_time_fraction() {
  if (GetArenaNoVirtual() == NULL && posix_time_fraction_ != NULL) {
    delete posix_time_fraction_;
  }
  posix_time_fraction_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Timestamp::kPosixTimeFieldNumber;
const int Timestamp::kPosixTimeFractionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Timestamp::Timestamp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Timestamp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.types.base.Timestamp)
}
Timestamp::Timestamp(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Timestamp.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Timestamp)
}
Timestamp::Timestamp(const Timestamp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_posix_time()) {
    posix_time_ = new ::google::protobuf::Int64Value(*from.posix_time_);
  } else {
    posix_time_ = NULL;
  }
  if (from.has_posix_time_fraction()) {
    posix_time_fraction_ = new ::google::protobuf::Int64Value(*from.posix_time_fraction_);
  } else {
    posix_time_fraction_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Timestamp)
}

void Timestamp::SharedCtor() {
  ::memset(&posix_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&posix_time_fraction_) -
      reinterpret_cast<char*>(&posix_time_)) + sizeof(posix_time_fraction_));
}

Timestamp::~Timestamp() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Timestamp)
  SharedDtor();
}

void Timestamp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete posix_time_;
  if (this != internal_default_instance()) delete posix_time_fraction_;
}

void Timestamp::ArenaDtor(void* object) {
  Timestamp* _this = reinterpret_cast< Timestamp* >(object);
  (void)_this;
}
void Timestamp::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Timestamp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Timestamp::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Timestamp& Timestamp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Timestamp.base);
  return *internal_default_instance();
}


void Timestamp::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && posix_time_ != NULL) {
    delete posix_time_;
  }
  posix_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && posix_time_fraction_ != NULL) {
    delete posix_time_fraction_;
  }
  posix_time_fraction_ = NULL;
  _internal_metadata_.Clear();
}

bool Timestamp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.types.base.Timestamp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Int64Value posix_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_posix_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value posix_time_fraction = 2 [(.sensoris.protobuf.types.base.exponent) = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_posix_time_fraction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.types.base.Timestamp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.types.base.Timestamp)
  return false;
#undef DO_
}

void Timestamp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.types.base.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value posix_time = 1;
  if (this->has_posix_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_posix_time(), output);
  }

  // .google.protobuf.Int64Value posix_time_fraction = 2 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_posix_time_fraction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_posix_time_fraction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.types.base.Timestamp)
}

::google::protobuf::uint8* Timestamp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value posix_time = 1;
  if (this->has_posix_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_posix_time(), deterministic, target);
  }

  // .google.protobuf.Int64Value posix_time_fraction = 2 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_posix_time_fraction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_posix_time_fraction(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Timestamp)
  return target;
}

size_t Timestamp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Timestamp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Int64Value posix_time = 1;
  if (this->has_posix_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *posix_time_);
  }

  // .google.protobuf.Int64Value posix_time_fraction = 2 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_posix_time_fraction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *posix_time_fraction_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Timestamp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.types.base.Timestamp)
  GOOGLE_DCHECK_NE(&from, this);
  const Timestamp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Timestamp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.types.base.Timestamp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.types.base.Timestamp)
    MergeFrom(*source);
  }
}

void Timestamp::MergeFrom(const Timestamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Timestamp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_posix_time()) {
    mutable_posix_time()->::google::protobuf::Int64Value::MergeFrom(from.posix_time());
  }
  if (from.has_posix_time_fraction()) {
    mutable_posix_time_fraction()->::google::protobuf::Int64Value::MergeFrom(from.posix_time_fraction());
  }
}

void Timestamp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.types.base.Timestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Timestamp::CopyFrom(const Timestamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Timestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Timestamp::IsInitialized() const {
  return true;
}

void Timestamp::Swap(Timestamp* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Timestamp* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Timestamp::UnsafeArenaSwap(Timestamp* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Timestamp::InternalSwap(Timestamp* other) {
  using std::swap;
  swap(posix_time_, other->posix_time_);
  swap(posix_time_fraction_, other->posix_time_fraction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Timestamp::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TimestampInterval::InitAsDefaultInstance() {
  ::sensoris::protobuf::types::base::_TimestampInterval_default_instance_._instance.get_mutable()->start_inclusive_ = const_cast< ::sensoris::protobuf::types::base::Timestamp*>(
      ::sensoris::protobuf::types::base::Timestamp::internal_default_instance());
  ::sensoris::protobuf::types::base::_TimestampInterval_default_instance_._instance.get_mutable()->end_exclusive_ = const_cast< ::sensoris::protobuf::types::base::Timestamp*>(
      ::sensoris::protobuf::types::base::Timestamp::internal_default_instance());
}
void TimestampInterval::unsafe_arena_set_allocated_start_inclusive(
    ::sensoris::protobuf::types::base::Timestamp* start_inclusive) {
  if (GetArenaNoVirtual() == NULL) {
    delete start_inclusive_;
  }
  start_inclusive_ = start_inclusive;
  if (start_inclusive) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.TimestampInterval.start_inclusive)
}
void TimestampInterval::unsafe_arena_set_allocated_end_exclusive(
    ::sensoris::protobuf::types::base::Timestamp* end_exclusive) {
  if (GetArenaNoVirtual() == NULL) {
    delete end_exclusive_;
  }
  end_exclusive_ = end_exclusive;
  if (end_exclusive) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.TimestampInterval.end_exclusive)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimestampInterval::kStartInclusiveFieldNumber;
const int TimestampInterval::kEndExclusiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimestampInterval::TimestampInterval()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_TimestampInterval.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.types.base.TimestampInterval)
}
TimestampInterval::TimestampInterval(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_TimestampInterval.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.TimestampInterval)
}
TimestampInterval::TimestampInterval(const TimestampInterval& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start_inclusive()) {
    start_inclusive_ = new ::sensoris::protobuf::types::base::Timestamp(*from.start_inclusive_);
  } else {
    start_inclusive_ = NULL;
  }
  if (from.has_end_exclusive()) {
    end_exclusive_ = new ::sensoris::protobuf::types::base::Timestamp(*from.end_exclusive_);
  } else {
    end_exclusive_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.TimestampInterval)
}

void TimestampInterval::SharedCtor() {
  ::memset(&start_inclusive_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_exclusive_) -
      reinterpret_cast<char*>(&start_inclusive_)) + sizeof(end_exclusive_));
}

TimestampInterval::~TimestampInterval() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.TimestampInterval)
  SharedDtor();
}

void TimestampInterval::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete start_inclusive_;
  if (this != internal_default_instance()) delete end_exclusive_;
}

void TimestampInterval::ArenaDtor(void* object) {
  TimestampInterval* _this = reinterpret_cast< TimestampInterval* >(object);
  (void)_this;
}
void TimestampInterval::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TimestampInterval::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TimestampInterval::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimestampInterval& TimestampInterval::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_TimestampInterval.base);
  return *internal_default_instance();
}


void TimestampInterval::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.TimestampInterval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && start_inclusive_ != NULL) {
    delete start_inclusive_;
  }
  start_inclusive_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_exclusive_ != NULL) {
    delete end_exclusive_;
  }
  end_exclusive_ = NULL;
  _internal_metadata_.Clear();
}

bool TimestampInterval::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.types.base.TimestampInterval)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sensoris.protobuf.types.base.Timestamp start_inclusive = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_inclusive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.types.base.Timestamp end_exclusive = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_exclusive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.types.base.TimestampInterval)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.types.base.TimestampInterval)
  return false;
#undef DO_
}

void TimestampInterval::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.types.base.TimestampInterval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.Timestamp start_inclusive = 1;
  if (this->has_start_inclusive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_start_inclusive(), output);
  }

  // .sensoris.protobuf.types.base.Timestamp end_exclusive = 2;
  if (this->has_end_exclusive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_end_exclusive(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.types.base.TimestampInterval)
}

::google::protobuf::uint8* TimestampInterval::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.TimestampInterval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.Timestamp start_inclusive = 1;
  if (this->has_start_inclusive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_start_inclusive(), deterministic, target);
  }

  // .sensoris.protobuf.types.base.Timestamp end_exclusive = 2;
  if (this->has_end_exclusive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_end_exclusive(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.TimestampInterval)
  return target;
}

size_t TimestampInterval::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.TimestampInterval)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .sensoris.protobuf.types.base.Timestamp start_inclusive = 1;
  if (this->has_start_inclusive()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_inclusive_);
  }

  // .sensoris.protobuf.types.base.Timestamp end_exclusive = 2;
  if (this->has_end_exclusive()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *end_exclusive_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TimestampInterval::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.types.base.TimestampInterval)
  GOOGLE_DCHECK_NE(&from, this);
  const TimestampInterval* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimestampInterval>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.types.base.TimestampInterval)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.types.base.TimestampInterval)
    MergeFrom(*source);
  }
}

void TimestampInterval::MergeFrom(const TimestampInterval& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.TimestampInterval)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_start_inclusive()) {
    mutable_start_inclusive()->::sensoris::protobuf::types::base::Timestamp::MergeFrom(from.start_inclusive());
  }
  if (from.has_end_exclusive()) {
    mutable_end_exclusive()->::sensoris::protobuf::types::base::Timestamp::MergeFrom(from.end_exclusive());
  }
}

void TimestampInterval::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.types.base.TimestampInterval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimestampInterval::CopyFrom(const TimestampInterval& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.TimestampInterval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimestampInterval::IsInitialized() const {
  return true;
}

void TimestampInterval::Swap(TimestampInterval* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TimestampInterval* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TimestampInterval::UnsafeArenaSwap(TimestampInterval* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TimestampInterval::InternalSwap(TimestampInterval* other) {
  using std::swap;
  swap(start_inclusive_, other->start_inclusive_);
  swap(end_exclusive_, other->end_exclusive_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TimestampInterval::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventEnvelope::InitAsDefaultInstance() {
  ::sensoris::protobuf::types::base::_EventEnvelope_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::types::base::_EventEnvelope_default_instance_._instance.get_mutable()->timestamp_ = const_cast< ::sensoris::protobuf::types::base::Timestamp*>(
      ::sensoris::protobuf::types::base::Timestamp::internal_default_instance());
}
void EventEnvelope::unsafe_arena_set_allocated_id(
    ::google::protobuf::Int64Value* id) {
  if (GetArenaNoVirtual() == NULL) {
    delete id_;
  }
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.EventEnvelope.id)
}
void EventEnvelope::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void EventEnvelope::unsafe_arena_set_allocated_timestamp(
    ::sensoris::protobuf::types::base::Timestamp* timestamp) {
  if (GetArenaNoVirtual() == NULL) {
    delete timestamp_;
  }
  timestamp_ = timestamp;
  if (timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.EventEnvelope.timestamp)
}
void EventEnvelope::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventEnvelope::kIdFieldNumber;
const int EventEnvelope::kTimestampFieldNumber;
const int EventEnvelope::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventEnvelope::EventEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_EventEnvelope.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.types.base.EventEnvelope)
}
EventEnvelope::EventEnvelope(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  extension_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_EventEnvelope.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.EventEnvelope)
}
EventEnvelope::EventEnvelope(const EventEnvelope& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::protobuf::Int64Value(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_timestamp()) {
    timestamp_ = new ::sensoris::protobuf::types::base::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.EventEnvelope)
}

void EventEnvelope::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&id_)) + sizeof(timestamp_));
}

EventEnvelope::~EventEnvelope() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.EventEnvelope)
  SharedDtor();
}

void EventEnvelope::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete timestamp_;
}

void EventEnvelope::ArenaDtor(void* object) {
  EventEnvelope* _this = reinterpret_cast< EventEnvelope* >(object);
  (void)_this;
}
void EventEnvelope::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EventEnvelope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EventEnvelope::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventEnvelope& EventEnvelope::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_EventEnvelope.base);
  return *internal_default_instance();
}


void EventEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.EventEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
  _internal_metadata_.Clear();
}

bool EventEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.types.base.EventEnvelope)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Int64Value id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.types.base.Timestamp timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.types.base.EventEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.types.base.EventEnvelope)
  return false;
#undef DO_
}

void EventEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.types.base.EventEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .sensoris.protobuf.types.base.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_timestamp(), output);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.types.base.EventEnvelope)
}

::google::protobuf::uint8* EventEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.EventEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .sensoris.protobuf.types.base.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_timestamp(), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.EventEnvelope)
  return target;
}

size_t EventEnvelope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.EventEnvelope)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.protobuf.Int64Value id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .sensoris.protobuf.types.base.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timestamp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.types.base.EventEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  const EventEnvelope* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.types.base.EventEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.types.base.EventEnvelope)
    MergeFrom(*source);
  }
}

void EventEnvelope::MergeFrom(const EventEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.EventEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::protobuf::Int64Value::MergeFrom(from.id());
  }
  if (from.has_timestamp()) {
    mutable_timestamp()->::sensoris::protobuf::types::base::Timestamp::MergeFrom(from.timestamp());
  }
}

void EventEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.types.base.EventEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventEnvelope::CopyFrom(const EventEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.EventEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventEnvelope::IsInitialized() const {
  return true;
}

void EventEnvelope::Swap(EventEnvelope* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EventEnvelope* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EventEnvelope::UnsafeArenaSwap(EventEnvelope* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EventEnvelope::InternalSwap(EventEnvelope* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EventEnvelope::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventDetectionStatus::InitAsDefaultInstance() {
  ::sensoris::protobuf::types::base::_EventDetectionStatus_default_instance_._instance.get_mutable()->confidence_ = const_cast< ::sensoris::protobuf::types::base::Confidence*>(
      ::sensoris::protobuf::types::base::Confidence::internal_default_instance());
}
void EventDetectionStatus::unsafe_arena_set_allocated_confidence(
    ::sensoris::protobuf::types::base::Confidence* confidence) {
  if (GetArenaNoVirtual() == NULL) {
    delete confidence_;
  }
  confidence_ = confidence;
  if (confidence) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.EventDetectionStatus.confidence)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventDetectionStatus::kTypeFieldNumber;
const int EventDetectionStatus::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventDetectionStatus::EventDetectionStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_EventDetectionStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.types.base.EventDetectionStatus)
}
EventDetectionStatus::EventDetectionStatus(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_EventDetectionStatus.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.EventDetectionStatus)
}
EventDetectionStatus::EventDetectionStatus(const EventDetectionStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_confidence()) {
    confidence_ = new ::sensoris::protobuf::types::base::Confidence(*from.confidence_);
  } else {
    confidence_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.EventDetectionStatus)
}

void EventDetectionStatus::SharedCtor() {
  ::memset(&confidence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&confidence_)) + sizeof(type_));
}

EventDetectionStatus::~EventDetectionStatus() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.EventDetectionStatus)
  SharedDtor();
}

void EventDetectionStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete confidence_;
}

void EventDetectionStatus::ArenaDtor(void* object) {
  EventDetectionStatus* _this = reinterpret_cast< EventDetectionStatus* >(object);
  (void)_this;
}
void EventDetectionStatus::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EventDetectionStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EventDetectionStatus::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventDetectionStatus& EventDetectionStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_EventDetectionStatus.base);
  return *internal_default_instance();
}


void EventDetectionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.EventDetectionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && confidence_ != NULL) {
    delete confidence_;
  }
  confidence_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool EventDetectionStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.types.base.EventDetectionStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sensoris.protobuf.types.base.EventDetectionStatus.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::sensoris::protobuf::types::base::EventDetectionStatus_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.types.base.Confidence confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_confidence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.types.base.EventDetectionStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.types.base.EventDetectionStatus)
  return false;
#undef DO_
}

void EventDetectionStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.types.base.EventDetectionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.EventDetectionStatus.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if (this->has_confidence()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_confidence(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.types.base.EventDetectionStatus)
}

::google::protobuf::uint8* EventDetectionStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.EventDetectionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.EventDetectionStatus.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if (this->has_confidence()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_confidence(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.EventDetectionStatus)
  return target;
}

size_t EventDetectionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.EventDetectionStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if (this->has_confidence()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *confidence_);
  }

  // .sensoris.protobuf.types.base.EventDetectionStatus.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventDetectionStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.types.base.EventDetectionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const EventDetectionStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventDetectionStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.types.base.EventDetectionStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.types.base.EventDetectionStatus)
    MergeFrom(*source);
  }
}

void EventDetectionStatus::MergeFrom(const EventDetectionStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.EventDetectionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_confidence()) {
    mutable_confidence()->::sensoris::protobuf::types::base::Confidence::MergeFrom(from.confidence());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void EventDetectionStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.types.base.EventDetectionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventDetectionStatus::CopyFrom(const EventDetectionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.EventDetectionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventDetectionStatus::IsInitialized() const {
  return true;
}

void EventDetectionStatus::Swap(EventDetectionStatus* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EventDetectionStatus* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EventDetectionStatus::UnsafeArenaSwap(EventDetectionStatus* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EventDetectionStatus::InternalSwap(EventDetectionStatus* other) {
  using std::swap;
  swap(confidence_, other->confidence_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EventDetectionStatus::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CategoryEnvelope::InitAsDefaultInstance() {
}
void CategoryEnvelope::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CategoryEnvelope::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CategoryEnvelope::CategoryEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_CategoryEnvelope.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.types.base.CategoryEnvelope)
}
CategoryEnvelope::CategoryEnvelope(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  extension_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_CategoryEnvelope.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.CategoryEnvelope)
}
CategoryEnvelope::CategoryEnvelope(const CategoryEnvelope& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.CategoryEnvelope)
}

void CategoryEnvelope::SharedCtor() {
}

CategoryEnvelope::~CategoryEnvelope() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.CategoryEnvelope)
  SharedDtor();
}

void CategoryEnvelope::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void CategoryEnvelope::ArenaDtor(void* object) {
  CategoryEnvelope* _this = reinterpret_cast< CategoryEnvelope* >(object);
  (void)_this;
}
void CategoryEnvelope::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CategoryEnvelope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CategoryEnvelope::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CategoryEnvelope& CategoryEnvelope::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_CategoryEnvelope.base);
  return *internal_default_instance();
}


void CategoryEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.CategoryEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  _internal_metadata_.Clear();
}

bool CategoryEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.types.base.CategoryEnvelope)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.protobuf.Any extension = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.types.base.CategoryEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.types.base.CategoryEnvelope)
  return false;
#undef DO_
}

void CategoryEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.types.base.CategoryEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.types.base.CategoryEnvelope)
}

::google::protobuf::uint8* CategoryEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.CategoryEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.CategoryEnvelope)
  return target;
}

size_t CategoryEnvelope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.CategoryEnvelope)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CategoryEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.types.base.CategoryEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  const CategoryEnvelope* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CategoryEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.types.base.CategoryEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.types.base.CategoryEnvelope)
    MergeFrom(*source);
  }
}

void CategoryEnvelope::MergeFrom(const CategoryEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.CategoryEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
}

void CategoryEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.types.base.CategoryEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CategoryEnvelope::CopyFrom(const CategoryEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.CategoryEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CategoryEnvelope::IsInitialized() const {
  return true;
}

void CategoryEnvelope::Swap(CategoryEnvelope* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CategoryEnvelope* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CategoryEnvelope::UnsafeArenaSwap(CategoryEnvelope* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CategoryEnvelope::InternalSwap(CategoryEnvelope* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CategoryEnvelope::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Int64StatisticMeasure::InitAsDefaultInstance() {
  ::sensoris::protobuf::types::base::_Int64StatisticMeasure_default_instance_._instance.get_mutable()->timestamp_interval_ = const_cast< ::sensoris::protobuf::types::base::TimestampInterval*>(
      ::sensoris::protobuf::types::base::TimestampInterval::internal_default_instance());
}
void Int64StatisticMeasure::unsafe_arena_set_allocated_timestamp_interval(
    ::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval) {
  if (GetArenaNoVirtual() == NULL) {
    delete timestamp_interval_;
  }
  timestamp_interval_ = timestamp_interval;
  if (timestamp_interval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64StatisticMeasure.timestamp_interval)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int64StatisticMeasure::kTimestampIntervalFieldNumber;
const int Int64StatisticMeasure::kTypeFieldNumber;
const int Int64StatisticMeasure::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int64StatisticMeasure::Int64StatisticMeasure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64StatisticMeasure.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.types.base.Int64StatisticMeasure)
}
Int64StatisticMeasure::Int64StatisticMeasure(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64StatisticMeasure.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Int64StatisticMeasure)
}
Int64StatisticMeasure::Int64StatisticMeasure(const Int64StatisticMeasure& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_timestamp_interval()) {
    timestamp_interval_ = new ::sensoris::protobuf::types::base::TimestampInterval(*from.timestamp_interval_);
  } else {
    timestamp_interval_ = NULL;
  }
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&value_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Int64StatisticMeasure)
}

void Int64StatisticMeasure::SharedCtor() {
  ::memset(&timestamp_interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&timestamp_interval_)) + sizeof(type_));
}

Int64StatisticMeasure::~Int64StatisticMeasure() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Int64StatisticMeasure)
  SharedDtor();
}

void Int64StatisticMeasure::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete timestamp_interval_;
}

void Int64StatisticMeasure::ArenaDtor(void* object) {
  Int64StatisticMeasure* _this = reinterpret_cast< Int64StatisticMeasure* >(object);
  (void)_this;
}
void Int64StatisticMeasure::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Int64StatisticMeasure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Int64StatisticMeasure::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Int64StatisticMeasure& Int64StatisticMeasure::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64StatisticMeasure.base);
  return *internal_default_instance();
}


void Int64StatisticMeasure::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Int64StatisticMeasure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && timestamp_interval_ != NULL) {
    delete timestamp_interval_;
  }
  timestamp_interval_ = NULL;
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&value_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool Int64StatisticMeasure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.types.base.Int64StatisticMeasure)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.types.base.StatisticMeasureType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::sensoris::protobuf::types::base::StatisticMeasureType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.types.base.Int64StatisticMeasure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.types.base.Int64StatisticMeasure)
  return false;
#undef DO_
}

void Int64StatisticMeasure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.types.base.Int64StatisticMeasure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  if (this->has_timestamp_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_timestamp_interval(), output);
  }

  // .sensoris.protobuf.types.base.StatisticMeasureType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // int64 value = 3;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.types.base.Int64StatisticMeasure)
}

::google::protobuf::uint8* Int64StatisticMeasure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Int64StatisticMeasure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  if (this->has_timestamp_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_timestamp_interval(), deterministic, target);
  }

  // .sensoris.protobuf.types.base.StatisticMeasureType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // int64 value = 3;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Int64StatisticMeasure)
  return target;
}

size_t Int64StatisticMeasure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Int64StatisticMeasure)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  if (this->has_timestamp_interval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timestamp_interval_);
  }

  // int64 value = 3;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->value());
  }

  // .sensoris.protobuf.types.base.StatisticMeasureType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Int64StatisticMeasure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.types.base.Int64StatisticMeasure)
  GOOGLE_DCHECK_NE(&from, this);
  const Int64StatisticMeasure* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Int64StatisticMeasure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.types.base.Int64StatisticMeasure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.types.base.Int64StatisticMeasure)
    MergeFrom(*source);
  }
}

void Int64StatisticMeasure::MergeFrom(const Int64StatisticMeasure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Int64StatisticMeasure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_timestamp_interval()) {
    mutable_timestamp_interval()->::sensoris::protobuf::types::base::TimestampInterval::MergeFrom(from.timestamp_interval());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Int64StatisticMeasure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.types.base.Int64StatisticMeasure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Int64StatisticMeasure::CopyFrom(const Int64StatisticMeasure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Int64StatisticMeasure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Int64StatisticMeasure::IsInitialized() const {
  return true;
}

void Int64StatisticMeasure::Swap(Int64StatisticMeasure* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Int64StatisticMeasure* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Int64StatisticMeasure::UnsafeArenaSwap(Int64StatisticMeasure* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Int64StatisticMeasure::InternalSwap(Int64StatisticMeasure* other) {
  using std::swap;
  swap(timestamp_interval_, other->timestamp_interval_);
  swap(value_, other->value_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Int64StatisticMeasure::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Int64StatisticMeasureAndAccuracy::InitAsDefaultInstance() {
  ::sensoris::protobuf::types::base::_Int64StatisticMeasureAndAccuracy_default_instance_._instance.get_mutable()->timestamp_interval_ = const_cast< ::sensoris::protobuf::types::base::TimestampInterval*>(
      ::sensoris::protobuf::types::base::TimestampInterval::internal_default_instance());
  ::sensoris::protobuf::types::base::_Int64StatisticMeasureAndAccuracy_default_instance_._instance.get_mutable()->accuracy_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
void Int64StatisticMeasureAndAccuracy::unsafe_arena_set_allocated_timestamp_interval(
    ::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval) {
  if (GetArenaNoVirtual() == NULL) {
    delete timestamp_interval_;
  }
  timestamp_interval_ = timestamp_interval;
  if (timestamp_interval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy.timestamp_interval)
}
void Int64StatisticMeasureAndAccuracy::unsafe_arena_set_allocated_accuracy(
    ::google::protobuf::Int64Value* accuracy) {
  if (GetArenaNoVirtual() == NULL) {
    delete accuracy_;
  }
  accuracy_ = accuracy;
  if (accuracy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy.accuracy)
}
void Int64StatisticMeasureAndAccuracy::clear_accuracy() {
  if (GetArenaNoVirtual() == NULL && accuracy_ != NULL) {
    delete accuracy_;
  }
  accuracy_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int64StatisticMeasureAndAccuracy::kTimestampIntervalFieldNumber;
const int Int64StatisticMeasureAndAccuracy::kTypeFieldNumber;
const int Int64StatisticMeasureAndAccuracy::kValueFieldNumber;
const int Int64StatisticMeasureAndAccuracy::kAccuracyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int64StatisticMeasureAndAccuracy::Int64StatisticMeasureAndAccuracy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64StatisticMeasureAndAccuracy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
}
Int64StatisticMeasureAndAccuracy::Int64StatisticMeasureAndAccuracy(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64StatisticMeasureAndAccuracy.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
}
Int64StatisticMeasureAndAccuracy::Int64StatisticMeasureAndAccuracy(const Int64StatisticMeasureAndAccuracy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_timestamp_interval()) {
    timestamp_interval_ = new ::sensoris::protobuf::types::base::TimestampInterval(*from.timestamp_interval_);
  } else {
    timestamp_interval_ = NULL;
  }
  if (from.has_accuracy()) {
    accuracy_ = new ::google::protobuf::Int64Value(*from.accuracy_);
  } else {
    accuracy_ = NULL;
  }
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&value_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
}

void Int64StatisticMeasureAndAccuracy::SharedCtor() {
  ::memset(&timestamp_interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&timestamp_interval_)) + sizeof(type_));
}

Int64StatisticMeasureAndAccuracy::~Int64StatisticMeasureAndAccuracy() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
  SharedDtor();
}

void Int64StatisticMeasureAndAccuracy::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete timestamp_interval_;
  if (this != internal_default_instance()) delete accuracy_;
}

void Int64StatisticMeasureAndAccuracy::ArenaDtor(void* object) {
  Int64StatisticMeasureAndAccuracy* _this = reinterpret_cast< Int64StatisticMeasureAndAccuracy* >(object);
  (void)_this;
}
void Int64StatisticMeasureAndAccuracy::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Int64StatisticMeasureAndAccuracy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Int64StatisticMeasureAndAccuracy::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Int64StatisticMeasureAndAccuracy& Int64StatisticMeasureAndAccuracy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64StatisticMeasureAndAccuracy.base);
  return *internal_default_instance();
}


void Int64StatisticMeasureAndAccuracy::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && timestamp_interval_ != NULL) {
    delete timestamp_interval_;
  }
  timestamp_interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && accuracy_ != NULL) {
    delete accuracy_;
  }
  accuracy_ = NULL;
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&value_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool Int64StatisticMeasureAndAccuracy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.types.base.StatisticMeasureType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::sensoris::protobuf::types::base::StatisticMeasureType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value accuracy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_accuracy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
  return false;
#undef DO_
}

void Int64StatisticMeasureAndAccuracy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  if (this->has_timestamp_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_timestamp_interval(), output);
  }

  // .sensoris.protobuf.types.base.StatisticMeasureType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // int64 value = 3;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->value(), output);
  }

  // .google.protobuf.Int64Value accuracy = 4;
  if (this->has_accuracy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_accuracy(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
}

::google::protobuf::uint8* Int64StatisticMeasureAndAccuracy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  if (this->has_timestamp_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_timestamp_interval(), deterministic, target);
  }

  // .sensoris.protobuf.types.base.StatisticMeasureType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // int64 value = 3;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->value(), target);
  }

  // .google.protobuf.Int64Value accuracy = 4;
  if (this->has_accuracy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_accuracy(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
  return target;
}

size_t Int64StatisticMeasureAndAccuracy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  if (this->has_timestamp_interval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timestamp_interval_);
  }

  // .google.protobuf.Int64Value accuracy = 4;
  if (this->has_accuracy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *accuracy_);
  }

  // int64 value = 3;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->value());
  }

  // .sensoris.protobuf.types.base.StatisticMeasureType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Int64StatisticMeasureAndAccuracy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
  GOOGLE_DCHECK_NE(&from, this);
  const Int64StatisticMeasureAndAccuracy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Int64StatisticMeasureAndAccuracy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
    MergeFrom(*source);
  }
}

void Int64StatisticMeasureAndAccuracy::MergeFrom(const Int64StatisticMeasureAndAccuracy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_timestamp_interval()) {
    mutable_timestamp_interval()->::sensoris::protobuf::types::base::TimestampInterval::MergeFrom(from.timestamp_interval());
  }
  if (from.has_accuracy()) {
    mutable_accuracy()->::google::protobuf::Int64Value::MergeFrom(from.accuracy());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Int64StatisticMeasureAndAccuracy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Int64StatisticMeasureAndAccuracy::CopyFrom(const Int64StatisticMeasureAndAccuracy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Int64StatisticMeasureAndAccuracy::IsInitialized() const {
  return true;
}

void Int64StatisticMeasureAndAccuracy::Swap(Int64StatisticMeasureAndAccuracy* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Int64StatisticMeasureAndAccuracy* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Int64StatisticMeasureAndAccuracy::UnsafeArenaSwap(Int64StatisticMeasureAndAccuracy* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Int64StatisticMeasureAndAccuracy::InternalSwap(Int64StatisticMeasureAndAccuracy* other) {
  using std::swap;
  swap(timestamp_interval_, other->timestamp_interval_);
  swap(accuracy_, other->accuracy_);
  swap(value_, other->value_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Int64StatisticMeasureAndAccuracy::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AbsoluteInt64Histogram_Bin::InitAsDefaultInstance() {
  ::sensoris::protobuf::types::base::_AbsoluteInt64Histogram_Bin_default_instance_._instance.get_mutable()->lower_endpoint_inclusive_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::types::base::_AbsoluteInt64Histogram_Bin_default_instance_._instance.get_mutable()->frequency_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
void AbsoluteInt64Histogram_Bin::unsafe_arena_set_allocated_lower_endpoint_inclusive(
    ::google::protobuf::Int64Value* lower_endpoint_inclusive) {
  if (GetArenaNoVirtual() == NULL) {
    delete lower_endpoint_inclusive_;
  }
  lower_endpoint_inclusive_ = lower_endpoint_inclusive;
  if (lower_endpoint_inclusive) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin.lower_endpoint_inclusive)
}
void AbsoluteInt64Histogram_Bin::clear_lower_endpoint_inclusive() {
  if (GetArenaNoVirtual() == NULL && lower_endpoint_inclusive_ != NULL) {
    delete lower_endpoint_inclusive_;
  }
  lower_endpoint_inclusive_ = NULL;
}
void AbsoluteInt64Histogram_Bin::unsafe_arena_set_allocated_frequency(
    ::google::protobuf::Int64Value* frequency) {
  if (GetArenaNoVirtual() == NULL) {
    delete frequency_;
  }
  frequency_ = frequency;
  if (frequency) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin.frequency)
}
void AbsoluteInt64Histogram_Bin::clear_frequency() {
  if (GetArenaNoVirtual() == NULL && frequency_ != NULL) {
    delete frequency_;
  }
  frequency_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbsoluteInt64Histogram_Bin::kLowerEndpointInclusiveFieldNumber;
const int AbsoluteInt64Histogram_Bin::kFrequencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbsoluteInt64Histogram_Bin::AbsoluteInt64Histogram_Bin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_AbsoluteInt64Histogram_Bin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
}
AbsoluteInt64Histogram_Bin::AbsoluteInt64Histogram_Bin(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_AbsoluteInt64Histogram_Bin.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
}
AbsoluteInt64Histogram_Bin::AbsoluteInt64Histogram_Bin(const AbsoluteInt64Histogram_Bin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lower_endpoint_inclusive()) {
    lower_endpoint_inclusive_ = new ::google::protobuf::Int64Value(*from.lower_endpoint_inclusive_);
  } else {
    lower_endpoint_inclusive_ = NULL;
  }
  if (from.has_frequency()) {
    frequency_ = new ::google::protobuf::Int64Value(*from.frequency_);
  } else {
    frequency_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
}

void AbsoluteInt64Histogram_Bin::SharedCtor() {
  ::memset(&lower_endpoint_inclusive_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frequency_) -
      reinterpret_cast<char*>(&lower_endpoint_inclusive_)) + sizeof(frequency_));
}

AbsoluteInt64Histogram_Bin::~AbsoluteInt64Histogram_Bin() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
  SharedDtor();
}

void AbsoluteInt64Histogram_Bin::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete lower_endpoint_inclusive_;
  if (this != internal_default_instance()) delete frequency_;
}

void AbsoluteInt64Histogram_Bin::ArenaDtor(void* object) {
  AbsoluteInt64Histogram_Bin* _this = reinterpret_cast< AbsoluteInt64Histogram_Bin* >(object);
  (void)_this;
}
void AbsoluteInt64Histogram_Bin::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AbsoluteInt64Histogram_Bin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AbsoluteInt64Histogram_Bin::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AbsoluteInt64Histogram_Bin& AbsoluteInt64Histogram_Bin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_AbsoluteInt64Histogram_Bin.base);
  return *internal_default_instance();
}


void AbsoluteInt64Histogram_Bin::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && lower_endpoint_inclusive_ != NULL) {
    delete lower_endpoint_inclusive_;
  }
  lower_endpoint_inclusive_ = NULL;
  if (GetArenaNoVirtual() == NULL && frequency_ != NULL) {
    delete frequency_;
  }
  frequency_ = NULL;
  _internal_metadata_.Clear();
}

bool AbsoluteInt64Histogram_Bin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Int64Value lower_endpoint_inclusive = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lower_endpoint_inclusive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value frequency = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_frequency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
  return false;
#undef DO_
}

void AbsoluteInt64Histogram_Bin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value lower_endpoint_inclusive = 1;
  if (this->has_lower_endpoint_inclusive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_lower_endpoint_inclusive(), output);
  }

  // .google.protobuf.Int64Value frequency = 2;
  if (this->has_frequency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_frequency(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
}

::google::protobuf::uint8* AbsoluteInt64Histogram_Bin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value lower_endpoint_inclusive = 1;
  if (this->has_lower_endpoint_inclusive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_lower_endpoint_inclusive(), deterministic, target);
  }

  // .google.protobuf.Int64Value frequency = 2;
  if (this->has_frequency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_frequency(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
  return target;
}

size_t AbsoluteInt64Histogram_Bin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Int64Value lower_endpoint_inclusive = 1;
  if (this->has_lower_endpoint_inclusive()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lower_endpoint_inclusive_);
  }

  // .google.protobuf.Int64Value frequency = 2;
  if (this->has_frequency()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *frequency_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AbsoluteInt64Histogram_Bin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
  GOOGLE_DCHECK_NE(&from, this);
  const AbsoluteInt64Histogram_Bin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AbsoluteInt64Histogram_Bin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
    MergeFrom(*source);
  }
}

void AbsoluteInt64Histogram_Bin::MergeFrom(const AbsoluteInt64Histogram_Bin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lower_endpoint_inclusive()) {
    mutable_lower_endpoint_inclusive()->::google::protobuf::Int64Value::MergeFrom(from.lower_endpoint_inclusive());
  }
  if (from.has_frequency()) {
    mutable_frequency()->::google::protobuf::Int64Value::MergeFrom(from.frequency());
  }
}

void AbsoluteInt64Histogram_Bin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbsoluteInt64Histogram_Bin::CopyFrom(const AbsoluteInt64Histogram_Bin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbsoluteInt64Histogram_Bin::IsInitialized() const {
  return true;
}

void AbsoluteInt64Histogram_Bin::Swap(AbsoluteInt64Histogram_Bin* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AbsoluteInt64Histogram_Bin* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AbsoluteInt64Histogram_Bin::UnsafeArenaSwap(AbsoluteInt64Histogram_Bin* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AbsoluteInt64Histogram_Bin::InternalSwap(AbsoluteInt64Histogram_Bin* other) {
  using std::swap;
  swap(lower_endpoint_inclusive_, other->lower_endpoint_inclusive_);
  swap(frequency_, other->frequency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AbsoluteInt64Histogram_Bin::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AbsoluteInt64Histogram::InitAsDefaultInstance() {
  ::sensoris::protobuf::types::base::_AbsoluteInt64Histogram_default_instance_._instance.get_mutable()->timestamp_interval_ = const_cast< ::sensoris::protobuf::types::base::TimestampInterval*>(
      ::sensoris::protobuf::types::base::TimestampInterval::internal_default_instance());
  ::sensoris::protobuf::types::base::_AbsoluteInt64Histogram_default_instance_._instance.get_mutable()->total_elements_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::types::base::_AbsoluteInt64Histogram_default_instance_._instance.get_mutable()->upper_endpoint_inclusive_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
void AbsoluteInt64Histogram::unsafe_arena_set_allocated_timestamp_interval(
    ::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval) {
  if (GetArenaNoVirtual() == NULL) {
    delete timestamp_interval_;
  }
  timestamp_interval_ = timestamp_interval;
  if (timestamp_interval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.AbsoluteInt64Histogram.timestamp_interval)
}
void AbsoluteInt64Histogram::unsafe_arena_set_allocated_total_elements(
    ::google::protobuf::Int64Value* total_elements) {
  if (GetArenaNoVirtual() == NULL) {
    delete total_elements_;
  }
  total_elements_ = total_elements;
  if (total_elements) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.AbsoluteInt64Histogram.total_elements)
}
void AbsoluteInt64Histogram::clear_total_elements() {
  if (GetArenaNoVirtual() == NULL && total_elements_ != NULL) {
    delete total_elements_;
  }
  total_elements_ = NULL;
}
void AbsoluteInt64Histogram::unsafe_arena_set_allocated_upper_endpoint_inclusive(
    ::google::protobuf::Int64Value* upper_endpoint_inclusive) {
  if (GetArenaNoVirtual() == NULL) {
    delete upper_endpoint_inclusive_;
  }
  upper_endpoint_inclusive_ = upper_endpoint_inclusive;
  if (upper_endpoint_inclusive) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.AbsoluteInt64Histogram.upper_endpoint_inclusive)
}
void AbsoluteInt64Histogram::clear_upper_endpoint_inclusive() {
  if (GetArenaNoVirtual() == NULL && upper_endpoint_inclusive_ != NULL) {
    delete upper_endpoint_inclusive_;
  }
  upper_endpoint_inclusive_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbsoluteInt64Histogram::kTimestampIntervalFieldNumber;
const int AbsoluteInt64Histogram::kTotalElementsFieldNumber;
const int AbsoluteInt64Histogram::kBinFieldNumber;
const int AbsoluteInt64Histogram::kUpperEndpointInclusiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbsoluteInt64Histogram::AbsoluteInt64Histogram()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_AbsoluteInt64Histogram.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
}
AbsoluteInt64Histogram::AbsoluteInt64Histogram(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  bin_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_AbsoluteInt64Histogram.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
}
AbsoluteInt64Histogram::AbsoluteInt64Histogram(const AbsoluteInt64Histogram& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bin_(from.bin_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_timestamp_interval()) {
    timestamp_interval_ = new ::sensoris::protobuf::types::base::TimestampInterval(*from.timestamp_interval_);
  } else {
    timestamp_interval_ = NULL;
  }
  if (from.has_total_elements()) {
    total_elements_ = new ::google::protobuf::Int64Value(*from.total_elements_);
  } else {
    total_elements_ = NULL;
  }
  if (from.has_upper_endpoint_inclusive()) {
    upper_endpoint_inclusive_ = new ::google::protobuf::Int64Value(*from.upper_endpoint_inclusive_);
  } else {
    upper_endpoint_inclusive_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
}

void AbsoluteInt64Histogram::SharedCtor() {
  ::memset(&timestamp_interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upper_endpoint_inclusive_) -
      reinterpret_cast<char*>(&timestamp_interval_)) + sizeof(upper_endpoint_inclusive_));
}

AbsoluteInt64Histogram::~AbsoluteInt64Histogram() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
  SharedDtor();
}

void AbsoluteInt64Histogram::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete timestamp_interval_;
  if (this != internal_default_instance()) delete total_elements_;
  if (this != internal_default_instance()) delete upper_endpoint_inclusive_;
}

void AbsoluteInt64Histogram::ArenaDtor(void* object) {
  AbsoluteInt64Histogram* _this = reinterpret_cast< AbsoluteInt64Histogram* >(object);
  (void)_this;
}
void AbsoluteInt64Histogram::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AbsoluteInt64Histogram::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AbsoluteInt64Histogram::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AbsoluteInt64Histogram& AbsoluteInt64Histogram::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_AbsoluteInt64Histogram.base);
  return *internal_default_instance();
}


void AbsoluteInt64Histogram::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bin_.Clear();
  if (GetArenaNoVirtual() == NULL && timestamp_interval_ != NULL) {
    delete timestamp_interval_;
  }
  timestamp_interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && total_elements_ != NULL) {
    delete total_elements_;
  }
  total_elements_ = NULL;
  if (GetArenaNoVirtual() == NULL && upper_endpoint_inclusive_ != NULL) {
    delete upper_endpoint_inclusive_;
  }
  upper_endpoint_inclusive_ = NULL;
  _internal_metadata_.Clear();
}

bool AbsoluteInt64Histogram::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value total_elements = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_total_elements()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin bin = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value upper_endpoint_inclusive = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upper_endpoint_inclusive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
  return false;
#undef DO_
}

void AbsoluteInt64Histogram::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  if (this->has_timestamp_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_timestamp_interval(), output);
  }

  // .google.protobuf.Int64Value total_elements = 2;
  if (this->has_total_elements()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_total_elements(), output);
  }

  // repeated .sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin bin = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bin_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->bin(static_cast<int>(i)),
      output);
  }

  // .google.protobuf.Int64Value upper_endpoint_inclusive = 4;
  if (this->has_upper_endpoint_inclusive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_upper_endpoint_inclusive(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
}

::google::protobuf::uint8* AbsoluteInt64Histogram::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  if (this->has_timestamp_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_timestamp_interval(), deterministic, target);
  }

  // .google.protobuf.Int64Value total_elements = 2;
  if (this->has_total_elements()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_total_elements(), deterministic, target);
  }

  // repeated .sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin bin = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bin_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->bin(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Int64Value upper_endpoint_inclusive = 4;
  if (this->has_upper_endpoint_inclusive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_upper_endpoint_inclusive(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
  return target;
}

size_t AbsoluteInt64Histogram::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin bin = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->bin_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bin(static_cast<int>(i)));
    }
  }

  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  if (this->has_timestamp_interval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timestamp_interval_);
  }

  // .google.protobuf.Int64Value total_elements = 2;
  if (this->has_total_elements()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *total_elements_);
  }

  // .google.protobuf.Int64Value upper_endpoint_inclusive = 4;
  if (this->has_upper_endpoint_inclusive()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *upper_endpoint_inclusive_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AbsoluteInt64Histogram::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
  GOOGLE_DCHECK_NE(&from, this);
  const AbsoluteInt64Histogram* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AbsoluteInt64Histogram>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
    MergeFrom(*source);
  }
}

void AbsoluteInt64Histogram::MergeFrom(const AbsoluteInt64Histogram& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bin_.MergeFrom(from.bin_);
  if (from.has_timestamp_interval()) {
    mutable_timestamp_interval()->::sensoris::protobuf::types::base::TimestampInterval::MergeFrom(from.timestamp_interval());
  }
  if (from.has_total_elements()) {
    mutable_total_elements()->::google::protobuf::Int64Value::MergeFrom(from.total_elements());
  }
  if (from.has_upper_endpoint_inclusive()) {
    mutable_upper_endpoint_inclusive()->::google::protobuf::Int64Value::MergeFrom(from.upper_endpoint_inclusive());
  }
}

void AbsoluteInt64Histogram::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbsoluteInt64Histogram::CopyFrom(const AbsoluteInt64Histogram& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbsoluteInt64Histogram::IsInitialized() const {
  return true;
}

void AbsoluteInt64Histogram::Swap(AbsoluteInt64Histogram* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AbsoluteInt64Histogram* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AbsoluteInt64Histogram::UnsafeArenaSwap(AbsoluteInt64Histogram* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AbsoluteInt64Histogram::InternalSwap(AbsoluteInt64Histogram* other) {
  using std::swap;
  CastToBase(&bin_)->InternalSwap(CastToBase(&other->bin_));
  swap(timestamp_interval_, other->timestamp_interval_);
  swap(total_elements_, other->total_elements_);
  swap(upper_endpoint_inclusive_, other->upper_endpoint_inclusive_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AbsoluteInt64Histogram::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RelativeInt64Histogram_Bin::InitAsDefaultInstance() {
  ::sensoris::protobuf::types::base::_RelativeInt64Histogram_Bin_default_instance_._instance.get_mutable()->lower_endpoint_inclusive_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::types::base::_RelativeInt64Histogram_Bin_default_instance_._instance.get_mutable()->relative_frequency_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
void RelativeInt64Histogram_Bin::unsafe_arena_set_allocated_lower_endpoint_inclusive(
    ::google::protobuf::Int64Value* lower_endpoint_inclusive) {
  if (GetArenaNoVirtual() == NULL) {
    delete lower_endpoint_inclusive_;
  }
  lower_endpoint_inclusive_ = lower_endpoint_inclusive;
  if (lower_endpoint_inclusive) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin.lower_endpoint_inclusive)
}
void RelativeInt64Histogram_Bin::clear_lower_endpoint_inclusive() {
  if (GetArenaNoVirtual() == NULL && lower_endpoint_inclusive_ != NULL) {
    delete lower_endpoint_inclusive_;
  }
  lower_endpoint_inclusive_ = NULL;
}
void RelativeInt64Histogram_Bin::unsafe_arena_set_allocated_relative_frequency(
    ::google::protobuf::Int64Value* relative_frequency) {
  if (GetArenaNoVirtual() == NULL) {
    delete relative_frequency_;
  }
  relative_frequency_ = relative_frequency;
  if (relative_frequency) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin.relative_frequency)
}
void RelativeInt64Histogram_Bin::clear_relative_frequency() {
  if (GetArenaNoVirtual() == NULL && relative_frequency_ != NULL) {
    delete relative_frequency_;
  }
  relative_frequency_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RelativeInt64Histogram_Bin::kLowerEndpointInclusiveFieldNumber;
const int RelativeInt64Histogram_Bin::kRelativeFrequencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RelativeInt64Histogram_Bin::RelativeInt64Histogram_Bin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_RelativeInt64Histogram_Bin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
}
RelativeInt64Histogram_Bin::RelativeInt64Histogram_Bin(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_RelativeInt64Histogram_Bin.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
}
RelativeInt64Histogram_Bin::RelativeInt64Histogram_Bin(const RelativeInt64Histogram_Bin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lower_endpoint_inclusive()) {
    lower_endpoint_inclusive_ = new ::google::protobuf::Int64Value(*from.lower_endpoint_inclusive_);
  } else {
    lower_endpoint_inclusive_ = NULL;
  }
  if (from.has_relative_frequency()) {
    relative_frequency_ = new ::google::protobuf::Int64Value(*from.relative_frequency_);
  } else {
    relative_frequency_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
}

void RelativeInt64Histogram_Bin::SharedCtor() {
  ::memset(&lower_endpoint_inclusive_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&relative_frequency_) -
      reinterpret_cast<char*>(&lower_endpoint_inclusive_)) + sizeof(relative_frequency_));
}

RelativeInt64Histogram_Bin::~RelativeInt64Histogram_Bin() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
  SharedDtor();
}

void RelativeInt64Histogram_Bin::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete lower_endpoint_inclusive_;
  if (this != internal_default_instance()) delete relative_frequency_;
}

void RelativeInt64Histogram_Bin::ArenaDtor(void* object) {
  RelativeInt64Histogram_Bin* _this = reinterpret_cast< RelativeInt64Histogram_Bin* >(object);
  (void)_this;
}
void RelativeInt64Histogram_Bin::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RelativeInt64Histogram_Bin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RelativeInt64Histogram_Bin::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RelativeInt64Histogram_Bin& RelativeInt64Histogram_Bin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_RelativeInt64Histogram_Bin.base);
  return *internal_default_instance();
}


void RelativeInt64Histogram_Bin::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && lower_endpoint_inclusive_ != NULL) {
    delete lower_endpoint_inclusive_;
  }
  lower_endpoint_inclusive_ = NULL;
  if (GetArenaNoVirtual() == NULL && relative_frequency_ != NULL) {
    delete relative_frequency_;
  }
  relative_frequency_ = NULL;
  _internal_metadata_.Clear();
}

bool RelativeInt64Histogram_Bin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Int64Value lower_endpoint_inclusive = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lower_endpoint_inclusive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value relative_frequency = 3 [(.sensoris.protobuf.types.base.exponent) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_relative_frequency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
  return false;
#undef DO_
}

void RelativeInt64Histogram_Bin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value lower_endpoint_inclusive = 1;
  if (this->has_lower_endpoint_inclusive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_lower_endpoint_inclusive(), output);
  }

  // .google.protobuf.Int64Value relative_frequency = 3 [(.sensoris.protobuf.types.base.exponent) = 1];
  if (this->has_relative_frequency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_relative_frequency(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
}

::google::protobuf::uint8* RelativeInt64Histogram_Bin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value lower_endpoint_inclusive = 1;
  if (this->has_lower_endpoint_inclusive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_lower_endpoint_inclusive(), deterministic, target);
  }

  // .google.protobuf.Int64Value relative_frequency = 3 [(.sensoris.protobuf.types.base.exponent) = 1];
  if (this->has_relative_frequency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_relative_frequency(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
  return target;
}

size_t RelativeInt64Histogram_Bin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Int64Value lower_endpoint_inclusive = 1;
  if (this->has_lower_endpoint_inclusive()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lower_endpoint_inclusive_);
  }

  // .google.protobuf.Int64Value relative_frequency = 3 [(.sensoris.protobuf.types.base.exponent) = 1];
  if (this->has_relative_frequency()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *relative_frequency_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RelativeInt64Histogram_Bin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
  GOOGLE_DCHECK_NE(&from, this);
  const RelativeInt64Histogram_Bin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RelativeInt64Histogram_Bin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
    MergeFrom(*source);
  }
}

void RelativeInt64Histogram_Bin::MergeFrom(const RelativeInt64Histogram_Bin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lower_endpoint_inclusive()) {
    mutable_lower_endpoint_inclusive()->::google::protobuf::Int64Value::MergeFrom(from.lower_endpoint_inclusive());
  }
  if (from.has_relative_frequency()) {
    mutable_relative_frequency()->::google::protobuf::Int64Value::MergeFrom(from.relative_frequency());
  }
}

void RelativeInt64Histogram_Bin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RelativeInt64Histogram_Bin::CopyFrom(const RelativeInt64Histogram_Bin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RelativeInt64Histogram_Bin::IsInitialized() const {
  return true;
}

void RelativeInt64Histogram_Bin::Swap(RelativeInt64Histogram_Bin* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RelativeInt64Histogram_Bin* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RelativeInt64Histogram_Bin::UnsafeArenaSwap(RelativeInt64Histogram_Bin* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RelativeInt64Histogram_Bin::InternalSwap(RelativeInt64Histogram_Bin* other) {
  using std::swap;
  swap(lower_endpoint_inclusive_, other->lower_endpoint_inclusive_);
  swap(relative_frequency_, other->relative_frequency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RelativeInt64Histogram_Bin::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RelativeInt64Histogram::InitAsDefaultInstance() {
  ::sensoris::protobuf::types::base::_RelativeInt64Histogram_default_instance_._instance.get_mutable()->timestamp_interval_ = const_cast< ::sensoris::protobuf::types::base::TimestampInterval*>(
      ::sensoris::protobuf::types::base::TimestampInterval::internal_default_instance());
  ::sensoris::protobuf::types::base::_RelativeInt64Histogram_default_instance_._instance.get_mutable()->total_elements_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::types::base::_RelativeInt64Histogram_default_instance_._instance.get_mutable()->upper_endpoint_inclusive_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
void RelativeInt64Histogram::unsafe_arena_set_allocated_timestamp_interval(
    ::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval) {
  if (GetArenaNoVirtual() == NULL) {
    delete timestamp_interval_;
  }
  timestamp_interval_ = timestamp_interval;
  if (timestamp_interval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.RelativeInt64Histogram.timestamp_interval)
}
void RelativeInt64Histogram::unsafe_arena_set_allocated_total_elements(
    ::google::protobuf::Int64Value* total_elements) {
  if (GetArenaNoVirtual() == NULL) {
    delete total_elements_;
  }
  total_elements_ = total_elements;
  if (total_elements) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.RelativeInt64Histogram.total_elements)
}
void RelativeInt64Histogram::clear_total_elements() {
  if (GetArenaNoVirtual() == NULL && total_elements_ != NULL) {
    delete total_elements_;
  }
  total_elements_ = NULL;
}
void RelativeInt64Histogram::unsafe_arena_set_allocated_upper_endpoint_inclusive(
    ::google::protobuf::Int64Value* upper_endpoint_inclusive) {
  if (GetArenaNoVirtual() == NULL) {
    delete upper_endpoint_inclusive_;
  }
  upper_endpoint_inclusive_ = upper_endpoint_inclusive;
  if (upper_endpoint_inclusive) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.RelativeInt64Histogram.upper_endpoint_inclusive)
}
void RelativeInt64Histogram::clear_upper_endpoint_inclusive() {
  if (GetArenaNoVirtual() == NULL && upper_endpoint_inclusive_ != NULL) {
    delete upper_endpoint_inclusive_;
  }
  upper_endpoint_inclusive_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RelativeInt64Histogram::kTimestampIntervalFieldNumber;
const int RelativeInt64Histogram::kTotalElementsFieldNumber;
const int RelativeInt64Histogram::kBinFieldNumber;
const int RelativeInt64Histogram::kUpperEndpointInclusiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RelativeInt64Histogram::RelativeInt64Histogram()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_RelativeInt64Histogram.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.types.base.RelativeInt64Histogram)
}
RelativeInt64Histogram::RelativeInt64Histogram(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  bin_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_RelativeInt64Histogram.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.RelativeInt64Histogram)
}
RelativeInt64Histogram::RelativeInt64Histogram(const RelativeInt64Histogram& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bin_(from.bin_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_timestamp_interval()) {
    timestamp_interval_ = new ::sensoris::protobuf::types::base::TimestampInterval(*from.timestamp_interval_);
  } else {
    timestamp_interval_ = NULL;
  }
  if (from.has_total_elements()) {
    total_elements_ = new ::google::protobuf::Int64Value(*from.total_elements_);
  } else {
    total_elements_ = NULL;
  }
  if (from.has_upper_endpoint_inclusive()) {
    upper_endpoint_inclusive_ = new ::google::protobuf::Int64Value(*from.upper_endpoint_inclusive_);
  } else {
    upper_endpoint_inclusive_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.RelativeInt64Histogram)
}

void RelativeInt64Histogram::SharedCtor() {
  ::memset(&timestamp_interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upper_endpoint_inclusive_) -
      reinterpret_cast<char*>(&timestamp_interval_)) + sizeof(upper_endpoint_inclusive_));
}

RelativeInt64Histogram::~RelativeInt64Histogram() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.RelativeInt64Histogram)
  SharedDtor();
}

void RelativeInt64Histogram::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete timestamp_interval_;
  if (this != internal_default_instance()) delete total_elements_;
  if (this != internal_default_instance()) delete upper_endpoint_inclusive_;
}

void RelativeInt64Histogram::ArenaDtor(void* object) {
  RelativeInt64Histogram* _this = reinterpret_cast< RelativeInt64Histogram* >(object);
  (void)_this;
}
void RelativeInt64Histogram::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RelativeInt64Histogram::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RelativeInt64Histogram::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RelativeInt64Histogram& RelativeInt64Histogram::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_RelativeInt64Histogram.base);
  return *internal_default_instance();
}


void RelativeInt64Histogram::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.RelativeInt64Histogram)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bin_.Clear();
  if (GetArenaNoVirtual() == NULL && timestamp_interval_ != NULL) {
    delete timestamp_interval_;
  }
  timestamp_interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && total_elements_ != NULL) {
    delete total_elements_;
  }
  total_elements_ = NULL;
  if (GetArenaNoVirtual() == NULL && upper_endpoint_inclusive_ != NULL) {
    delete upper_endpoint_inclusive_;
  }
  upper_endpoint_inclusive_ = NULL;
  _internal_metadata_.Clear();
}

bool RelativeInt64Histogram::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.types.base.RelativeInt64Histogram)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value total_elements = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_total_elements()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sensoris.protobuf.types.base.RelativeInt64Histogram.Bin bin = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value upper_endpoint_inclusive = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upper_endpoint_inclusive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.types.base.RelativeInt64Histogram)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.types.base.RelativeInt64Histogram)
  return false;
#undef DO_
}

void RelativeInt64Histogram::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.types.base.RelativeInt64Histogram)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  if (this->has_timestamp_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_timestamp_interval(), output);
  }

  // .google.protobuf.Int64Value total_elements = 2;
  if (this->has_total_elements()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_total_elements(), output);
  }

  // repeated .sensoris.protobuf.types.base.RelativeInt64Histogram.Bin bin = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bin_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->bin(static_cast<int>(i)),
      output);
  }

  // .google.protobuf.Int64Value upper_endpoint_inclusive = 4;
  if (this->has_upper_endpoint_inclusive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_upper_endpoint_inclusive(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.types.base.RelativeInt64Histogram)
}

::google::protobuf::uint8* RelativeInt64Histogram::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.RelativeInt64Histogram)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  if (this->has_timestamp_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_timestamp_interval(), deterministic, target);
  }

  // .google.protobuf.Int64Value total_elements = 2;
  if (this->has_total_elements()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_total_elements(), deterministic, target);
  }

  // repeated .sensoris.protobuf.types.base.RelativeInt64Histogram.Bin bin = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bin_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->bin(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Int64Value upper_endpoint_inclusive = 4;
  if (this->has_upper_endpoint_inclusive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_upper_endpoint_inclusive(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.RelativeInt64Histogram)
  return target;
}

size_t RelativeInt64Histogram::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.RelativeInt64Histogram)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .sensoris.protobuf.types.base.RelativeInt64Histogram.Bin bin = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->bin_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bin(static_cast<int>(i)));
    }
  }

  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  if (this->has_timestamp_interval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timestamp_interval_);
  }

  // .google.protobuf.Int64Value total_elements = 2;
  if (this->has_total_elements()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *total_elements_);
  }

  // .google.protobuf.Int64Value upper_endpoint_inclusive = 4;
  if (this->has_upper_endpoint_inclusive()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *upper_endpoint_inclusive_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RelativeInt64Histogram::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.types.base.RelativeInt64Histogram)
  GOOGLE_DCHECK_NE(&from, this);
  const RelativeInt64Histogram* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RelativeInt64Histogram>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.types.base.RelativeInt64Histogram)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.types.base.RelativeInt64Histogram)
    MergeFrom(*source);
  }
}

void RelativeInt64Histogram::MergeFrom(const RelativeInt64Histogram& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.RelativeInt64Histogram)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bin_.MergeFrom(from.bin_);
  if (from.has_timestamp_interval()) {
    mutable_timestamp_interval()->::sensoris::protobuf::types::base::TimestampInterval::MergeFrom(from.timestamp_interval());
  }
  if (from.has_total_elements()) {
    mutable_total_elements()->::google::protobuf::Int64Value::MergeFrom(from.total_elements());
  }
  if (from.has_upper_endpoint_inclusive()) {
    mutable_upper_endpoint_inclusive()->::google::protobuf::Int64Value::MergeFrom(from.upper_endpoint_inclusive());
  }
}

void RelativeInt64Histogram::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.types.base.RelativeInt64Histogram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RelativeInt64Histogram::CopyFrom(const RelativeInt64Histogram& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.RelativeInt64Histogram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RelativeInt64Histogram::IsInitialized() const {
  return true;
}

void RelativeInt64Histogram::Swap(RelativeInt64Histogram* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RelativeInt64Histogram* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RelativeInt64Histogram::UnsafeArenaSwap(RelativeInt64Histogram* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RelativeInt64Histogram::InternalSwap(RelativeInt64Histogram* other) {
  using std::swap;
  CastToBase(&bin_)->InternalSwap(CastToBase(&other->bin_));
  swap(timestamp_interval_, other->timestamp_interval_);
  swap(total_elements_, other->total_elements_);
  swap(upper_endpoint_inclusive_, other->upper_endpoint_inclusive_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RelativeInt64Histogram::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Int64GaussianDistribution::InitAsDefaultInstance() {
  ::sensoris::protobuf::types::base::_Int64GaussianDistribution_default_instance_._instance.get_mutable()->timestamp_interval_ = const_cast< ::sensoris::protobuf::types::base::TimestampInterval*>(
      ::sensoris::protobuf::types::base::TimestampInterval::internal_default_instance());
  ::sensoris::protobuf::types::base::_Int64GaussianDistribution_default_instance_._instance.get_mutable()->mean_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::types::base::_Int64GaussianDistribution_default_instance_._instance.get_mutable()->variance_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
void Int64GaussianDistribution::unsafe_arena_set_allocated_timestamp_interval(
    ::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval) {
  if (GetArenaNoVirtual() == NULL) {
    delete timestamp_interval_;
  }
  timestamp_interval_ = timestamp_interval;
  if (timestamp_interval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64GaussianDistribution.timestamp_interval)
}
void Int64GaussianDistribution::unsafe_arena_set_allocated_mean(
    ::google::protobuf::Int64Value* mean) {
  if (GetArenaNoVirtual() == NULL) {
    delete mean_;
  }
  mean_ = mean;
  if (mean) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64GaussianDistribution.mean)
}
void Int64GaussianDistribution::clear_mean() {
  if (GetArenaNoVirtual() == NULL && mean_ != NULL) {
    delete mean_;
  }
  mean_ = NULL;
}
void Int64GaussianDistribution::unsafe_arena_set_allocated_variance(
    ::google::protobuf::Int64Value* variance) {
  if (GetArenaNoVirtual() == NULL) {
    delete variance_;
  }
  variance_ = variance;
  if (variance) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64GaussianDistribution.variance)
}
void Int64GaussianDistribution::clear_variance() {
  if (GetArenaNoVirtual() == NULL && variance_ != NULL) {
    delete variance_;
  }
  variance_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int64GaussianDistribution::kTimestampIntervalFieldNumber;
const int Int64GaussianDistribution::kMeanFieldNumber;
const int Int64GaussianDistribution::kVarianceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int64GaussianDistribution::Int64GaussianDistribution()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64GaussianDistribution.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.types.base.Int64GaussianDistribution)
}
Int64GaussianDistribution::Int64GaussianDistribution(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64GaussianDistribution.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Int64GaussianDistribution)
}
Int64GaussianDistribution::Int64GaussianDistribution(const Int64GaussianDistribution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_timestamp_interval()) {
    timestamp_interval_ = new ::sensoris::protobuf::types::base::TimestampInterval(*from.timestamp_interval_);
  } else {
    timestamp_interval_ = NULL;
  }
  if (from.has_mean()) {
    mean_ = new ::google::protobuf::Int64Value(*from.mean_);
  } else {
    mean_ = NULL;
  }
  if (from.has_variance()) {
    variance_ = new ::google::protobuf::Int64Value(*from.variance_);
  } else {
    variance_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Int64GaussianDistribution)
}

void Int64GaussianDistribution::SharedCtor() {
  ::memset(&timestamp_interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&variance_) -
      reinterpret_cast<char*>(&timestamp_interval_)) + sizeof(variance_));
}

Int64GaussianDistribution::~Int64GaussianDistribution() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Int64GaussianDistribution)
  SharedDtor();
}

void Int64GaussianDistribution::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete timestamp_interval_;
  if (this != internal_default_instance()) delete mean_;
  if (this != internal_default_instance()) delete variance_;
}

void Int64GaussianDistribution::ArenaDtor(void* object) {
  Int64GaussianDistribution* _this = reinterpret_cast< Int64GaussianDistribution* >(object);
  (void)_this;
}
void Int64GaussianDistribution::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Int64GaussianDistribution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Int64GaussianDistribution::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Int64GaussianDistribution& Int64GaussianDistribution::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64GaussianDistribution.base);
  return *internal_default_instance();
}


void Int64GaussianDistribution::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Int64GaussianDistribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && timestamp_interval_ != NULL) {
    delete timestamp_interval_;
  }
  timestamp_interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && mean_ != NULL) {
    delete mean_;
  }
  mean_ = NULL;
  if (GetArenaNoVirtual() == NULL && variance_ != NULL) {
    delete variance_;
  }
  variance_ = NULL;
  _internal_metadata_.Clear();
}

bool Int64GaussianDistribution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.types.base.Int64GaussianDistribution)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value mean = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mean()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value variance = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_variance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.types.base.Int64GaussianDistribution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.types.base.Int64GaussianDistribution)
  return false;
#undef DO_
}

void Int64GaussianDistribution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.types.base.Int64GaussianDistribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  if (this->has_timestamp_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_timestamp_interval(), output);
  }

  // .google.protobuf.Int64Value mean = 2;
  if (this->has_mean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_mean(), output);
  }

  // .google.protobuf.Int64Value variance = 3;
  if (this->has_variance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_variance(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.types.base.Int64GaussianDistribution)
}

::google::protobuf::uint8* Int64GaussianDistribution::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Int64GaussianDistribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  if (this->has_timestamp_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_timestamp_interval(), deterministic, target);
  }

  // .google.protobuf.Int64Value mean = 2;
  if (this->has_mean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_mean(), deterministic, target);
  }

  // .google.protobuf.Int64Value variance = 3;
  if (this->has_variance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_variance(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Int64GaussianDistribution)
  return target;
}

size_t Int64GaussianDistribution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Int64GaussianDistribution)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  if (this->has_timestamp_interval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timestamp_interval_);
  }

  // .google.protobuf.Int64Value mean = 2;
  if (this->has_mean()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mean_);
  }

  // .google.protobuf.Int64Value variance = 3;
  if (this->has_variance()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *variance_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Int64GaussianDistribution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.types.base.Int64GaussianDistribution)
  GOOGLE_DCHECK_NE(&from, this);
  const Int64GaussianDistribution* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Int64GaussianDistribution>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.types.base.Int64GaussianDistribution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.types.base.Int64GaussianDistribution)
    MergeFrom(*source);
  }
}

void Int64GaussianDistribution::MergeFrom(const Int64GaussianDistribution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Int64GaussianDistribution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_timestamp_interval()) {
    mutable_timestamp_interval()->::sensoris::protobuf::types::base::TimestampInterval::MergeFrom(from.timestamp_interval());
  }
  if (from.has_mean()) {
    mutable_mean()->::google::protobuf::Int64Value::MergeFrom(from.mean());
  }
  if (from.has_variance()) {
    mutable_variance()->::google::protobuf::Int64Value::MergeFrom(from.variance());
  }
}

void Int64GaussianDistribution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.types.base.Int64GaussianDistribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Int64GaussianDistribution::CopyFrom(const Int64GaussianDistribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Int64GaussianDistribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Int64GaussianDistribution::IsInitialized() const {
  return true;
}

void Int64GaussianDistribution::Swap(Int64GaussianDistribution* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Int64GaussianDistribution* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Int64GaussianDistribution::UnsafeArenaSwap(Int64GaussianDistribution* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Int64GaussianDistribution::InternalSwap(Int64GaussianDistribution* other) {
  using std::swap;
  swap(timestamp_interval_, other->timestamp_interval_);
  swap(mean_, other->mean_);
  swap(variance_, other->variance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Int64GaussianDistribution::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Int64Value::InitAsDefaultInstance() {
  ::sensoris::protobuf::types::base::_Int64Value_default_instance_.value_ = GOOGLE_LONGLONG(0);
  ::sensoris::protobuf::types::base::_Int64Value_default_instance_.statistic_measure_ = const_cast< ::sensoris::protobuf::types::base::Int64StatisticMeasure*>(
      ::sensoris::protobuf::types::base::Int64StatisticMeasure::internal_default_instance());
  ::sensoris::protobuf::types::base::_Int64Value_default_instance_.absolute_histogram_ = const_cast< ::sensoris::protobuf::types::base::AbsoluteInt64Histogram*>(
      ::sensoris::protobuf::types::base::AbsoluteInt64Histogram::internal_default_instance());
  ::sensoris::protobuf::types::base::_Int64Value_default_instance_.relative_histogram_ = const_cast< ::sensoris::protobuf::types::base::RelativeInt64Histogram*>(
      ::sensoris::protobuf::types::base::RelativeInt64Histogram::internal_default_instance());
  ::sensoris::protobuf::types::base::_Int64Value_default_instance_.gaussian_distribution_ = const_cast< ::sensoris::protobuf::types::base::Int64GaussianDistribution*>(
      ::sensoris::protobuf::types::base::Int64GaussianDistribution::internal_default_instance());
}
void Int64Value::set_allocated_statistic_measure(::sensoris::protobuf::types::base::Int64StatisticMeasure* statistic_measure) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value_oneof();
  if (statistic_measure) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(statistic_measure);
    if (message_arena != submessage_arena) {
      statistic_measure = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, statistic_measure, submessage_arena);
    }
    set_has_statistic_measure();
    value_oneof_.statistic_measure_ = statistic_measure;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64Value.statistic_measure)
}
void Int64Value::set_allocated_absolute_histogram(::sensoris::protobuf::types::base::AbsoluteInt64Histogram* absolute_histogram) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value_oneof();
  if (absolute_histogram) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(absolute_histogram);
    if (message_arena != submessage_arena) {
      absolute_histogram = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, absolute_histogram, submessage_arena);
    }
    set_has_absolute_histogram();
    value_oneof_.absolute_histogram_ = absolute_histogram;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64Value.absolute_histogram)
}
void Int64Value::set_allocated_relative_histogram(::sensoris::protobuf::types::base::RelativeInt64Histogram* relative_histogram) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value_oneof();
  if (relative_histogram) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(relative_histogram);
    if (message_arena != submessage_arena) {
      relative_histogram = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, relative_histogram, submessage_arena);
    }
    set_has_relative_histogram();
    value_oneof_.relative_histogram_ = relative_histogram;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64Value.relative_histogram)
}
void Int64Value::set_allocated_gaussian_distribution(::sensoris::protobuf::types::base::Int64GaussianDistribution* gaussian_distribution) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value_oneof();
  if (gaussian_distribution) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(gaussian_distribution);
    if (message_arena != submessage_arena) {
      gaussian_distribution = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gaussian_distribution, submessage_arena);
    }
    set_has_gaussian_distribution();
    value_oneof_.gaussian_distribution_ = gaussian_distribution;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64Value.gaussian_distribution)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int64Value::kValueFieldNumber;
const int Int64Value::kStatisticMeasureFieldNumber;
const int Int64Value::kAbsoluteHistogramFieldNumber;
const int Int64Value::kRelativeHistogramFieldNumber;
const int Int64Value::kGaussianDistributionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int64Value::Int64Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64Value.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.types.base.Int64Value)
}
Int64Value::Int64Value(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64Value.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Int64Value)
}
Int64Value::Int64Value(const Int64Value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value_oneof();
  switch (from.value_oneof_case()) {
    case kValue: {
      set_value(from.value());
      break;
    }
    case kStatisticMeasure: {
      mutable_statistic_measure()->::sensoris::protobuf::types::base::Int64StatisticMeasure::MergeFrom(from.statistic_measure());
      break;
    }
    case kAbsoluteHistogram: {
      mutable_absolute_histogram()->::sensoris::protobuf::types::base::AbsoluteInt64Histogram::MergeFrom(from.absolute_histogram());
      break;
    }
    case kRelativeHistogram: {
      mutable_relative_histogram()->::sensoris::protobuf::types::base::RelativeInt64Histogram::MergeFrom(from.relative_histogram());
      break;
    }
    case kGaussianDistribution: {
      mutable_gaussian_distribution()->::sensoris::protobuf::types::base::Int64GaussianDistribution::MergeFrom(from.gaussian_distribution());
      break;
    }
    case VALUE_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Int64Value)
}

void Int64Value::SharedCtor() {
  clear_has_value_oneof();
}

Int64Value::~Int64Value() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Int64Value)
  SharedDtor();
}

void Int64Value::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_value_oneof()) {
    clear_value_oneof();
  }
}

void Int64Value::ArenaDtor(void* object) {
  Int64Value* _this = reinterpret_cast< Int64Value* >(object);
  (void)_this;
}
void Int64Value::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Int64Value::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Int64Value::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Int64Value& Int64Value::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64Value.base);
  return *internal_default_instance();
}


void Int64Value::clear_value_oneof() {
// @@protoc_insertion_point(one_of_clear_start:sensoris.protobuf.types.base.Int64Value)
  switch (value_oneof_case()) {
    case kValue: {
      // No need to clear
      break;
    }
    case kStatisticMeasure: {
      if (GetArenaNoVirtual() == NULL) {
        delete value_oneof_.statistic_measure_;
      }
      break;
    }
    case kAbsoluteHistogram: {
      if (GetArenaNoVirtual() == NULL) {
        delete value_oneof_.absolute_histogram_;
      }
      break;
    }
    case kRelativeHistogram: {
      if (GetArenaNoVirtual() == NULL) {
        delete value_oneof_.relative_histogram_;
      }
      break;
    }
    case kGaussianDistribution: {
      if (GetArenaNoVirtual() == NULL) {
        delete value_oneof_.gaussian_distribution_;
      }
      break;
    }
    case VALUE_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_ONEOF_NOT_SET;
}


void Int64Value::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Int64Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value_oneof();
  _internal_metadata_.Clear();
}

bool Int64Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.types.base.Int64Value)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_value_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_oneof_.value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.types.base.Int64StatisticMeasure statistic_measure = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_statistic_measure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.types.base.AbsoluteInt64Histogram absolute_histogram = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_absolute_histogram()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.types.base.RelativeInt64Histogram relative_histogram = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_relative_histogram()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.types.base.Int64GaussianDistribution gaussian_distribution = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gaussian_distribution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.types.base.Int64Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.types.base.Int64Value)
  return false;
#undef DO_
}

void Int64Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.types.base.Int64Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->value(), output);
  }

  // .sensoris.protobuf.types.base.Int64StatisticMeasure statistic_measure = 2;
  if (has_statistic_measure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_statistic_measure(), output);
  }

  // .sensoris.protobuf.types.base.AbsoluteInt64Histogram absolute_histogram = 3;
  if (has_absolute_histogram()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_absolute_histogram(), output);
  }

  // .sensoris.protobuf.types.base.RelativeInt64Histogram relative_histogram = 4;
  if (has_relative_histogram()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_relative_histogram(), output);
  }

  // .sensoris.protobuf.types.base.Int64GaussianDistribution gaussian_distribution = 5;
  if (has_gaussian_distribution()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_gaussian_distribution(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.types.base.Int64Value)
}

::google::protobuf::uint8* Int64Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Int64Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value = 1;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->value(), target);
  }

  // .sensoris.protobuf.types.base.Int64StatisticMeasure statistic_measure = 2;
  if (has_statistic_measure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_statistic_measure(), deterministic, target);
  }

  // .sensoris.protobuf.types.base.AbsoluteInt64Histogram absolute_histogram = 3;
  if (has_absolute_histogram()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_absolute_histogram(), deterministic, target);
  }

  // .sensoris.protobuf.types.base.RelativeInt64Histogram relative_histogram = 4;
  if (has_relative_histogram()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_relative_histogram(), deterministic, target);
  }

  // .sensoris.protobuf.types.base.Int64GaussianDistribution gaussian_distribution = 5;
  if (has_gaussian_distribution()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_gaussian_distribution(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Int64Value)
  return target;
}

size_t Int64Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Int64Value)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (value_oneof_case()) {
    // int64 value = 1;
    case kValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->value());
      break;
    }
    // .sensoris.protobuf.types.base.Int64StatisticMeasure statistic_measure = 2;
    case kStatisticMeasure: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_oneof_.statistic_measure_);
      break;
    }
    // .sensoris.protobuf.types.base.AbsoluteInt64Histogram absolute_histogram = 3;
    case kAbsoluteHistogram: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_oneof_.absolute_histogram_);
      break;
    }
    // .sensoris.protobuf.types.base.RelativeInt64Histogram relative_histogram = 4;
    case kRelativeHistogram: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_oneof_.relative_histogram_);
      break;
    }
    // .sensoris.protobuf.types.base.Int64GaussianDistribution gaussian_distribution = 5;
    case kGaussianDistribution: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_oneof_.gaussian_distribution_);
      break;
    }
    case VALUE_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Int64Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.types.base.Int64Value)
  GOOGLE_DCHECK_NE(&from, this);
  const Int64Value* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Int64Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.types.base.Int64Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.types.base.Int64Value)
    MergeFrom(*source);
  }
}

void Int64Value::MergeFrom(const Int64Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Int64Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_oneof_case()) {
    case kValue: {
      set_value(from.value());
      break;
    }
    case kStatisticMeasure: {
      mutable_statistic_measure()->::sensoris::protobuf::types::base::Int64StatisticMeasure::MergeFrom(from.statistic_measure());
      break;
    }
    case kAbsoluteHistogram: {
      mutable_absolute_histogram()->::sensoris::protobuf::types::base::AbsoluteInt64Histogram::MergeFrom(from.absolute_histogram());
      break;
    }
    case kRelativeHistogram: {
      mutable_relative_histogram()->::sensoris::protobuf::types::base::RelativeInt64Histogram::MergeFrom(from.relative_histogram());
      break;
    }
    case kGaussianDistribution: {
      mutable_gaussian_distribution()->::sensoris::protobuf::types::base::Int64GaussianDistribution::MergeFrom(from.gaussian_distribution());
      break;
    }
    case VALUE_ONEOF_NOT_SET: {
      break;
    }
  }
}

void Int64Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.types.base.Int64Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Int64Value::CopyFrom(const Int64Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Int64Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Int64Value::IsInitialized() const {
  return true;
}

void Int64Value::Swap(Int64Value* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Int64Value* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Int64Value::UnsafeArenaSwap(Int64Value* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Int64Value::InternalSwap(Int64Value* other) {
  using std::swap;
  swap(value_oneof_, other->value_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Int64Value::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Int64ValueAndAccuracy_ValueAndAccuracy::InitAsDefaultInstance() {
  ::sensoris::protobuf::types::base::_Int64ValueAndAccuracy_ValueAndAccuracy_default_instance_._instance.get_mutable()->accuracy_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
void Int64ValueAndAccuracy_ValueAndAccuracy::unsafe_arena_set_allocated_accuracy(
    ::google::protobuf::Int64Value* accuracy) {
  if (GetArenaNoVirtual() == NULL) {
    delete accuracy_;
  }
  accuracy_ = accuracy;
  if (accuracy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy.accuracy)
}
void Int64ValueAndAccuracy_ValueAndAccuracy::clear_accuracy() {
  if (GetArenaNoVirtual() == NULL && accuracy_ != NULL) {
    delete accuracy_;
  }
  accuracy_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int64ValueAndAccuracy_ValueAndAccuracy::kValueFieldNumber;
const int Int64ValueAndAccuracy_ValueAndAccuracy::kAccuracyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int64ValueAndAccuracy_ValueAndAccuracy::Int64ValueAndAccuracy_ValueAndAccuracy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64ValueAndAccuracy_ValueAndAccuracy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
}
Int64ValueAndAccuracy_ValueAndAccuracy::Int64ValueAndAccuracy_ValueAndAccuracy(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64ValueAndAccuracy_ValueAndAccuracy.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
}
Int64ValueAndAccuracy_ValueAndAccuracy::Int64ValueAndAccuracy_ValueAndAccuracy(const Int64ValueAndAccuracy_ValueAndAccuracy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_accuracy()) {
    accuracy_ = new ::google::protobuf::Int64Value(*from.accuracy_);
  } else {
    accuracy_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
}

void Int64ValueAndAccuracy_ValueAndAccuracy::SharedCtor() {
  ::memset(&accuracy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&accuracy_)) + sizeof(value_));
}

Int64ValueAndAccuracy_ValueAndAccuracy::~Int64ValueAndAccuracy_ValueAndAccuracy() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
  SharedDtor();
}

void Int64ValueAndAccuracy_ValueAndAccuracy::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete accuracy_;
}

void Int64ValueAndAccuracy_ValueAndAccuracy::ArenaDtor(void* object) {
  Int64ValueAndAccuracy_ValueAndAccuracy* _this = reinterpret_cast< Int64ValueAndAccuracy_ValueAndAccuracy* >(object);
  (void)_this;
}
void Int64ValueAndAccuracy_ValueAndAccuracy::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Int64ValueAndAccuracy_ValueAndAccuracy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Int64ValueAndAccuracy_ValueAndAccuracy::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Int64ValueAndAccuracy_ValueAndAccuracy& Int64ValueAndAccuracy_ValueAndAccuracy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64ValueAndAccuracy_ValueAndAccuracy.base);
  return *internal_default_instance();
}


void Int64ValueAndAccuracy_ValueAndAccuracy::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && accuracy_ != NULL) {
    delete accuracy_;
  }
  accuracy_ = NULL;
  value_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Int64ValueAndAccuracy_ValueAndAccuracy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value accuracy = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_accuracy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
  return false;
#undef DO_
}

void Int64ValueAndAccuracy_ValueAndAccuracy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->value(), output);
  }

  // .google.protobuf.Int64Value accuracy = 2;
  if (this->has_accuracy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_accuracy(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
}

::google::protobuf::uint8* Int64ValueAndAccuracy_ValueAndAccuracy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->value(), target);
  }

  // .google.protobuf.Int64Value accuracy = 2;
  if (this->has_accuracy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_accuracy(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
  return target;
}

size_t Int64ValueAndAccuracy_ValueAndAccuracy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Int64Value accuracy = 2;
  if (this->has_accuracy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *accuracy_);
  }

  // int64 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Int64ValueAndAccuracy_ValueAndAccuracy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
  GOOGLE_DCHECK_NE(&from, this);
  const Int64ValueAndAccuracy_ValueAndAccuracy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Int64ValueAndAccuracy_ValueAndAccuracy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
    MergeFrom(*source);
  }
}

void Int64ValueAndAccuracy_ValueAndAccuracy::MergeFrom(const Int64ValueAndAccuracy_ValueAndAccuracy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_accuracy()) {
    mutable_accuracy()->::google::protobuf::Int64Value::MergeFrom(from.accuracy());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Int64ValueAndAccuracy_ValueAndAccuracy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Int64ValueAndAccuracy_ValueAndAccuracy::CopyFrom(const Int64ValueAndAccuracy_ValueAndAccuracy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Int64ValueAndAccuracy_ValueAndAccuracy::IsInitialized() const {
  return true;
}

void Int64ValueAndAccuracy_ValueAndAccuracy::Swap(Int64ValueAndAccuracy_ValueAndAccuracy* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Int64ValueAndAccuracy_ValueAndAccuracy* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Int64ValueAndAccuracy_ValueAndAccuracy::UnsafeArenaSwap(Int64ValueAndAccuracy_ValueAndAccuracy* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Int64ValueAndAccuracy_ValueAndAccuracy::InternalSwap(Int64ValueAndAccuracy_ValueAndAccuracy* other) {
  using std::swap;
  swap(accuracy_, other->accuracy_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Int64ValueAndAccuracy_ValueAndAccuracy::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Int64ValueAndAccuracy::InitAsDefaultInstance() {
  ::sensoris::protobuf::types::base::_Int64ValueAndAccuracy_default_instance_.value_and_accuracy_ = const_cast< ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy*>(
      ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy::internal_default_instance());
  ::sensoris::protobuf::types::base::_Int64ValueAndAccuracy_default_instance_.statistic_measure_and_accuracy_ = const_cast< ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy*>(
      ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy::internal_default_instance());
  ::sensoris::protobuf::types::base::_Int64ValueAndAccuracy_default_instance_.absolute_histogram_ = const_cast< ::sensoris::protobuf::types::base::AbsoluteInt64Histogram*>(
      ::sensoris::protobuf::types::base::AbsoluteInt64Histogram::internal_default_instance());
  ::sensoris::protobuf::types::base::_Int64ValueAndAccuracy_default_instance_.relative_histogram_ = const_cast< ::sensoris::protobuf::types::base::RelativeInt64Histogram*>(
      ::sensoris::protobuf::types::base::RelativeInt64Histogram::internal_default_instance());
  ::sensoris::protobuf::types::base::_Int64ValueAndAccuracy_default_instance_.gaussian_distribution_ = const_cast< ::sensoris::protobuf::types::base::Int64GaussianDistribution*>(
      ::sensoris::protobuf::types::base::Int64GaussianDistribution::internal_default_instance());
}
void Int64ValueAndAccuracy::set_allocated_value_and_accuracy(::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy* value_and_accuracy) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value_oneof();
  if (value_and_accuracy) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(value_and_accuracy);
    if (message_arena != submessage_arena) {
      value_and_accuracy = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value_and_accuracy, submessage_arena);
    }
    set_has_value_and_accuracy();
    value_oneof_.value_and_accuracy_ = value_and_accuracy;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64ValueAndAccuracy.value_and_accuracy)
}
void Int64ValueAndAccuracy::set_allocated_statistic_measure_and_accuracy(::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy* statistic_measure_and_accuracy) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value_oneof();
  if (statistic_measure_and_accuracy) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(statistic_measure_and_accuracy);
    if (message_arena != submessage_arena) {
      statistic_measure_and_accuracy = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, statistic_measure_and_accuracy, submessage_arena);
    }
    set_has_statistic_measure_and_accuracy();
    value_oneof_.statistic_measure_and_accuracy_ = statistic_measure_and_accuracy;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64ValueAndAccuracy.statistic_measure_and_accuracy)
}
void Int64ValueAndAccuracy::set_allocated_absolute_histogram(::sensoris::protobuf::types::base::AbsoluteInt64Histogram* absolute_histogram) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value_oneof();
  if (absolute_histogram) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(absolute_histogram);
    if (message_arena != submessage_arena) {
      absolute_histogram = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, absolute_histogram, submessage_arena);
    }
    set_has_absolute_histogram();
    value_oneof_.absolute_histogram_ = absolute_histogram;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64ValueAndAccuracy.absolute_histogram)
}
void Int64ValueAndAccuracy::set_allocated_relative_histogram(::sensoris::protobuf::types::base::RelativeInt64Histogram* relative_histogram) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value_oneof();
  if (relative_histogram) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(relative_histogram);
    if (message_arena != submessage_arena) {
      relative_histogram = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, relative_histogram, submessage_arena);
    }
    set_has_relative_histogram();
    value_oneof_.relative_histogram_ = relative_histogram;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64ValueAndAccuracy.relative_histogram)
}
void Int64ValueAndAccuracy::set_allocated_gaussian_distribution(::sensoris::protobuf::types::base::Int64GaussianDistribution* gaussian_distribution) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value_oneof();
  if (gaussian_distribution) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(gaussian_distribution);
    if (message_arena != submessage_arena) {
      gaussian_distribution = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gaussian_distribution, submessage_arena);
    }
    set_has_gaussian_distribution();
    value_oneof_.gaussian_distribution_ = gaussian_distribution;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64ValueAndAccuracy.gaussian_distribution)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int64ValueAndAccuracy::kValueAndAccuracyFieldNumber;
const int Int64ValueAndAccuracy::kStatisticMeasureAndAccuracyFieldNumber;
const int Int64ValueAndAccuracy::kAbsoluteHistogramFieldNumber;
const int Int64ValueAndAccuracy::kRelativeHistogramFieldNumber;
const int Int64ValueAndAccuracy::kGaussianDistributionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int64ValueAndAccuracy::Int64ValueAndAccuracy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64ValueAndAccuracy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
}
Int64ValueAndAccuracy::Int64ValueAndAccuracy(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64ValueAndAccuracy.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
}
Int64ValueAndAccuracy::Int64ValueAndAccuracy(const Int64ValueAndAccuracy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value_oneof();
  switch (from.value_oneof_case()) {
    case kValueAndAccuracy: {
      mutable_value_and_accuracy()->::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy::MergeFrom(from.value_and_accuracy());
      break;
    }
    case kStatisticMeasureAndAccuracy: {
      mutable_statistic_measure_and_accuracy()->::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy::MergeFrom(from.statistic_measure_and_accuracy());
      break;
    }
    case kAbsoluteHistogram: {
      mutable_absolute_histogram()->::sensoris::protobuf::types::base::AbsoluteInt64Histogram::MergeFrom(from.absolute_histogram());
      break;
    }
    case kRelativeHistogram: {
      mutable_relative_histogram()->::sensoris::protobuf::types::base::RelativeInt64Histogram::MergeFrom(from.relative_histogram());
      break;
    }
    case kGaussianDistribution: {
      mutable_gaussian_distribution()->::sensoris::protobuf::types::base::Int64GaussianDistribution::MergeFrom(from.gaussian_distribution());
      break;
    }
    case VALUE_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
}

void Int64ValueAndAccuracy::SharedCtor() {
  clear_has_value_oneof();
}

Int64ValueAndAccuracy::~Int64ValueAndAccuracy() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  SharedDtor();
}

void Int64ValueAndAccuracy::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_value_oneof()) {
    clear_value_oneof();
  }
}

void Int64ValueAndAccuracy::ArenaDtor(void* object) {
  Int64ValueAndAccuracy* _this = reinterpret_cast< Int64ValueAndAccuracy* >(object);
  (void)_this;
}
void Int64ValueAndAccuracy::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Int64ValueAndAccuracy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Int64ValueAndAccuracy::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Int64ValueAndAccuracy& Int64ValueAndAccuracy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64ValueAndAccuracy.base);
  return *internal_default_instance();
}


void Int64ValueAndAccuracy::clear_value_oneof() {
// @@protoc_insertion_point(one_of_clear_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  switch (value_oneof_case()) {
    case kValueAndAccuracy: {
      if (GetArenaNoVirtual() == NULL) {
        delete value_oneof_.value_and_accuracy_;
      }
      break;
    }
    case kStatisticMeasureAndAccuracy: {
      if (GetArenaNoVirtual() == NULL) {
        delete value_oneof_.statistic_measure_and_accuracy_;
      }
      break;
    }
    case kAbsoluteHistogram: {
      if (GetArenaNoVirtual() == NULL) {
        delete value_oneof_.absolute_histogram_;
      }
      break;
    }
    case kRelativeHistogram: {
      if (GetArenaNoVirtual() == NULL) {
        delete value_oneof_.relative_histogram_;
      }
      break;
    }
    case kGaussianDistribution: {
      if (GetArenaNoVirtual() == NULL) {
        delete value_oneof_.gaussian_distribution_;
      }
      break;
    }
    case VALUE_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_ONEOF_NOT_SET;
}


void Int64ValueAndAccuracy::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value_oneof();
  _internal_metadata_.Clear();
}

bool Int64ValueAndAccuracy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy value_and_accuracy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_and_accuracy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy statistic_measure_and_accuracy = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_statistic_measure_and_accuracy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.types.base.AbsoluteInt64Histogram absolute_histogram = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_absolute_histogram()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.types.base.RelativeInt64Histogram relative_histogram = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_relative_histogram()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.types.base.Int64GaussianDistribution gaussian_distribution = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gaussian_distribution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  return false;
#undef DO_
}

void Int64ValueAndAccuracy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy value_and_accuracy = 1;
  if (has_value_and_accuracy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_value_and_accuracy(), output);
  }

  // .sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy statistic_measure_and_accuracy = 2;
  if (has_statistic_measure_and_accuracy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_statistic_measure_and_accuracy(), output);
  }

  // .sensoris.protobuf.types.base.AbsoluteInt64Histogram absolute_histogram = 3;
  if (has_absolute_histogram()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_absolute_histogram(), output);
  }

  // .sensoris.protobuf.types.base.RelativeInt64Histogram relative_histogram = 4;
  if (has_relative_histogram()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_relative_histogram(), output);
  }

  // .sensoris.protobuf.types.base.Int64GaussianDistribution gaussian_distribution = 5;
  if (has_gaussian_distribution()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_gaussian_distribution(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
}

::google::protobuf::uint8* Int64ValueAndAccuracy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy value_and_accuracy = 1;
  if (has_value_and_accuracy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_value_and_accuracy(), deterministic, target);
  }

  // .sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy statistic_measure_and_accuracy = 2;
  if (has_statistic_measure_and_accuracy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_statistic_measure_and_accuracy(), deterministic, target);
  }

  // .sensoris.protobuf.types.base.AbsoluteInt64Histogram absolute_histogram = 3;
  if (has_absolute_histogram()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_absolute_histogram(), deterministic, target);
  }

  // .sensoris.protobuf.types.base.RelativeInt64Histogram relative_histogram = 4;
  if (has_relative_histogram()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_relative_histogram(), deterministic, target);
  }

  // .sensoris.protobuf.types.base.Int64GaussianDistribution gaussian_distribution = 5;
  if (has_gaussian_distribution()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_gaussian_distribution(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  return target;
}

size_t Int64ValueAndAccuracy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (value_oneof_case()) {
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy value_and_accuracy = 1;
    case kValueAndAccuracy: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_oneof_.value_and_accuracy_);
      break;
    }
    // .sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy statistic_measure_and_accuracy = 2;
    case kStatisticMeasureAndAccuracy: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_oneof_.statistic_measure_and_accuracy_);
      break;
    }
    // .sensoris.protobuf.types.base.AbsoluteInt64Histogram absolute_histogram = 3;
    case kAbsoluteHistogram: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_oneof_.absolute_histogram_);
      break;
    }
    // .sensoris.protobuf.types.base.RelativeInt64Histogram relative_histogram = 4;
    case kRelativeHistogram: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_oneof_.relative_histogram_);
      break;
    }
    // .sensoris.protobuf.types.base.Int64GaussianDistribution gaussian_distribution = 5;
    case kGaussianDistribution: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_oneof_.gaussian_distribution_);
      break;
    }
    case VALUE_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Int64ValueAndAccuracy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  GOOGLE_DCHECK_NE(&from, this);
  const Int64ValueAndAccuracy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Int64ValueAndAccuracy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
    MergeFrom(*source);
  }
}

void Int64ValueAndAccuracy::MergeFrom(const Int64ValueAndAccuracy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_oneof_case()) {
    case kValueAndAccuracy: {
      mutable_value_and_accuracy()->::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy::MergeFrom(from.value_and_accuracy());
      break;
    }
    case kStatisticMeasureAndAccuracy: {
      mutable_statistic_measure_and_accuracy()->::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy::MergeFrom(from.statistic_measure_and_accuracy());
      break;
    }
    case kAbsoluteHistogram: {
      mutable_absolute_histogram()->::sensoris::protobuf::types::base::AbsoluteInt64Histogram::MergeFrom(from.absolute_histogram());
      break;
    }
    case kRelativeHistogram: {
      mutable_relative_histogram()->::sensoris::protobuf::types::base::RelativeInt64Histogram::MergeFrom(from.relative_histogram());
      break;
    }
    case kGaussianDistribution: {
      mutable_gaussian_distribution()->::sensoris::protobuf::types::base::Int64GaussianDistribution::MergeFrom(from.gaussian_distribution());
      break;
    }
    case VALUE_ONEOF_NOT_SET: {
      break;
    }
  }
}

void Int64ValueAndAccuracy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Int64ValueAndAccuracy::CopyFrom(const Int64ValueAndAccuracy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Int64ValueAndAccuracy::IsInitialized() const {
  return true;
}

void Int64ValueAndAccuracy::Swap(Int64ValueAndAccuracy* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Int64ValueAndAccuracy* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Int64ValueAndAccuracy::UnsafeArenaSwap(Int64ValueAndAccuracy* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Int64ValueAndAccuracy::InternalSwap(Int64ValueAndAccuracy* other) {
  using std::swap;
  swap(value_oneof_, other->value_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Int64ValueAndAccuracy::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Confidence::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Confidence::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Confidence::Confidence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Confidence.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.types.base.Confidence)
}
Confidence::Confidence(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Confidence.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Confidence)
}
Confidence::Confidence(const Confidence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Confidence)
}

void Confidence::SharedCtor() {
  value_ = GOOGLE_LONGLONG(0);
}

Confidence::~Confidence() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Confidence)
  SharedDtor();
}

void Confidence::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Confidence::ArenaDtor(void* object) {
  Confidence* _this = reinterpret_cast< Confidence* >(object);
  (void)_this;
}
void Confidence::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Confidence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Confidence::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Confidence& Confidence::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Confidence.base);
  return *internal_default_instance();
}


void Confidence::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Confidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Confidence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.types.base.Confidence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 value = 1 [(.sensoris.protobuf.types.base.exponent) = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.types.base.Confidence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.types.base.Confidence)
  return false;
#undef DO_
}

void Confidence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.types.base.Confidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value = 1 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.types.base.Confidence)
}

::google::protobuf::uint8* Confidence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Confidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value = 1 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Confidence)
  return target;
}

size_t Confidence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Confidence)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 value = 1 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Confidence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.types.base.Confidence)
  GOOGLE_DCHECK_NE(&from, this);
  const Confidence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Confidence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.types.base.Confidence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.types.base.Confidence)
    MergeFrom(*source);
  }
}

void Confidence::MergeFrom(const Confidence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Confidence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Confidence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.types.base.Confidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Confidence::CopyFrom(const Confidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Confidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Confidence::IsInitialized() const {
  return true;
}

void Confidence::Swap(Confidence* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Confidence* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Confidence::UnsafeArenaSwap(Confidence* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Confidence::InternalSwap(Confidence* other) {
  using std::swap;
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Confidence::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CountAndConfidence::InitAsDefaultInstance() {
  ::sensoris::protobuf::types::base::_CountAndConfidence_default_instance_._instance.get_mutable()->count_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::types::base::_CountAndConfidence_default_instance_._instance.get_mutable()->confidence_ = const_cast< ::sensoris::protobuf::types::base::Confidence*>(
      ::sensoris::protobuf::types::base::Confidence::internal_default_instance());
}
void CountAndConfidence::unsafe_arena_set_allocated_count(
    ::google::protobuf::Int64Value* count) {
  if (GetArenaNoVirtual() == NULL) {
    delete count_;
  }
  count_ = count;
  if (count) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.CountAndConfidence.count)
}
void CountAndConfidence::clear_count() {
  if (GetArenaNoVirtual() == NULL && count_ != NULL) {
    delete count_;
  }
  count_ = NULL;
}
void CountAndConfidence::unsafe_arena_set_allocated_confidence(
    ::sensoris::protobuf::types::base::Confidence* confidence) {
  if (GetArenaNoVirtual() == NULL) {
    delete confidence_;
  }
  confidence_ = confidence;
  if (confidence) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.CountAndConfidence.confidence)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CountAndConfidence::kCountFieldNumber;
const int CountAndConfidence::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CountAndConfidence::CountAndConfidence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_CountAndConfidence.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.types.base.CountAndConfidence)
}
CountAndConfidence::CountAndConfidence(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_CountAndConfidence.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.CountAndConfidence)
}
CountAndConfidence::CountAndConfidence(const CountAndConfidence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_count()) {
    count_ = new ::google::protobuf::Int64Value(*from.count_);
  } else {
    count_ = NULL;
  }
  if (from.has_confidence()) {
    confidence_ = new ::sensoris::protobuf::types::base::Confidence(*from.confidence_);
  } else {
    confidence_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.CountAndConfidence)
}

void CountAndConfidence::SharedCtor() {
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&count_)) + sizeof(confidence_));
}

CountAndConfidence::~CountAndConfidence() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.CountAndConfidence)
  SharedDtor();
}

void CountAndConfidence::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete count_;
  if (this != internal_default_instance()) delete confidence_;
}

void CountAndConfidence::ArenaDtor(void* object) {
  CountAndConfidence* _this = reinterpret_cast< CountAndConfidence* >(object);
  (void)_this;
}
void CountAndConfidence::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CountAndConfidence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CountAndConfidence::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CountAndConfidence& CountAndConfidence::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_CountAndConfidence.base);
  return *internal_default_instance();
}


void CountAndConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.CountAndConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && count_ != NULL) {
    delete count_;
  }
  count_ = NULL;
  if (GetArenaNoVirtual() == NULL && confidence_ != NULL) {
    delete confidence_;
  }
  confidence_ = NULL;
  _internal_metadata_.Clear();
}

bool CountAndConfidence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.types.base.CountAndConfidence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Int64Value count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_count()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.types.base.Confidence confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_confidence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.types.base.CountAndConfidence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.types.base.CountAndConfidence)
  return false;
#undef DO_
}

void CountAndConfidence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.types.base.CountAndConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value count = 1;
  if (this->has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_count(), output);
  }

  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if (this->has_confidence()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_confidence(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.types.base.CountAndConfidence)
}

::google::protobuf::uint8* CountAndConfidence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.CountAndConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value count = 1;
  if (this->has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_count(), deterministic, target);
  }

  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if (this->has_confidence()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_confidence(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.CountAndConfidence)
  return target;
}

size_t CountAndConfidence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.CountAndConfidence)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Int64Value count = 1;
  if (this->has_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *count_);
  }

  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if (this->has_confidence()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *confidence_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CountAndConfidence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.types.base.CountAndConfidence)
  GOOGLE_DCHECK_NE(&from, this);
  const CountAndConfidence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CountAndConfidence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.types.base.CountAndConfidence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.types.base.CountAndConfidence)
    MergeFrom(*source);
  }
}

void CountAndConfidence::MergeFrom(const CountAndConfidence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.CountAndConfidence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_count()) {
    mutable_count()->::google::protobuf::Int64Value::MergeFrom(from.count());
  }
  if (from.has_confidence()) {
    mutable_confidence()->::sensoris::protobuf::types::base::Confidence::MergeFrom(from.confidence());
  }
}

void CountAndConfidence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.types.base.CountAndConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CountAndConfidence::CopyFrom(const CountAndConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.CountAndConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CountAndConfidence::IsInitialized() const {
  return true;
}

void CountAndConfidence::Swap(CountAndConfidence* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CountAndConfidence* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CountAndConfidence::UnsafeArenaSwap(CountAndConfidence* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CountAndConfidence::InternalSwap(CountAndConfidence* other) {
  using std::swap;
  swap(count_, other->count_);
  swap(confidence_, other->confidence_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CountAndConfidence::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Int64Matrix3x3::InitAsDefaultInstance() {
  ::sensoris::protobuf::types::base::_Int64Matrix3x3_default_instance_._instance.get_mutable()->a11_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::types::base::_Int64Matrix3x3_default_instance_._instance.get_mutable()->a12_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::types::base::_Int64Matrix3x3_default_instance_._instance.get_mutable()->a13_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::types::base::_Int64Matrix3x3_default_instance_._instance.get_mutable()->a21_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::types::base::_Int64Matrix3x3_default_instance_._instance.get_mutable()->a22_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::types::base::_Int64Matrix3x3_default_instance_._instance.get_mutable()->a23_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::types::base::_Int64Matrix3x3_default_instance_._instance.get_mutable()->a31_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::types::base::_Int64Matrix3x3_default_instance_._instance.get_mutable()->a32_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::types::base::_Int64Matrix3x3_default_instance_._instance.get_mutable()->a33_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
void Int64Matrix3x3::unsafe_arena_set_allocated_a11(
    ::google::protobuf::Int64Value* a11) {
  if (GetArenaNoVirtual() == NULL) {
    delete a11_;
  }
  a11_ = a11;
  if (a11) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64Matrix3x3.a11)
}
void Int64Matrix3x3::clear_a11() {
  if (GetArenaNoVirtual() == NULL && a11_ != NULL) {
    delete a11_;
  }
  a11_ = NULL;
}
void Int64Matrix3x3::unsafe_arena_set_allocated_a12(
    ::google::protobuf::Int64Value* a12) {
  if (GetArenaNoVirtual() == NULL) {
    delete a12_;
  }
  a12_ = a12;
  if (a12) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64Matrix3x3.a12)
}
void Int64Matrix3x3::clear_a12() {
  if (GetArenaNoVirtual() == NULL && a12_ != NULL) {
    delete a12_;
  }
  a12_ = NULL;
}
void Int64Matrix3x3::unsafe_arena_set_allocated_a13(
    ::google::protobuf::Int64Value* a13) {
  if (GetArenaNoVirtual() == NULL) {
    delete a13_;
  }
  a13_ = a13;
  if (a13) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64Matrix3x3.a13)
}
void Int64Matrix3x3::clear_a13() {
  if (GetArenaNoVirtual() == NULL && a13_ != NULL) {
    delete a13_;
  }
  a13_ = NULL;
}
void Int64Matrix3x3::unsafe_arena_set_allocated_a21(
    ::google::protobuf::Int64Value* a21) {
  if (GetArenaNoVirtual() == NULL) {
    delete a21_;
  }
  a21_ = a21;
  if (a21) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64Matrix3x3.a21)
}
void Int64Matrix3x3::clear_a21() {
  if (GetArenaNoVirtual() == NULL && a21_ != NULL) {
    delete a21_;
  }
  a21_ = NULL;
}
void Int64Matrix3x3::unsafe_arena_set_allocated_a22(
    ::google::protobuf::Int64Value* a22) {
  if (GetArenaNoVirtual() == NULL) {
    delete a22_;
  }
  a22_ = a22;
  if (a22) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64Matrix3x3.a22)
}
void Int64Matrix3x3::clear_a22() {
  if (GetArenaNoVirtual() == NULL && a22_ != NULL) {
    delete a22_;
  }
  a22_ = NULL;
}
void Int64Matrix3x3::unsafe_arena_set_allocated_a23(
    ::google::protobuf::Int64Value* a23) {
  if (GetArenaNoVirtual() == NULL) {
    delete a23_;
  }
  a23_ = a23;
  if (a23) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64Matrix3x3.a23)
}
void Int64Matrix3x3::clear_a23() {
  if (GetArenaNoVirtual() == NULL && a23_ != NULL) {
    delete a23_;
  }
  a23_ = NULL;
}
void Int64Matrix3x3::unsafe_arena_set_allocated_a31(
    ::google::protobuf::Int64Value* a31) {
  if (GetArenaNoVirtual() == NULL) {
    delete a31_;
  }
  a31_ = a31;
  if (a31) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64Matrix3x3.a31)
}
void Int64Matrix3x3::clear_a31() {
  if (GetArenaNoVirtual() == NULL && a31_ != NULL) {
    delete a31_;
  }
  a31_ = NULL;
}
void Int64Matrix3x3::unsafe_arena_set_allocated_a32(
    ::google::protobuf::Int64Value* a32) {
  if (GetArenaNoVirtual() == NULL) {
    delete a32_;
  }
  a32_ = a32;
  if (a32) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64Matrix3x3.a32)
}
void Int64Matrix3x3::clear_a32() {
  if (GetArenaNoVirtual() == NULL && a32_ != NULL) {
    delete a32_;
  }
  a32_ = NULL;
}
void Int64Matrix3x3::unsafe_arena_set_allocated_a33(
    ::google::protobuf::Int64Value* a33) {
  if (GetArenaNoVirtual() == NULL) {
    delete a33_;
  }
  a33_ = a33;
  if (a33) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64Matrix3x3.a33)
}
void Int64Matrix3x3::clear_a33() {
  if (GetArenaNoVirtual() == NULL && a33_ != NULL) {
    delete a33_;
  }
  a33_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int64Matrix3x3::kA11FieldNumber;
const int Int64Matrix3x3::kA12FieldNumber;
const int Int64Matrix3x3::kA13FieldNumber;
const int Int64Matrix3x3::kA21FieldNumber;
const int Int64Matrix3x3::kA22FieldNumber;
const int Int64Matrix3x3::kA23FieldNumber;
const int Int64Matrix3x3::kA31FieldNumber;
const int Int64Matrix3x3::kA32FieldNumber;
const int Int64Matrix3x3::kA33FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int64Matrix3x3::Int64Matrix3x3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64Matrix3x3.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.types.base.Int64Matrix3x3)
}
Int64Matrix3x3::Int64Matrix3x3(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64Matrix3x3.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Int64Matrix3x3)
}
Int64Matrix3x3::Int64Matrix3x3(const Int64Matrix3x3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_a11()) {
    a11_ = new ::google::protobuf::Int64Value(*from.a11_);
  } else {
    a11_ = NULL;
  }
  if (from.has_a12()) {
    a12_ = new ::google::protobuf::Int64Value(*from.a12_);
  } else {
    a12_ = NULL;
  }
  if (from.has_a13()) {
    a13_ = new ::google::protobuf::Int64Value(*from.a13_);
  } else {
    a13_ = NULL;
  }
  if (from.has_a21()) {
    a21_ = new ::google::protobuf::Int64Value(*from.a21_);
  } else {
    a21_ = NULL;
  }
  if (from.has_a22()) {
    a22_ = new ::google::protobuf::Int64Value(*from.a22_);
  } else {
    a22_ = NULL;
  }
  if (from.has_a23()) {
    a23_ = new ::google::protobuf::Int64Value(*from.a23_);
  } else {
    a23_ = NULL;
  }
  if (from.has_a31()) {
    a31_ = new ::google::protobuf::Int64Value(*from.a31_);
  } else {
    a31_ = NULL;
  }
  if (from.has_a32()) {
    a32_ = new ::google::protobuf::Int64Value(*from.a32_);
  } else {
    a32_ = NULL;
  }
  if (from.has_a33()) {
    a33_ = new ::google::protobuf::Int64Value(*from.a33_);
  } else {
    a33_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Int64Matrix3x3)
}

void Int64Matrix3x3::SharedCtor() {
  ::memset(&a11_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a33_) -
      reinterpret_cast<char*>(&a11_)) + sizeof(a33_));
}

Int64Matrix3x3::~Int64Matrix3x3() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Int64Matrix3x3)
  SharedDtor();
}

void Int64Matrix3x3::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete a11_;
  if (this != internal_default_instance()) delete a12_;
  if (this != internal_default_instance()) delete a13_;
  if (this != internal_default_instance()) delete a21_;
  if (this != internal_default_instance()) delete a22_;
  if (this != internal_default_instance()) delete a23_;
  if (this != internal_default_instance()) delete a31_;
  if (this != internal_default_instance()) delete a32_;
  if (this != internal_default_instance()) delete a33_;
}

void Int64Matrix3x3::ArenaDtor(void* object) {
  Int64Matrix3x3* _this = reinterpret_cast< Int64Matrix3x3* >(object);
  (void)_this;
}
void Int64Matrix3x3::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Int64Matrix3x3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Int64Matrix3x3::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Int64Matrix3x3& Int64Matrix3x3::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Int64Matrix3x3.base);
  return *internal_default_instance();
}


void Int64Matrix3x3::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Int64Matrix3x3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && a11_ != NULL) {
    delete a11_;
  }
  a11_ = NULL;
  if (GetArenaNoVirtual() == NULL && a12_ != NULL) {
    delete a12_;
  }
  a12_ = NULL;
  if (GetArenaNoVirtual() == NULL && a13_ != NULL) {
    delete a13_;
  }
  a13_ = NULL;
  if (GetArenaNoVirtual() == NULL && a21_ != NULL) {
    delete a21_;
  }
  a21_ = NULL;
  if (GetArenaNoVirtual() == NULL && a22_ != NULL) {
    delete a22_;
  }
  a22_ = NULL;
  if (GetArenaNoVirtual() == NULL && a23_ != NULL) {
    delete a23_;
  }
  a23_ = NULL;
  if (GetArenaNoVirtual() == NULL && a31_ != NULL) {
    delete a31_;
  }
  a31_ = NULL;
  if (GetArenaNoVirtual() == NULL && a32_ != NULL) {
    delete a32_;
  }
  a32_ = NULL;
  if (GetArenaNoVirtual() == NULL && a33_ != NULL) {
    delete a33_;
  }
  a33_ = NULL;
  _internal_metadata_.Clear();
}

bool Int64Matrix3x3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.types.base.Int64Matrix3x3)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Int64Value a11 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_a11()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value a12 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_a12()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value a13 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_a13()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value a21 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_a21()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value a22 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_a22()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value a23 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_a23()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value a31 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_a31()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value a32 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_a32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value a33 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_a33()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.types.base.Int64Matrix3x3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.types.base.Int64Matrix3x3)
  return false;
#undef DO_
}

void Int64Matrix3x3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.types.base.Int64Matrix3x3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value a11 = 1;
  if (this->has_a11()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_a11(), output);
  }

  // .google.protobuf.Int64Value a12 = 2;
  if (this->has_a12()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_a12(), output);
  }

  // .google.protobuf.Int64Value a13 = 3;
  if (this->has_a13()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_a13(), output);
  }

  // .google.protobuf.Int64Value a21 = 4;
  if (this->has_a21()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_a21(), output);
  }

  // .google.protobuf.Int64Value a22 = 5;
  if (this->has_a22()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_a22(), output);
  }

  // .google.protobuf.Int64Value a23 = 6;
  if (this->has_a23()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_a23(), output);
  }

  // .google.protobuf.Int64Value a31 = 7;
  if (this->has_a31()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_a31(), output);
  }

  // .google.protobuf.Int64Value a32 = 8;
  if (this->has_a32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_a32(), output);
  }

  // .google.protobuf.Int64Value a33 = 9;
  if (this->has_a33()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_a33(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.types.base.Int64Matrix3x3)
}

::google::protobuf::uint8* Int64Matrix3x3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Int64Matrix3x3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value a11 = 1;
  if (this->has_a11()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_a11(), deterministic, target);
  }

  // .google.protobuf.Int64Value a12 = 2;
  if (this->has_a12()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_a12(), deterministic, target);
  }

  // .google.protobuf.Int64Value a13 = 3;
  if (this->has_a13()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_a13(), deterministic, target);
  }

  // .google.protobuf.Int64Value a21 = 4;
  if (this->has_a21()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_a21(), deterministic, target);
  }

  // .google.protobuf.Int64Value a22 = 5;
  if (this->has_a22()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_a22(), deterministic, target);
  }

  // .google.protobuf.Int64Value a23 = 6;
  if (this->has_a23()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_a23(), deterministic, target);
  }

  // .google.protobuf.Int64Value a31 = 7;
  if (this->has_a31()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_a31(), deterministic, target);
  }

  // .google.protobuf.Int64Value a32 = 8;
  if (this->has_a32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_a32(), deterministic, target);
  }

  // .google.protobuf.Int64Value a33 = 9;
  if (this->has_a33()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_a33(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Int64Matrix3x3)
  return target;
}

size_t Int64Matrix3x3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Int64Matrix3x3)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Int64Value a11 = 1;
  if (this->has_a11()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *a11_);
  }

  // .google.protobuf.Int64Value a12 = 2;
  if (this->has_a12()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *a12_);
  }

  // .google.protobuf.Int64Value a13 = 3;
  if (this->has_a13()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *a13_);
  }

  // .google.protobuf.Int64Value a21 = 4;
  if (this->has_a21()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *a21_);
  }

  // .google.protobuf.Int64Value a22 = 5;
  if (this->has_a22()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *a22_);
  }

  // .google.protobuf.Int64Value a23 = 6;
  if (this->has_a23()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *a23_);
  }

  // .google.protobuf.Int64Value a31 = 7;
  if (this->has_a31()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *a31_);
  }

  // .google.protobuf.Int64Value a32 = 8;
  if (this->has_a32()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *a32_);
  }

  // .google.protobuf.Int64Value a33 = 9;
  if (this->has_a33()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *a33_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Int64Matrix3x3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.types.base.Int64Matrix3x3)
  GOOGLE_DCHECK_NE(&from, this);
  const Int64Matrix3x3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Int64Matrix3x3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.types.base.Int64Matrix3x3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.types.base.Int64Matrix3x3)
    MergeFrom(*source);
  }
}

void Int64Matrix3x3::MergeFrom(const Int64Matrix3x3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Int64Matrix3x3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_a11()) {
    mutable_a11()->::google::protobuf::Int64Value::MergeFrom(from.a11());
  }
  if (from.has_a12()) {
    mutable_a12()->::google::protobuf::Int64Value::MergeFrom(from.a12());
  }
  if (from.has_a13()) {
    mutable_a13()->::google::protobuf::Int64Value::MergeFrom(from.a13());
  }
  if (from.has_a21()) {
    mutable_a21()->::google::protobuf::Int64Value::MergeFrom(from.a21());
  }
  if (from.has_a22()) {
    mutable_a22()->::google::protobuf::Int64Value::MergeFrom(from.a22());
  }
  if (from.has_a23()) {
    mutable_a23()->::google::protobuf::Int64Value::MergeFrom(from.a23());
  }
  if (from.has_a31()) {
    mutable_a31()->::google::protobuf::Int64Value::MergeFrom(from.a31());
  }
  if (from.has_a32()) {
    mutable_a32()->::google::protobuf::Int64Value::MergeFrom(from.a32());
  }
  if (from.has_a33()) {
    mutable_a33()->::google::protobuf::Int64Value::MergeFrom(from.a33());
  }
}

void Int64Matrix3x3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.types.base.Int64Matrix3x3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Int64Matrix3x3::CopyFrom(const Int64Matrix3x3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Int64Matrix3x3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Int64Matrix3x3::IsInitialized() const {
  return true;
}

void Int64Matrix3x3::Swap(Int64Matrix3x3* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Int64Matrix3x3* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Int64Matrix3x3::UnsafeArenaSwap(Int64Matrix3x3* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Int64Matrix3x3::InternalSwap(Int64Matrix3x3* other) {
  using std::swap;
  swap(a11_, other->a11_);
  swap(a12_, other->a12_);
  swap(a13_, other->a13_);
  swap(a21_, other->a21_);
  swap(a22_, other->a22_);
  swap(a23_, other->a23_);
  swap(a31_, other->a31_);
  swap(a32_, other->a32_);
  swap(a33_, other->a33_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Int64Matrix3x3::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 3, false >
  exponent(kExponentFieldNumber, GOOGLE_LONGLONG(0));

// @@protoc_insertion_point(namespace_scope)
}  // namespace base
}  // namespace types
}  // namespace protobuf
}  // namespace sensoris
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::types::base::Version* Arena::CreateMaybeMessage< ::sensoris::protobuf::types::base::Version >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::types::base::Version >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::types::base::Entity* Arena::CreateMaybeMessage< ::sensoris::protobuf::types::base::Entity >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::types::base::Entity >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::types::base::Timestamp* Arena::CreateMaybeMessage< ::sensoris::protobuf::types::base::Timestamp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::types::base::Timestamp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::types::base::TimestampInterval* Arena::CreateMaybeMessage< ::sensoris::protobuf::types::base::TimestampInterval >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::types::base::TimestampInterval >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::types::base::EventEnvelope* Arena::CreateMaybeMessage< ::sensoris::protobuf::types::base::EventEnvelope >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::types::base::EventEnvelope >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::types::base::EventDetectionStatus* Arena::CreateMaybeMessage< ::sensoris::protobuf::types::base::EventDetectionStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::types::base::EventDetectionStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::types::base::CategoryEnvelope* Arena::CreateMaybeMessage< ::sensoris::protobuf::types::base::CategoryEnvelope >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::types::base::CategoryEnvelope >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::types::base::Int64StatisticMeasure* Arena::CreateMaybeMessage< ::sensoris::protobuf::types::base::Int64StatisticMeasure >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::types::base::Int64StatisticMeasure >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy* Arena::CreateMaybeMessage< ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin* Arena::CreateMaybeMessage< ::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* Arena::CreateMaybeMessage< ::sensoris::protobuf::types::base::AbsoluteInt64Histogram >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::types::base::AbsoluteInt64Histogram >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin* Arena::CreateMaybeMessage< ::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::types::base::RelativeInt64Histogram* Arena::CreateMaybeMessage< ::sensoris::protobuf::types::base::RelativeInt64Histogram >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::types::base::RelativeInt64Histogram >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::types::base::Int64GaussianDistribution* Arena::CreateMaybeMessage< ::sensoris::protobuf::types::base::Int64GaussianDistribution >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::types::base::Int64GaussianDistribution >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::types::base::Int64Value* Arena::CreateMaybeMessage< ::sensoris::protobuf::types::base::Int64Value >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::types::base::Int64Value >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy* Arena::CreateMaybeMessage< ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* Arena::CreateMaybeMessage< ::sensoris::protobuf::types::base::Int64ValueAndAccuracy >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::types::base::Int64ValueAndAccuracy >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::types::base::Confidence* Arena::CreateMaybeMessage< ::sensoris::protobuf::types::base::Confidence >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::types::base::Confidence >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::types::base::CountAndConfidence* Arena::CreateMaybeMessage< ::sensoris::protobuf::types::base::CountAndConfidence >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::types::base::CountAndConfidence >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::types::base::Int64Matrix3x3* Arena::CreateMaybeMessage< ::sensoris::protobuf::types::base::Int64Matrix3x3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::types::base::Int64Matrix3x3 >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
