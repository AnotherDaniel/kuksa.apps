// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/types/base.proto

#ifndef PROTOBUF_INCLUDED_sensoris_2fprotobuf_2ftypes_2fbase_2eproto
#define PROTOBUF_INCLUDED_sensoris_2fprotobuf_2ftypes_2fbase_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include <google/protobuf/descriptor.pb.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto 

namespace protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[20];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto
namespace sensoris {
namespace protobuf {
namespace types {
namespace base {
class AbsoluteInt64Histogram;
class AbsoluteInt64HistogramDefaultTypeInternal;
extern AbsoluteInt64HistogramDefaultTypeInternal _AbsoluteInt64Histogram_default_instance_;
class AbsoluteInt64Histogram_Bin;
class AbsoluteInt64Histogram_BinDefaultTypeInternal;
extern AbsoluteInt64Histogram_BinDefaultTypeInternal _AbsoluteInt64Histogram_Bin_default_instance_;
class CategoryEnvelope;
class CategoryEnvelopeDefaultTypeInternal;
extern CategoryEnvelopeDefaultTypeInternal _CategoryEnvelope_default_instance_;
class Confidence;
class ConfidenceDefaultTypeInternal;
extern ConfidenceDefaultTypeInternal _Confidence_default_instance_;
class CountAndConfidence;
class CountAndConfidenceDefaultTypeInternal;
extern CountAndConfidenceDefaultTypeInternal _CountAndConfidence_default_instance_;
class Entity;
class EntityDefaultTypeInternal;
extern EntityDefaultTypeInternal _Entity_default_instance_;
class EventDetectionStatus;
class EventDetectionStatusDefaultTypeInternal;
extern EventDetectionStatusDefaultTypeInternal _EventDetectionStatus_default_instance_;
class EventEnvelope;
class EventEnvelopeDefaultTypeInternal;
extern EventEnvelopeDefaultTypeInternal _EventEnvelope_default_instance_;
class Int64GaussianDistribution;
class Int64GaussianDistributionDefaultTypeInternal;
extern Int64GaussianDistributionDefaultTypeInternal _Int64GaussianDistribution_default_instance_;
class Int64Matrix3x3;
class Int64Matrix3x3DefaultTypeInternal;
extern Int64Matrix3x3DefaultTypeInternal _Int64Matrix3x3_default_instance_;
class Int64StatisticMeasure;
class Int64StatisticMeasureDefaultTypeInternal;
extern Int64StatisticMeasureDefaultTypeInternal _Int64StatisticMeasure_default_instance_;
class Int64StatisticMeasureAndAccuracy;
class Int64StatisticMeasureAndAccuracyDefaultTypeInternal;
extern Int64StatisticMeasureAndAccuracyDefaultTypeInternal _Int64StatisticMeasureAndAccuracy_default_instance_;
class Int64Value;
class Int64ValueDefaultTypeInternal;
extern Int64ValueDefaultTypeInternal _Int64Value_default_instance_;
class Int64ValueAndAccuracy;
class Int64ValueAndAccuracyDefaultTypeInternal;
extern Int64ValueAndAccuracyDefaultTypeInternal _Int64ValueAndAccuracy_default_instance_;
class Int64ValueAndAccuracy_ValueAndAccuracy;
class Int64ValueAndAccuracy_ValueAndAccuracyDefaultTypeInternal;
extern Int64ValueAndAccuracy_ValueAndAccuracyDefaultTypeInternal _Int64ValueAndAccuracy_ValueAndAccuracy_default_instance_;
class RelativeInt64Histogram;
class RelativeInt64HistogramDefaultTypeInternal;
extern RelativeInt64HistogramDefaultTypeInternal _RelativeInt64Histogram_default_instance_;
class RelativeInt64Histogram_Bin;
class RelativeInt64Histogram_BinDefaultTypeInternal;
extern RelativeInt64Histogram_BinDefaultTypeInternal _RelativeInt64Histogram_Bin_default_instance_;
class Timestamp;
class TimestampDefaultTypeInternal;
extern TimestampDefaultTypeInternal _Timestamp_default_instance_;
class TimestampInterval;
class TimestampIntervalDefaultTypeInternal;
extern TimestampIntervalDefaultTypeInternal _TimestampInterval_default_instance_;
class Version;
class VersionDefaultTypeInternal;
extern VersionDefaultTypeInternal _Version_default_instance_;
}  // namespace base
}  // namespace types
}  // namespace protobuf
}  // namespace sensoris
namespace google {
namespace protobuf {
template<> ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* Arena::CreateMaybeMessage<::sensoris::protobuf::types::base::AbsoluteInt64Histogram>(Arena*);
template<> ::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin* Arena::CreateMaybeMessage<::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin>(Arena*);
template<> ::sensoris::protobuf::types::base::CategoryEnvelope* Arena::CreateMaybeMessage<::sensoris::protobuf::types::base::CategoryEnvelope>(Arena*);
template<> ::sensoris::protobuf::types::base::Confidence* Arena::CreateMaybeMessage<::sensoris::protobuf::types::base::Confidence>(Arena*);
template<> ::sensoris::protobuf::types::base::CountAndConfidence* Arena::CreateMaybeMessage<::sensoris::protobuf::types::base::CountAndConfidence>(Arena*);
template<> ::sensoris::protobuf::types::base::Entity* Arena::CreateMaybeMessage<::sensoris::protobuf::types::base::Entity>(Arena*);
template<> ::sensoris::protobuf::types::base::EventDetectionStatus* Arena::CreateMaybeMessage<::sensoris::protobuf::types::base::EventDetectionStatus>(Arena*);
template<> ::sensoris::protobuf::types::base::EventEnvelope* Arena::CreateMaybeMessage<::sensoris::protobuf::types::base::EventEnvelope>(Arena*);
template<> ::sensoris::protobuf::types::base::Int64GaussianDistribution* Arena::CreateMaybeMessage<::sensoris::protobuf::types::base::Int64GaussianDistribution>(Arena*);
template<> ::sensoris::protobuf::types::base::Int64Matrix3x3* Arena::CreateMaybeMessage<::sensoris::protobuf::types::base::Int64Matrix3x3>(Arena*);
template<> ::sensoris::protobuf::types::base::Int64StatisticMeasure* Arena::CreateMaybeMessage<::sensoris::protobuf::types::base::Int64StatisticMeasure>(Arena*);
template<> ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy* Arena::CreateMaybeMessage<::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy>(Arena*);
template<> ::sensoris::protobuf::types::base::Int64Value* Arena::CreateMaybeMessage<::sensoris::protobuf::types::base::Int64Value>(Arena*);
template<> ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* Arena::CreateMaybeMessage<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>(Arena*);
template<> ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy* Arena::CreateMaybeMessage<::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy>(Arena*);
template<> ::sensoris::protobuf::types::base::RelativeInt64Histogram* Arena::CreateMaybeMessage<::sensoris::protobuf::types::base::RelativeInt64Histogram>(Arena*);
template<> ::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin* Arena::CreateMaybeMessage<::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin>(Arena*);
template<> ::sensoris::protobuf::types::base::Timestamp* Arena::CreateMaybeMessage<::sensoris::protobuf::types::base::Timestamp>(Arena*);
template<> ::sensoris::protobuf::types::base::TimestampInterval* Arena::CreateMaybeMessage<::sensoris::protobuf::types::base::TimestampInterval>(Arena*);
template<> ::sensoris::protobuf::types::base::Version* Arena::CreateMaybeMessage<::sensoris::protobuf::types::base::Version>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace sensoris {
namespace protobuf {
namespace types {
namespace base {

enum EventDetectionStatus_Type {
  EventDetectionStatus_Type_UNKNOWN_TYPE = 0,
  EventDetectionStatus_Type_EXPECTED_AND_DETECTED = 1,
  EventDetectionStatus_Type_EXPECTED_AND_NOT_DETECTED = 2,
  EventDetectionStatus_Type_EXPECTED_AND_NOT_DETECTED_ACCESS_BLOCKED = 3,
  EventDetectionStatus_Type_EXPECTED_AND_NOT_DETECTED_ACCESS_AVAILABLE = 4,
  EventDetectionStatus_Type_NOT_EXPECTED_AND_DETECTED = 5,
  EventDetectionStatus_Type_EventDetectionStatus_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EventDetectionStatus_Type_EventDetectionStatus_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EventDetectionStatus_Type_IsValid(int value);
const EventDetectionStatus_Type EventDetectionStatus_Type_Type_MIN = EventDetectionStatus_Type_UNKNOWN_TYPE;
const EventDetectionStatus_Type EventDetectionStatus_Type_Type_MAX = EventDetectionStatus_Type_NOT_EXPECTED_AND_DETECTED;
const int EventDetectionStatus_Type_Type_ARRAYSIZE = EventDetectionStatus_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* EventDetectionStatus_Type_descriptor();
inline const ::std::string& EventDetectionStatus_Type_Name(EventDetectionStatus_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    EventDetectionStatus_Type_descriptor(), value);
}
inline bool EventDetectionStatus_Type_Parse(
    const ::std::string& name, EventDetectionStatus_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EventDetectionStatus_Type>(
    EventDetectionStatus_Type_descriptor(), name, value);
}
enum StatisticMeasureType {
  UNKNOWN_STATISTIC_MEASURE_TYPE = 0,
  MINIMUM = 1,
  MAXIMUM = 2,
  AVERAGE = 3,
  MEDIAN = 4,
  StatisticMeasureType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StatisticMeasureType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StatisticMeasureType_IsValid(int value);
const StatisticMeasureType StatisticMeasureType_MIN = UNKNOWN_STATISTIC_MEASURE_TYPE;
const StatisticMeasureType StatisticMeasureType_MAX = MEDIAN;
const int StatisticMeasureType_ARRAYSIZE = StatisticMeasureType_MAX + 1;

const ::google::protobuf::EnumDescriptor* StatisticMeasureType_descriptor();
inline const ::std::string& StatisticMeasureType_Name(StatisticMeasureType value) {
  return ::google::protobuf::internal::NameOfEnum(
    StatisticMeasureType_descriptor(), value);
}
inline bool StatisticMeasureType_Parse(
    const ::std::string& name, StatisticMeasureType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StatisticMeasureType>(
    StatisticMeasureType_descriptor(), name, value);
}
enum SystemStatus {
  UNKNOWN_SYSTEM_STATUS = 0,
  ACTIVE = 1,
  INACTIVE = 2,
  DISABLED = 3,
  SystemStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SystemStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SystemStatus_IsValid(int value);
const SystemStatus SystemStatus_MIN = UNKNOWN_SYSTEM_STATUS;
const SystemStatus SystemStatus_MAX = DISABLED;
const int SystemStatus_ARRAYSIZE = SystemStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* SystemStatus_descriptor();
inline const ::std::string& SystemStatus_Name(SystemStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    SystemStatus_descriptor(), value);
}
inline bool SystemStatus_Parse(
    const ::std::string& name, SystemStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SystemStatus>(
    SystemStatus_descriptor(), name, value);
}
// ===================================================================

class Version : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.base.Version) */ {
 public:
  Version();
  virtual ~Version();

  Version(const Version& from);

  inline Version& operator=(const Version& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Version(Version&& from) noexcept
    : Version() {
    *this = ::std::move(from);
  }

  inline Version& operator=(Version&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Version& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Version* internal_default_instance() {
    return reinterpret_cast<const Version*>(
               &_Version_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(Version* other);
  void Swap(Version* other);
  friend void swap(Version& a, Version& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Version* New() const final {
    return CreateMaybeMessage<Version>(NULL);
  }

  Version* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Version>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Version& from);
  void MergeFrom(const Version& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Version* other);
  protected:
  explicit Version(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Int64Value major = 1;
  bool has_major() const;
  void clear_major();
  static const int kMajorFieldNumber = 1;
  private:
  const ::google::protobuf::Int64Value& _internal_major() const;
  public:
  const ::google::protobuf::Int64Value& major() const;
  ::google::protobuf::Int64Value* release_major();
  ::google::protobuf::Int64Value* mutable_major();
  void set_allocated_major(::google::protobuf::Int64Value* major);
  void unsafe_arena_set_allocated_major(
      ::google::protobuf::Int64Value* major);
  ::google::protobuf::Int64Value* unsafe_arena_release_major();

  // .google.protobuf.Int64Value minor = 2;
  bool has_minor() const;
  void clear_minor();
  static const int kMinorFieldNumber = 2;
  private:
  const ::google::protobuf::Int64Value& _internal_minor() const;
  public:
  const ::google::protobuf::Int64Value& minor() const;
  ::google::protobuf::Int64Value* release_minor();
  ::google::protobuf::Int64Value* mutable_minor();
  void set_allocated_minor(::google::protobuf::Int64Value* minor);
  void unsafe_arena_set_allocated_minor(
      ::google::protobuf::Int64Value* minor);
  ::google::protobuf::Int64Value* unsafe_arena_release_minor();

  // .google.protobuf.Int64Value patch = 3;
  bool has_patch() const;
  void clear_patch();
  static const int kPatchFieldNumber = 3;
  private:
  const ::google::protobuf::Int64Value& _internal_patch() const;
  public:
  const ::google::protobuf::Int64Value& patch() const;
  ::google::protobuf::Int64Value* release_patch();
  ::google::protobuf::Int64Value* mutable_patch();
  void set_allocated_patch(::google::protobuf::Int64Value* patch);
  void unsafe_arena_set_allocated_patch(
      ::google::protobuf::Int64Value* patch);
  ::google::protobuf::Int64Value* unsafe_arena_release_patch();

  // .google.protobuf.StringValue name = 4;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 4;
  private:
  const ::google::protobuf::StringValue& _internal_name() const;
  public:
  const ::google::protobuf::StringValue& name() const;
  ::google::protobuf::StringValue* release_name();
  ::google::protobuf::StringValue* mutable_name();
  void set_allocated_name(::google::protobuf::StringValue* name);
  void unsafe_arena_set_allocated_name(
      ::google::protobuf::StringValue* name);
  ::google::protobuf::StringValue* unsafe_arena_release_name();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.base.Version)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::Int64Value* major_;
  ::google::protobuf::Int64Value* minor_;
  ::google::protobuf::Int64Value* patch_;
  ::google::protobuf::StringValue* name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Entity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.base.Entity) */ {
 public:
  Entity();
  virtual ~Entity();

  Entity(const Entity& from);

  inline Entity& operator=(const Entity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Entity(Entity&& from) noexcept
    : Entity() {
    *this = ::std::move(from);
  }

  inline Entity& operator=(Entity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Entity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Entity* internal_default_instance() {
    return reinterpret_cast<const Entity*>(
               &_Entity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(Entity* other);
  void Swap(Entity* other);
  friend void swap(Entity& a, Entity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Entity* New() const final {
    return CreateMaybeMessage<Entity>(NULL);
  }

  Entity* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Entity>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Entity& from);
  void MergeFrom(const Entity& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Entity* other);
  protected:
  explicit Entity(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.protobuf.Any extension = 15;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 15;
  ::google::protobuf::Any* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_extension();
  const ::google::protobuf::Any& extension(int index) const;
  ::google::protobuf::Any* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      extension() const;

  // .google.protobuf.StringValue primary_id = 1;
  bool has_primary_id() const;
  void clear_primary_id();
  static const int kPrimaryIdFieldNumber = 1;
  private:
  const ::google::protobuf::StringValue& _internal_primary_id() const;
  public:
  const ::google::protobuf::StringValue& primary_id() const;
  ::google::protobuf::StringValue* release_primary_id();
  ::google::protobuf::StringValue* mutable_primary_id();
  void set_allocated_primary_id(::google::protobuf::StringValue* primary_id);
  void unsafe_arena_set_allocated_primary_id(
      ::google::protobuf::StringValue* primary_id);
  ::google::protobuf::StringValue* unsafe_arena_release_primary_id();

  // .google.protobuf.StringValue secondary_id = 2;
  bool has_secondary_id() const;
  void clear_secondary_id();
  static const int kSecondaryIdFieldNumber = 2;
  private:
  const ::google::protobuf::StringValue& _internal_secondary_id() const;
  public:
  const ::google::protobuf::StringValue& secondary_id() const;
  ::google::protobuf::StringValue* release_secondary_id();
  ::google::protobuf::StringValue* mutable_secondary_id();
  void set_allocated_secondary_id(::google::protobuf::StringValue* secondary_id);
  void unsafe_arena_set_allocated_secondary_id(
      ::google::protobuf::StringValue* secondary_id);
  ::google::protobuf::StringValue* unsafe_arena_release_secondary_id();

  // .google.protobuf.StringValue type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  private:
  const ::google::protobuf::StringValue& _internal_type() const;
  public:
  const ::google::protobuf::StringValue& type() const;
  ::google::protobuf::StringValue* release_type();
  ::google::protobuf::StringValue* mutable_type();
  void set_allocated_type(::google::protobuf::StringValue* type);
  void unsafe_arena_set_allocated_type(
      ::google::protobuf::StringValue* type);
  ::google::protobuf::StringValue* unsafe_arena_release_type();

  // .sensoris.protobuf.types.base.Version software_version = 4;
  bool has_software_version() const;
  void clear_software_version();
  static const int kSoftwareVersionFieldNumber = 4;
  private:
  const ::sensoris::protobuf::types::base::Version& _internal_software_version() const;
  public:
  const ::sensoris::protobuf::types::base::Version& software_version() const;
  ::sensoris::protobuf::types::base::Version* release_software_version();
  ::sensoris::protobuf::types::base::Version* mutable_software_version();
  void set_allocated_software_version(::sensoris::protobuf::types::base::Version* software_version);
  void unsafe_arena_set_allocated_software_version(
      ::sensoris::protobuf::types::base::Version* software_version);
  ::sensoris::protobuf::types::base::Version* unsafe_arena_release_software_version();

  // .sensoris.protobuf.types.base.Version hardware_version = 5;
  bool has_hardware_version() const;
  void clear_hardware_version();
  static const int kHardwareVersionFieldNumber = 5;
  private:
  const ::sensoris::protobuf::types::base::Version& _internal_hardware_version() const;
  public:
  const ::sensoris::protobuf::types::base::Version& hardware_version() const;
  ::sensoris::protobuf::types::base::Version* release_hardware_version();
  ::sensoris::protobuf::types::base::Version* mutable_hardware_version();
  void set_allocated_hardware_version(::sensoris::protobuf::types::base::Version* hardware_version);
  void unsafe_arena_set_allocated_hardware_version(
      ::sensoris::protobuf::types::base::Version* hardware_version);
  ::sensoris::protobuf::types::base::Version* unsafe_arena_release_hardware_version();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.base.Entity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > extension_;
  ::google::protobuf::StringValue* primary_id_;
  ::google::protobuf::StringValue* secondary_id_;
  ::google::protobuf::StringValue* type_;
  ::sensoris::protobuf::types::base::Version* software_version_;
  ::sensoris::protobuf::types::base::Version* hardware_version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Timestamp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.base.Timestamp) */ {
 public:
  Timestamp();
  virtual ~Timestamp();

  Timestamp(const Timestamp& from);

  inline Timestamp& operator=(const Timestamp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Timestamp(Timestamp&& from) noexcept
    : Timestamp() {
    *this = ::std::move(from);
  }

  inline Timestamp& operator=(Timestamp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Timestamp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Timestamp* internal_default_instance() {
    return reinterpret_cast<const Timestamp*>(
               &_Timestamp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(Timestamp* other);
  void Swap(Timestamp* other);
  friend void swap(Timestamp& a, Timestamp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Timestamp* New() const final {
    return CreateMaybeMessage<Timestamp>(NULL);
  }

  Timestamp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Timestamp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Timestamp& from);
  void MergeFrom(const Timestamp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Timestamp* other);
  protected:
  explicit Timestamp(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Int64Value posix_time = 1;
  bool has_posix_time() const;
  void clear_posix_time();
  static const int kPosixTimeFieldNumber = 1;
  private:
  const ::google::protobuf::Int64Value& _internal_posix_time() const;
  public:
  const ::google::protobuf::Int64Value& posix_time() const;
  ::google::protobuf::Int64Value* release_posix_time();
  ::google::protobuf::Int64Value* mutable_posix_time();
  void set_allocated_posix_time(::google::protobuf::Int64Value* posix_time);
  void unsafe_arena_set_allocated_posix_time(
      ::google::protobuf::Int64Value* posix_time);
  ::google::protobuf::Int64Value* unsafe_arena_release_posix_time();

  // .google.protobuf.Int64Value posix_time_fraction = 2 [(.sensoris.protobuf.types.base.exponent) = 0];
  bool has_posix_time_fraction() const;
  void clear_posix_time_fraction();
  static const int kPosixTimeFractionFieldNumber = 2;
  private:
  const ::google::protobuf::Int64Value& _internal_posix_time_fraction() const;
  public:
  const ::google::protobuf::Int64Value& posix_time_fraction() const;
  ::google::protobuf::Int64Value* release_posix_time_fraction();
  ::google::protobuf::Int64Value* mutable_posix_time_fraction();
  void set_allocated_posix_time_fraction(::google::protobuf::Int64Value* posix_time_fraction);
  void unsafe_arena_set_allocated_posix_time_fraction(
      ::google::protobuf::Int64Value* posix_time_fraction);
  ::google::protobuf::Int64Value* unsafe_arena_release_posix_time_fraction();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.base.Timestamp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::Int64Value* posix_time_;
  ::google::protobuf::Int64Value* posix_time_fraction_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TimestampInterval : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.base.TimestampInterval) */ {
 public:
  TimestampInterval();
  virtual ~TimestampInterval();

  TimestampInterval(const TimestampInterval& from);

  inline TimestampInterval& operator=(const TimestampInterval& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TimestampInterval(TimestampInterval&& from) noexcept
    : TimestampInterval() {
    *this = ::std::move(from);
  }

  inline TimestampInterval& operator=(TimestampInterval&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const TimestampInterval& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TimestampInterval* internal_default_instance() {
    return reinterpret_cast<const TimestampInterval*>(
               &_TimestampInterval_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(TimestampInterval* other);
  void Swap(TimestampInterval* other);
  friend void swap(TimestampInterval& a, TimestampInterval& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TimestampInterval* New() const final {
    return CreateMaybeMessage<TimestampInterval>(NULL);
  }

  TimestampInterval* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TimestampInterval>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TimestampInterval& from);
  void MergeFrom(const TimestampInterval& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TimestampInterval* other);
  protected:
  explicit TimestampInterval(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .sensoris.protobuf.types.base.Timestamp start_inclusive = 1;
  bool has_start_inclusive() const;
  void clear_start_inclusive();
  static const int kStartInclusiveFieldNumber = 1;
  private:
  const ::sensoris::protobuf::types::base::Timestamp& _internal_start_inclusive() const;
  public:
  const ::sensoris::protobuf::types::base::Timestamp& start_inclusive() const;
  ::sensoris::protobuf::types::base::Timestamp* release_start_inclusive();
  ::sensoris::protobuf::types::base::Timestamp* mutable_start_inclusive();
  void set_allocated_start_inclusive(::sensoris::protobuf::types::base::Timestamp* start_inclusive);
  void unsafe_arena_set_allocated_start_inclusive(
      ::sensoris::protobuf::types::base::Timestamp* start_inclusive);
  ::sensoris::protobuf::types::base::Timestamp* unsafe_arena_release_start_inclusive();

  // .sensoris.protobuf.types.base.Timestamp end_exclusive = 2;
  bool has_end_exclusive() const;
  void clear_end_exclusive();
  static const int kEndExclusiveFieldNumber = 2;
  private:
  const ::sensoris::protobuf::types::base::Timestamp& _internal_end_exclusive() const;
  public:
  const ::sensoris::protobuf::types::base::Timestamp& end_exclusive() const;
  ::sensoris::protobuf::types::base::Timestamp* release_end_exclusive();
  ::sensoris::protobuf::types::base::Timestamp* mutable_end_exclusive();
  void set_allocated_end_exclusive(::sensoris::protobuf::types::base::Timestamp* end_exclusive);
  void unsafe_arena_set_allocated_end_exclusive(
      ::sensoris::protobuf::types::base::Timestamp* end_exclusive);
  ::sensoris::protobuf::types::base::Timestamp* unsafe_arena_release_end_exclusive();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.base.TimestampInterval)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::sensoris::protobuf::types::base::Timestamp* start_inclusive_;
  ::sensoris::protobuf::types::base::Timestamp* end_exclusive_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EventEnvelope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.base.EventEnvelope) */ {
 public:
  EventEnvelope();
  virtual ~EventEnvelope();

  EventEnvelope(const EventEnvelope& from);

  inline EventEnvelope& operator=(const EventEnvelope& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EventEnvelope(EventEnvelope&& from) noexcept
    : EventEnvelope() {
    *this = ::std::move(from);
  }

  inline EventEnvelope& operator=(EventEnvelope&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const EventEnvelope& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EventEnvelope* internal_default_instance() {
    return reinterpret_cast<const EventEnvelope*>(
               &_EventEnvelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(EventEnvelope* other);
  void Swap(EventEnvelope* other);
  friend void swap(EventEnvelope& a, EventEnvelope& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EventEnvelope* New() const final {
    return CreateMaybeMessage<EventEnvelope>(NULL);
  }

  EventEnvelope* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EventEnvelope>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EventEnvelope& from);
  void MergeFrom(const EventEnvelope& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventEnvelope* other);
  protected:
  explicit EventEnvelope(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.protobuf.Any extension = 15;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 15;
  ::google::protobuf::Any* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_extension();
  const ::google::protobuf::Any& extension(int index) const;
  ::google::protobuf::Any* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      extension() const;

  // .google.protobuf.Int64Value id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::protobuf::Int64Value& _internal_id() const;
  public:
  const ::google::protobuf::Int64Value& id() const;
  ::google::protobuf::Int64Value* release_id();
  ::google::protobuf::Int64Value* mutable_id();
  void set_allocated_id(::google::protobuf::Int64Value* id);
  void unsafe_arena_set_allocated_id(
      ::google::protobuf::Int64Value* id);
  ::google::protobuf::Int64Value* unsafe_arena_release_id();

  // .sensoris.protobuf.types.base.Timestamp timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  private:
  const ::sensoris::protobuf::types::base::Timestamp& _internal_timestamp() const;
  public:
  const ::sensoris::protobuf::types::base::Timestamp& timestamp() const;
  ::sensoris::protobuf::types::base::Timestamp* release_timestamp();
  ::sensoris::protobuf::types::base::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::sensoris::protobuf::types::base::Timestamp* timestamp);
  void unsafe_arena_set_allocated_timestamp(
      ::sensoris::protobuf::types::base::Timestamp* timestamp);
  ::sensoris::protobuf::types::base::Timestamp* unsafe_arena_release_timestamp();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.base.EventEnvelope)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > extension_;
  ::google::protobuf::Int64Value* id_;
  ::sensoris::protobuf::types::base::Timestamp* timestamp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EventDetectionStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.base.EventDetectionStatus) */ {
 public:
  EventDetectionStatus();
  virtual ~EventDetectionStatus();

  EventDetectionStatus(const EventDetectionStatus& from);

  inline EventDetectionStatus& operator=(const EventDetectionStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EventDetectionStatus(EventDetectionStatus&& from) noexcept
    : EventDetectionStatus() {
    *this = ::std::move(from);
  }

  inline EventDetectionStatus& operator=(EventDetectionStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const EventDetectionStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EventDetectionStatus* internal_default_instance() {
    return reinterpret_cast<const EventDetectionStatus*>(
               &_EventDetectionStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(EventDetectionStatus* other);
  void Swap(EventDetectionStatus* other);
  friend void swap(EventDetectionStatus& a, EventDetectionStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EventDetectionStatus* New() const final {
    return CreateMaybeMessage<EventDetectionStatus>(NULL);
  }

  EventDetectionStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EventDetectionStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EventDetectionStatus& from);
  void MergeFrom(const EventDetectionStatus& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventDetectionStatus* other);
  protected:
  explicit EventDetectionStatus(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EventDetectionStatus_Type Type;
  static const Type UNKNOWN_TYPE =
    EventDetectionStatus_Type_UNKNOWN_TYPE;
  static const Type EXPECTED_AND_DETECTED =
    EventDetectionStatus_Type_EXPECTED_AND_DETECTED;
  static const Type EXPECTED_AND_NOT_DETECTED =
    EventDetectionStatus_Type_EXPECTED_AND_NOT_DETECTED;
  static const Type EXPECTED_AND_NOT_DETECTED_ACCESS_BLOCKED =
    EventDetectionStatus_Type_EXPECTED_AND_NOT_DETECTED_ACCESS_BLOCKED;
  static const Type EXPECTED_AND_NOT_DETECTED_ACCESS_AVAILABLE =
    EventDetectionStatus_Type_EXPECTED_AND_NOT_DETECTED_ACCESS_AVAILABLE;
  static const Type NOT_EXPECTED_AND_DETECTED =
    EventDetectionStatus_Type_NOT_EXPECTED_AND_DETECTED;
  static inline bool Type_IsValid(int value) {
    return EventDetectionStatus_Type_IsValid(value);
  }
  static const Type Type_MIN =
    EventDetectionStatus_Type_Type_MIN;
  static const Type Type_MAX =
    EventDetectionStatus_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    EventDetectionStatus_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return EventDetectionStatus_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return EventDetectionStatus_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return EventDetectionStatus_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  bool has_confidence() const;
  void clear_confidence();
  static const int kConfidenceFieldNumber = 2;
  private:
  const ::sensoris::protobuf::types::base::Confidence& _internal_confidence() const;
  public:
  const ::sensoris::protobuf::types::base::Confidence& confidence() const;
  ::sensoris::protobuf::types::base::Confidence* release_confidence();
  ::sensoris::protobuf::types::base::Confidence* mutable_confidence();
  void set_allocated_confidence(::sensoris::protobuf::types::base::Confidence* confidence);
  void unsafe_arena_set_allocated_confidence(
      ::sensoris::protobuf::types::base::Confidence* confidence);
  ::sensoris::protobuf::types::base::Confidence* unsafe_arena_release_confidence();

  // .sensoris.protobuf.types.base.EventDetectionStatus.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::sensoris::protobuf::types::base::EventDetectionStatus_Type type() const;
  void set_type(::sensoris::protobuf::types::base::EventDetectionStatus_Type value);

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.base.EventDetectionStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::sensoris::protobuf::types::base::Confidence* confidence_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CategoryEnvelope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.base.CategoryEnvelope) */ {
 public:
  CategoryEnvelope();
  virtual ~CategoryEnvelope();

  CategoryEnvelope(const CategoryEnvelope& from);

  inline CategoryEnvelope& operator=(const CategoryEnvelope& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CategoryEnvelope(CategoryEnvelope&& from) noexcept
    : CategoryEnvelope() {
    *this = ::std::move(from);
  }

  inline CategoryEnvelope& operator=(CategoryEnvelope&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CategoryEnvelope& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CategoryEnvelope* internal_default_instance() {
    return reinterpret_cast<const CategoryEnvelope*>(
               &_CategoryEnvelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(CategoryEnvelope* other);
  void Swap(CategoryEnvelope* other);
  friend void swap(CategoryEnvelope& a, CategoryEnvelope& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CategoryEnvelope* New() const final {
    return CreateMaybeMessage<CategoryEnvelope>(NULL);
  }

  CategoryEnvelope* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CategoryEnvelope>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CategoryEnvelope& from);
  void MergeFrom(const CategoryEnvelope& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CategoryEnvelope* other);
  protected:
  explicit CategoryEnvelope(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.protobuf.Any extension = 15;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 15;
  ::google::protobuf::Any* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_extension();
  const ::google::protobuf::Any& extension(int index) const;
  ::google::protobuf::Any* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      extension() const;

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.base.CategoryEnvelope)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > extension_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Int64StatisticMeasure : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.base.Int64StatisticMeasure) */ {
 public:
  Int64StatisticMeasure();
  virtual ~Int64StatisticMeasure();

  Int64StatisticMeasure(const Int64StatisticMeasure& from);

  inline Int64StatisticMeasure& operator=(const Int64StatisticMeasure& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int64StatisticMeasure(Int64StatisticMeasure&& from) noexcept
    : Int64StatisticMeasure() {
    *this = ::std::move(from);
  }

  inline Int64StatisticMeasure& operator=(Int64StatisticMeasure&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Int64StatisticMeasure& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int64StatisticMeasure* internal_default_instance() {
    return reinterpret_cast<const Int64StatisticMeasure*>(
               &_Int64StatisticMeasure_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(Int64StatisticMeasure* other);
  void Swap(Int64StatisticMeasure* other);
  friend void swap(Int64StatisticMeasure& a, Int64StatisticMeasure& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int64StatisticMeasure* New() const final {
    return CreateMaybeMessage<Int64StatisticMeasure>(NULL);
  }

  Int64StatisticMeasure* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Int64StatisticMeasure>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Int64StatisticMeasure& from);
  void MergeFrom(const Int64StatisticMeasure& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Int64StatisticMeasure* other);
  protected:
  explicit Int64StatisticMeasure(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  bool has_timestamp_interval() const;
  void clear_timestamp_interval();
  static const int kTimestampIntervalFieldNumber = 1;
  private:
  const ::sensoris::protobuf::types::base::TimestampInterval& _internal_timestamp_interval() const;
  public:
  const ::sensoris::protobuf::types::base::TimestampInterval& timestamp_interval() const;
  ::sensoris::protobuf::types::base::TimestampInterval* release_timestamp_interval();
  ::sensoris::protobuf::types::base::TimestampInterval* mutable_timestamp_interval();
  void set_allocated_timestamp_interval(::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval);
  void unsafe_arena_set_allocated_timestamp_interval(
      ::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval);
  ::sensoris::protobuf::types::base::TimestampInterval* unsafe_arena_release_timestamp_interval();

  // int64 value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  ::google::protobuf::int64 value() const;
  void set_value(::google::protobuf::int64 value);

  // .sensoris.protobuf.types.base.StatisticMeasureType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::sensoris::protobuf::types::base::StatisticMeasureType type() const;
  void set_type(::sensoris::protobuf::types::base::StatisticMeasureType value);

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.base.Int64StatisticMeasure)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval_;
  ::google::protobuf::int64 value_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Int64StatisticMeasureAndAccuracy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy) */ {
 public:
  Int64StatisticMeasureAndAccuracy();
  virtual ~Int64StatisticMeasureAndAccuracy();

  Int64StatisticMeasureAndAccuracy(const Int64StatisticMeasureAndAccuracy& from);

  inline Int64StatisticMeasureAndAccuracy& operator=(const Int64StatisticMeasureAndAccuracy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int64StatisticMeasureAndAccuracy(Int64StatisticMeasureAndAccuracy&& from) noexcept
    : Int64StatisticMeasureAndAccuracy() {
    *this = ::std::move(from);
  }

  inline Int64StatisticMeasureAndAccuracy& operator=(Int64StatisticMeasureAndAccuracy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Int64StatisticMeasureAndAccuracy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int64StatisticMeasureAndAccuracy* internal_default_instance() {
    return reinterpret_cast<const Int64StatisticMeasureAndAccuracy*>(
               &_Int64StatisticMeasureAndAccuracy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(Int64StatisticMeasureAndAccuracy* other);
  void Swap(Int64StatisticMeasureAndAccuracy* other);
  friend void swap(Int64StatisticMeasureAndAccuracy& a, Int64StatisticMeasureAndAccuracy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int64StatisticMeasureAndAccuracy* New() const final {
    return CreateMaybeMessage<Int64StatisticMeasureAndAccuracy>(NULL);
  }

  Int64StatisticMeasureAndAccuracy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Int64StatisticMeasureAndAccuracy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Int64StatisticMeasureAndAccuracy& from);
  void MergeFrom(const Int64StatisticMeasureAndAccuracy& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Int64StatisticMeasureAndAccuracy* other);
  protected:
  explicit Int64StatisticMeasureAndAccuracy(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  bool has_timestamp_interval() const;
  void clear_timestamp_interval();
  static const int kTimestampIntervalFieldNumber = 1;
  private:
  const ::sensoris::protobuf::types::base::TimestampInterval& _internal_timestamp_interval() const;
  public:
  const ::sensoris::protobuf::types::base::TimestampInterval& timestamp_interval() const;
  ::sensoris::protobuf::types::base::TimestampInterval* release_timestamp_interval();
  ::sensoris::protobuf::types::base::TimestampInterval* mutable_timestamp_interval();
  void set_allocated_timestamp_interval(::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval);
  void unsafe_arena_set_allocated_timestamp_interval(
      ::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval);
  ::sensoris::protobuf::types::base::TimestampInterval* unsafe_arena_release_timestamp_interval();

  // .google.protobuf.Int64Value accuracy = 4;
  bool has_accuracy() const;
  void clear_accuracy();
  static const int kAccuracyFieldNumber = 4;
  private:
  const ::google::protobuf::Int64Value& _internal_accuracy() const;
  public:
  const ::google::protobuf::Int64Value& accuracy() const;
  ::google::protobuf::Int64Value* release_accuracy();
  ::google::protobuf::Int64Value* mutable_accuracy();
  void set_allocated_accuracy(::google::protobuf::Int64Value* accuracy);
  void unsafe_arena_set_allocated_accuracy(
      ::google::protobuf::Int64Value* accuracy);
  ::google::protobuf::Int64Value* unsafe_arena_release_accuracy();

  // int64 value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  ::google::protobuf::int64 value() const;
  void set_value(::google::protobuf::int64 value);

  // .sensoris.protobuf.types.base.StatisticMeasureType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::sensoris::protobuf::types::base::StatisticMeasureType type() const;
  void set_type(::sensoris::protobuf::types::base::StatisticMeasureType value);

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval_;
  ::google::protobuf::Int64Value* accuracy_;
  ::google::protobuf::int64 value_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbsoluteInt64Histogram_Bin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin) */ {
 public:
  AbsoluteInt64Histogram_Bin();
  virtual ~AbsoluteInt64Histogram_Bin();

  AbsoluteInt64Histogram_Bin(const AbsoluteInt64Histogram_Bin& from);

  inline AbsoluteInt64Histogram_Bin& operator=(const AbsoluteInt64Histogram_Bin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbsoluteInt64Histogram_Bin(AbsoluteInt64Histogram_Bin&& from) noexcept
    : AbsoluteInt64Histogram_Bin() {
    *this = ::std::move(from);
  }

  inline AbsoluteInt64Histogram_Bin& operator=(AbsoluteInt64Histogram_Bin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbsoluteInt64Histogram_Bin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AbsoluteInt64Histogram_Bin* internal_default_instance() {
    return reinterpret_cast<const AbsoluteInt64Histogram_Bin*>(
               &_AbsoluteInt64Histogram_Bin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(AbsoluteInt64Histogram_Bin* other);
  void Swap(AbsoluteInt64Histogram_Bin* other);
  friend void swap(AbsoluteInt64Histogram_Bin& a, AbsoluteInt64Histogram_Bin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbsoluteInt64Histogram_Bin* New() const final {
    return CreateMaybeMessage<AbsoluteInt64Histogram_Bin>(NULL);
  }

  AbsoluteInt64Histogram_Bin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AbsoluteInt64Histogram_Bin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AbsoluteInt64Histogram_Bin& from);
  void MergeFrom(const AbsoluteInt64Histogram_Bin& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AbsoluteInt64Histogram_Bin* other);
  protected:
  explicit AbsoluteInt64Histogram_Bin(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Int64Value lower_endpoint_inclusive = 1;
  bool has_lower_endpoint_inclusive() const;
  void clear_lower_endpoint_inclusive();
  static const int kLowerEndpointInclusiveFieldNumber = 1;
  private:
  const ::google::protobuf::Int64Value& _internal_lower_endpoint_inclusive() const;
  public:
  const ::google::protobuf::Int64Value& lower_endpoint_inclusive() const;
  ::google::protobuf::Int64Value* release_lower_endpoint_inclusive();
  ::google::protobuf::Int64Value* mutable_lower_endpoint_inclusive();
  void set_allocated_lower_endpoint_inclusive(::google::protobuf::Int64Value* lower_endpoint_inclusive);
  void unsafe_arena_set_allocated_lower_endpoint_inclusive(
      ::google::protobuf::Int64Value* lower_endpoint_inclusive);
  ::google::protobuf::Int64Value* unsafe_arena_release_lower_endpoint_inclusive();

  // .google.protobuf.Int64Value frequency = 2;
  bool has_frequency() const;
  void clear_frequency();
  static const int kFrequencyFieldNumber = 2;
  private:
  const ::google::protobuf::Int64Value& _internal_frequency() const;
  public:
  const ::google::protobuf::Int64Value& frequency() const;
  ::google::protobuf::Int64Value* release_frequency();
  ::google::protobuf::Int64Value* mutable_frequency();
  void set_allocated_frequency(::google::protobuf::Int64Value* frequency);
  void unsafe_arena_set_allocated_frequency(
      ::google::protobuf::Int64Value* frequency);
  ::google::protobuf::Int64Value* unsafe_arena_release_frequency();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::Int64Value* lower_endpoint_inclusive_;
  ::google::protobuf::Int64Value* frequency_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbsoluteInt64Histogram : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.base.AbsoluteInt64Histogram) */ {
 public:
  AbsoluteInt64Histogram();
  virtual ~AbsoluteInt64Histogram();

  AbsoluteInt64Histogram(const AbsoluteInt64Histogram& from);

  inline AbsoluteInt64Histogram& operator=(const AbsoluteInt64Histogram& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbsoluteInt64Histogram(AbsoluteInt64Histogram&& from) noexcept
    : AbsoluteInt64Histogram() {
    *this = ::std::move(from);
  }

  inline AbsoluteInt64Histogram& operator=(AbsoluteInt64Histogram&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbsoluteInt64Histogram& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AbsoluteInt64Histogram* internal_default_instance() {
    return reinterpret_cast<const AbsoluteInt64Histogram*>(
               &_AbsoluteInt64Histogram_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void UnsafeArenaSwap(AbsoluteInt64Histogram* other);
  void Swap(AbsoluteInt64Histogram* other);
  friend void swap(AbsoluteInt64Histogram& a, AbsoluteInt64Histogram& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbsoluteInt64Histogram* New() const final {
    return CreateMaybeMessage<AbsoluteInt64Histogram>(NULL);
  }

  AbsoluteInt64Histogram* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AbsoluteInt64Histogram>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AbsoluteInt64Histogram& from);
  void MergeFrom(const AbsoluteInt64Histogram& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AbsoluteInt64Histogram* other);
  protected:
  explicit AbsoluteInt64Histogram(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AbsoluteInt64Histogram_Bin Bin;

  // accessors -------------------------------------------------------

  // repeated .sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin bin = 3;
  int bin_size() const;
  void clear_bin();
  static const int kBinFieldNumber = 3;
  ::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin* mutable_bin(int index);
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin >*
      mutable_bin();
  const ::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin& bin(int index) const;
  ::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin* add_bin();
  const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin >&
      bin() const;

  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  bool has_timestamp_interval() const;
  void clear_timestamp_interval();
  static const int kTimestampIntervalFieldNumber = 1;
  private:
  const ::sensoris::protobuf::types::base::TimestampInterval& _internal_timestamp_interval() const;
  public:
  const ::sensoris::protobuf::types::base::TimestampInterval& timestamp_interval() const;
  ::sensoris::protobuf::types::base::TimestampInterval* release_timestamp_interval();
  ::sensoris::protobuf::types::base::TimestampInterval* mutable_timestamp_interval();
  void set_allocated_timestamp_interval(::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval);
  void unsafe_arena_set_allocated_timestamp_interval(
      ::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval);
  ::sensoris::protobuf::types::base::TimestampInterval* unsafe_arena_release_timestamp_interval();

  // .google.protobuf.Int64Value total_elements = 2;
  bool has_total_elements() const;
  void clear_total_elements();
  static const int kTotalElementsFieldNumber = 2;
  private:
  const ::google::protobuf::Int64Value& _internal_total_elements() const;
  public:
  const ::google::protobuf::Int64Value& total_elements() const;
  ::google::protobuf::Int64Value* release_total_elements();
  ::google::protobuf::Int64Value* mutable_total_elements();
  void set_allocated_total_elements(::google::protobuf::Int64Value* total_elements);
  void unsafe_arena_set_allocated_total_elements(
      ::google::protobuf::Int64Value* total_elements);
  ::google::protobuf::Int64Value* unsafe_arena_release_total_elements();

  // .google.protobuf.Int64Value upper_endpoint_inclusive = 4;
  bool has_upper_endpoint_inclusive() const;
  void clear_upper_endpoint_inclusive();
  static const int kUpperEndpointInclusiveFieldNumber = 4;
  private:
  const ::google::protobuf::Int64Value& _internal_upper_endpoint_inclusive() const;
  public:
  const ::google::protobuf::Int64Value& upper_endpoint_inclusive() const;
  ::google::protobuf::Int64Value* release_upper_endpoint_inclusive();
  ::google::protobuf::Int64Value* mutable_upper_endpoint_inclusive();
  void set_allocated_upper_endpoint_inclusive(::google::protobuf::Int64Value* upper_endpoint_inclusive);
  void unsafe_arena_set_allocated_upper_endpoint_inclusive(
      ::google::protobuf::Int64Value* upper_endpoint_inclusive);
  ::google::protobuf::Int64Value* unsafe_arena_release_upper_endpoint_inclusive();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin > bin_;
  ::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval_;
  ::google::protobuf::Int64Value* total_elements_;
  ::google::protobuf::Int64Value* upper_endpoint_inclusive_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RelativeInt64Histogram_Bin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin) */ {
 public:
  RelativeInt64Histogram_Bin();
  virtual ~RelativeInt64Histogram_Bin();

  RelativeInt64Histogram_Bin(const RelativeInt64Histogram_Bin& from);

  inline RelativeInt64Histogram_Bin& operator=(const RelativeInt64Histogram_Bin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RelativeInt64Histogram_Bin(RelativeInt64Histogram_Bin&& from) noexcept
    : RelativeInt64Histogram_Bin() {
    *this = ::std::move(from);
  }

  inline RelativeInt64Histogram_Bin& operator=(RelativeInt64Histogram_Bin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const RelativeInt64Histogram_Bin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RelativeInt64Histogram_Bin* internal_default_instance() {
    return reinterpret_cast<const RelativeInt64Histogram_Bin*>(
               &_RelativeInt64Histogram_Bin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void UnsafeArenaSwap(RelativeInt64Histogram_Bin* other);
  void Swap(RelativeInt64Histogram_Bin* other);
  friend void swap(RelativeInt64Histogram_Bin& a, RelativeInt64Histogram_Bin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RelativeInt64Histogram_Bin* New() const final {
    return CreateMaybeMessage<RelativeInt64Histogram_Bin>(NULL);
  }

  RelativeInt64Histogram_Bin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RelativeInt64Histogram_Bin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RelativeInt64Histogram_Bin& from);
  void MergeFrom(const RelativeInt64Histogram_Bin& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RelativeInt64Histogram_Bin* other);
  protected:
  explicit RelativeInt64Histogram_Bin(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Int64Value lower_endpoint_inclusive = 1;
  bool has_lower_endpoint_inclusive() const;
  void clear_lower_endpoint_inclusive();
  static const int kLowerEndpointInclusiveFieldNumber = 1;
  private:
  const ::google::protobuf::Int64Value& _internal_lower_endpoint_inclusive() const;
  public:
  const ::google::protobuf::Int64Value& lower_endpoint_inclusive() const;
  ::google::protobuf::Int64Value* release_lower_endpoint_inclusive();
  ::google::protobuf::Int64Value* mutable_lower_endpoint_inclusive();
  void set_allocated_lower_endpoint_inclusive(::google::protobuf::Int64Value* lower_endpoint_inclusive);
  void unsafe_arena_set_allocated_lower_endpoint_inclusive(
      ::google::protobuf::Int64Value* lower_endpoint_inclusive);
  ::google::protobuf::Int64Value* unsafe_arena_release_lower_endpoint_inclusive();

  // .google.protobuf.Int64Value relative_frequency = 3 [(.sensoris.protobuf.types.base.exponent) = 1];
  bool has_relative_frequency() const;
  void clear_relative_frequency();
  static const int kRelativeFrequencyFieldNumber = 3;
  private:
  const ::google::protobuf::Int64Value& _internal_relative_frequency() const;
  public:
  const ::google::protobuf::Int64Value& relative_frequency() const;
  ::google::protobuf::Int64Value* release_relative_frequency();
  ::google::protobuf::Int64Value* mutable_relative_frequency();
  void set_allocated_relative_frequency(::google::protobuf::Int64Value* relative_frequency);
  void unsafe_arena_set_allocated_relative_frequency(
      ::google::protobuf::Int64Value* relative_frequency);
  ::google::protobuf::Int64Value* unsafe_arena_release_relative_frequency();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::Int64Value* lower_endpoint_inclusive_;
  ::google::protobuf::Int64Value* relative_frequency_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RelativeInt64Histogram : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.base.RelativeInt64Histogram) */ {
 public:
  RelativeInt64Histogram();
  virtual ~RelativeInt64Histogram();

  RelativeInt64Histogram(const RelativeInt64Histogram& from);

  inline RelativeInt64Histogram& operator=(const RelativeInt64Histogram& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RelativeInt64Histogram(RelativeInt64Histogram&& from) noexcept
    : RelativeInt64Histogram() {
    *this = ::std::move(from);
  }

  inline RelativeInt64Histogram& operator=(RelativeInt64Histogram&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const RelativeInt64Histogram& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RelativeInt64Histogram* internal_default_instance() {
    return reinterpret_cast<const RelativeInt64Histogram*>(
               &_RelativeInt64Histogram_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void UnsafeArenaSwap(RelativeInt64Histogram* other);
  void Swap(RelativeInt64Histogram* other);
  friend void swap(RelativeInt64Histogram& a, RelativeInt64Histogram& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RelativeInt64Histogram* New() const final {
    return CreateMaybeMessage<RelativeInt64Histogram>(NULL);
  }

  RelativeInt64Histogram* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RelativeInt64Histogram>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RelativeInt64Histogram& from);
  void MergeFrom(const RelativeInt64Histogram& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RelativeInt64Histogram* other);
  protected:
  explicit RelativeInt64Histogram(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RelativeInt64Histogram_Bin Bin;

  // accessors -------------------------------------------------------

  // repeated .sensoris.protobuf.types.base.RelativeInt64Histogram.Bin bin = 3;
  int bin_size() const;
  void clear_bin();
  static const int kBinFieldNumber = 3;
  ::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin* mutable_bin(int index);
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin >*
      mutable_bin();
  const ::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin& bin(int index) const;
  ::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin* add_bin();
  const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin >&
      bin() const;

  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  bool has_timestamp_interval() const;
  void clear_timestamp_interval();
  static const int kTimestampIntervalFieldNumber = 1;
  private:
  const ::sensoris::protobuf::types::base::TimestampInterval& _internal_timestamp_interval() const;
  public:
  const ::sensoris::protobuf::types::base::TimestampInterval& timestamp_interval() const;
  ::sensoris::protobuf::types::base::TimestampInterval* release_timestamp_interval();
  ::sensoris::protobuf::types::base::TimestampInterval* mutable_timestamp_interval();
  void set_allocated_timestamp_interval(::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval);
  void unsafe_arena_set_allocated_timestamp_interval(
      ::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval);
  ::sensoris::protobuf::types::base::TimestampInterval* unsafe_arena_release_timestamp_interval();

  // .google.protobuf.Int64Value total_elements = 2;
  bool has_total_elements() const;
  void clear_total_elements();
  static const int kTotalElementsFieldNumber = 2;
  private:
  const ::google::protobuf::Int64Value& _internal_total_elements() const;
  public:
  const ::google::protobuf::Int64Value& total_elements() const;
  ::google::protobuf::Int64Value* release_total_elements();
  ::google::protobuf::Int64Value* mutable_total_elements();
  void set_allocated_total_elements(::google::protobuf::Int64Value* total_elements);
  void unsafe_arena_set_allocated_total_elements(
      ::google::protobuf::Int64Value* total_elements);
  ::google::protobuf::Int64Value* unsafe_arena_release_total_elements();

  // .google.protobuf.Int64Value upper_endpoint_inclusive = 4;
  bool has_upper_endpoint_inclusive() const;
  void clear_upper_endpoint_inclusive();
  static const int kUpperEndpointInclusiveFieldNumber = 4;
  private:
  const ::google::protobuf::Int64Value& _internal_upper_endpoint_inclusive() const;
  public:
  const ::google::protobuf::Int64Value& upper_endpoint_inclusive() const;
  ::google::protobuf::Int64Value* release_upper_endpoint_inclusive();
  ::google::protobuf::Int64Value* mutable_upper_endpoint_inclusive();
  void set_allocated_upper_endpoint_inclusive(::google::protobuf::Int64Value* upper_endpoint_inclusive);
  void unsafe_arena_set_allocated_upper_endpoint_inclusive(
      ::google::protobuf::Int64Value* upper_endpoint_inclusive);
  ::google::protobuf::Int64Value* unsafe_arena_release_upper_endpoint_inclusive();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.base.RelativeInt64Histogram)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin > bin_;
  ::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval_;
  ::google::protobuf::Int64Value* total_elements_;
  ::google::protobuf::Int64Value* upper_endpoint_inclusive_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Int64GaussianDistribution : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.base.Int64GaussianDistribution) */ {
 public:
  Int64GaussianDistribution();
  virtual ~Int64GaussianDistribution();

  Int64GaussianDistribution(const Int64GaussianDistribution& from);

  inline Int64GaussianDistribution& operator=(const Int64GaussianDistribution& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int64GaussianDistribution(Int64GaussianDistribution&& from) noexcept
    : Int64GaussianDistribution() {
    *this = ::std::move(from);
  }

  inline Int64GaussianDistribution& operator=(Int64GaussianDistribution&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Int64GaussianDistribution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int64GaussianDistribution* internal_default_instance() {
    return reinterpret_cast<const Int64GaussianDistribution*>(
               &_Int64GaussianDistribution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void UnsafeArenaSwap(Int64GaussianDistribution* other);
  void Swap(Int64GaussianDistribution* other);
  friend void swap(Int64GaussianDistribution& a, Int64GaussianDistribution& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int64GaussianDistribution* New() const final {
    return CreateMaybeMessage<Int64GaussianDistribution>(NULL);
  }

  Int64GaussianDistribution* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Int64GaussianDistribution>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Int64GaussianDistribution& from);
  void MergeFrom(const Int64GaussianDistribution& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Int64GaussianDistribution* other);
  protected:
  explicit Int64GaussianDistribution(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  bool has_timestamp_interval() const;
  void clear_timestamp_interval();
  static const int kTimestampIntervalFieldNumber = 1;
  private:
  const ::sensoris::protobuf::types::base::TimestampInterval& _internal_timestamp_interval() const;
  public:
  const ::sensoris::protobuf::types::base::TimestampInterval& timestamp_interval() const;
  ::sensoris::protobuf::types::base::TimestampInterval* release_timestamp_interval();
  ::sensoris::protobuf::types::base::TimestampInterval* mutable_timestamp_interval();
  void set_allocated_timestamp_interval(::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval);
  void unsafe_arena_set_allocated_timestamp_interval(
      ::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval);
  ::sensoris::protobuf::types::base::TimestampInterval* unsafe_arena_release_timestamp_interval();

  // .google.protobuf.Int64Value mean = 2;
  bool has_mean() const;
  void clear_mean();
  static const int kMeanFieldNumber = 2;
  private:
  const ::google::protobuf::Int64Value& _internal_mean() const;
  public:
  const ::google::protobuf::Int64Value& mean() const;
  ::google::protobuf::Int64Value* release_mean();
  ::google::protobuf::Int64Value* mutable_mean();
  void set_allocated_mean(::google::protobuf::Int64Value* mean);
  void unsafe_arena_set_allocated_mean(
      ::google::protobuf::Int64Value* mean);
  ::google::protobuf::Int64Value* unsafe_arena_release_mean();

  // .google.protobuf.Int64Value variance = 3;
  bool has_variance() const;
  void clear_variance();
  static const int kVarianceFieldNumber = 3;
  private:
  const ::google::protobuf::Int64Value& _internal_variance() const;
  public:
  const ::google::protobuf::Int64Value& variance() const;
  ::google::protobuf::Int64Value* release_variance();
  ::google::protobuf::Int64Value* mutable_variance();
  void set_allocated_variance(::google::protobuf::Int64Value* variance);
  void unsafe_arena_set_allocated_variance(
      ::google::protobuf::Int64Value* variance);
  ::google::protobuf::Int64Value* unsafe_arena_release_variance();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.base.Int64GaussianDistribution)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval_;
  ::google::protobuf::Int64Value* mean_;
  ::google::protobuf::Int64Value* variance_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Int64Value : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.base.Int64Value) */ {
 public:
  Int64Value();
  virtual ~Int64Value();

  Int64Value(const Int64Value& from);

  inline Int64Value& operator=(const Int64Value& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int64Value(Int64Value&& from) noexcept
    : Int64Value() {
    *this = ::std::move(from);
  }

  inline Int64Value& operator=(Int64Value&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Int64Value& default_instance();

  enum ValueOneofCase {
    kValue = 1,
    kStatisticMeasure = 2,
    kAbsoluteHistogram = 3,
    kRelativeHistogram = 4,
    kGaussianDistribution = 5,
    VALUE_ONEOF_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int64Value* internal_default_instance() {
    return reinterpret_cast<const Int64Value*>(
               &_Int64Value_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void UnsafeArenaSwap(Int64Value* other);
  void Swap(Int64Value* other);
  friend void swap(Int64Value& a, Int64Value& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int64Value* New() const final {
    return CreateMaybeMessage<Int64Value>(NULL);
  }

  Int64Value* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Int64Value>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Int64Value& from);
  void MergeFrom(const Int64Value& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Int64Value* other);
  protected:
  explicit Int64Value(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 value = 1;
  private:
  bool has_value() const;
  public:
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int64 value() const;
  void set_value(::google::protobuf::int64 value);

  // .sensoris.protobuf.types.base.Int64StatisticMeasure statistic_measure = 2;
  bool has_statistic_measure() const;
  void clear_statistic_measure();
  static const int kStatisticMeasureFieldNumber = 2;
  private:
  const ::sensoris::protobuf::types::base::Int64StatisticMeasure& _internal_statistic_measure() const;
  public:
  const ::sensoris::protobuf::types::base::Int64StatisticMeasure& statistic_measure() const;
  ::sensoris::protobuf::types::base::Int64StatisticMeasure* release_statistic_measure();
  ::sensoris::protobuf::types::base::Int64StatisticMeasure* mutable_statistic_measure();
  void set_allocated_statistic_measure(::sensoris::protobuf::types::base::Int64StatisticMeasure* statistic_measure);
  void unsafe_arena_set_allocated_statistic_measure(
      ::sensoris::protobuf::types::base::Int64StatisticMeasure* statistic_measure);
  ::sensoris::protobuf::types::base::Int64StatisticMeasure* unsafe_arena_release_statistic_measure();

  // .sensoris.protobuf.types.base.AbsoluteInt64Histogram absolute_histogram = 3;
  bool has_absolute_histogram() const;
  void clear_absolute_histogram();
  static const int kAbsoluteHistogramFieldNumber = 3;
  private:
  const ::sensoris::protobuf::types::base::AbsoluteInt64Histogram& _internal_absolute_histogram() const;
  public:
  const ::sensoris::protobuf::types::base::AbsoluteInt64Histogram& absolute_histogram() const;
  ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* release_absolute_histogram();
  ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* mutable_absolute_histogram();
  void set_allocated_absolute_histogram(::sensoris::protobuf::types::base::AbsoluteInt64Histogram* absolute_histogram);
  void unsafe_arena_set_allocated_absolute_histogram(
      ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* absolute_histogram);
  ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* unsafe_arena_release_absolute_histogram();

  // .sensoris.protobuf.types.base.RelativeInt64Histogram relative_histogram = 4;
  bool has_relative_histogram() const;
  void clear_relative_histogram();
  static const int kRelativeHistogramFieldNumber = 4;
  private:
  const ::sensoris::protobuf::types::base::RelativeInt64Histogram& _internal_relative_histogram() const;
  public:
  const ::sensoris::protobuf::types::base::RelativeInt64Histogram& relative_histogram() const;
  ::sensoris::protobuf::types::base::RelativeInt64Histogram* release_relative_histogram();
  ::sensoris::protobuf::types::base::RelativeInt64Histogram* mutable_relative_histogram();
  void set_allocated_relative_histogram(::sensoris::protobuf::types::base::RelativeInt64Histogram* relative_histogram);
  void unsafe_arena_set_allocated_relative_histogram(
      ::sensoris::protobuf::types::base::RelativeInt64Histogram* relative_histogram);
  ::sensoris::protobuf::types::base::RelativeInt64Histogram* unsafe_arena_release_relative_histogram();

  // .sensoris.protobuf.types.base.Int64GaussianDistribution gaussian_distribution = 5;
  bool has_gaussian_distribution() const;
  void clear_gaussian_distribution();
  static const int kGaussianDistributionFieldNumber = 5;
  private:
  const ::sensoris::protobuf::types::base::Int64GaussianDistribution& _internal_gaussian_distribution() const;
  public:
  const ::sensoris::protobuf::types::base::Int64GaussianDistribution& gaussian_distribution() const;
  ::sensoris::protobuf::types::base::Int64GaussianDistribution* release_gaussian_distribution();
  ::sensoris::protobuf::types::base::Int64GaussianDistribution* mutable_gaussian_distribution();
  void set_allocated_gaussian_distribution(::sensoris::protobuf::types::base::Int64GaussianDistribution* gaussian_distribution);
  void unsafe_arena_set_allocated_gaussian_distribution(
      ::sensoris::protobuf::types::base::Int64GaussianDistribution* gaussian_distribution);
  ::sensoris::protobuf::types::base::Int64GaussianDistribution* unsafe_arena_release_gaussian_distribution();

  void clear_value_oneof();
  ValueOneofCase value_oneof_case() const;
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.base.Int64Value)
 private:
  void set_has_value();
  void set_has_statistic_measure();
  void set_has_absolute_histogram();
  void set_has_relative_histogram();
  void set_has_gaussian_distribution();

  inline bool has_value_oneof() const;
  inline void clear_has_value_oneof();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union ValueOneofUnion {
    ValueOneofUnion() {}
    ::google::protobuf::int64 value_;
    ::sensoris::protobuf::types::base::Int64StatisticMeasure* statistic_measure_;
    ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* absolute_histogram_;
    ::sensoris::protobuf::types::base::RelativeInt64Histogram* relative_histogram_;
    ::sensoris::protobuf::types::base::Int64GaussianDistribution* gaussian_distribution_;
  } value_oneof_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Int64ValueAndAccuracy_ValueAndAccuracy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy) */ {
 public:
  Int64ValueAndAccuracy_ValueAndAccuracy();
  virtual ~Int64ValueAndAccuracy_ValueAndAccuracy();

  Int64ValueAndAccuracy_ValueAndAccuracy(const Int64ValueAndAccuracy_ValueAndAccuracy& from);

  inline Int64ValueAndAccuracy_ValueAndAccuracy& operator=(const Int64ValueAndAccuracy_ValueAndAccuracy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int64ValueAndAccuracy_ValueAndAccuracy(Int64ValueAndAccuracy_ValueAndAccuracy&& from) noexcept
    : Int64ValueAndAccuracy_ValueAndAccuracy() {
    *this = ::std::move(from);
  }

  inline Int64ValueAndAccuracy_ValueAndAccuracy& operator=(Int64ValueAndAccuracy_ValueAndAccuracy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Int64ValueAndAccuracy_ValueAndAccuracy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int64ValueAndAccuracy_ValueAndAccuracy* internal_default_instance() {
    return reinterpret_cast<const Int64ValueAndAccuracy_ValueAndAccuracy*>(
               &_Int64ValueAndAccuracy_ValueAndAccuracy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void UnsafeArenaSwap(Int64ValueAndAccuracy_ValueAndAccuracy* other);
  void Swap(Int64ValueAndAccuracy_ValueAndAccuracy* other);
  friend void swap(Int64ValueAndAccuracy_ValueAndAccuracy& a, Int64ValueAndAccuracy_ValueAndAccuracy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int64ValueAndAccuracy_ValueAndAccuracy* New() const final {
    return CreateMaybeMessage<Int64ValueAndAccuracy_ValueAndAccuracy>(NULL);
  }

  Int64ValueAndAccuracy_ValueAndAccuracy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Int64ValueAndAccuracy_ValueAndAccuracy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Int64ValueAndAccuracy_ValueAndAccuracy& from);
  void MergeFrom(const Int64ValueAndAccuracy_ValueAndAccuracy& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Int64ValueAndAccuracy_ValueAndAccuracy* other);
  protected:
  explicit Int64ValueAndAccuracy_ValueAndAccuracy(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Int64Value accuracy = 2;
  bool has_accuracy() const;
  void clear_accuracy();
  static const int kAccuracyFieldNumber = 2;
  private:
  const ::google::protobuf::Int64Value& _internal_accuracy() const;
  public:
  const ::google::protobuf::Int64Value& accuracy() const;
  ::google::protobuf::Int64Value* release_accuracy();
  ::google::protobuf::Int64Value* mutable_accuracy();
  void set_allocated_accuracy(::google::protobuf::Int64Value* accuracy);
  void unsafe_arena_set_allocated_accuracy(
      ::google::protobuf::Int64Value* accuracy);
  ::google::protobuf::Int64Value* unsafe_arena_release_accuracy();

  // int64 value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int64 value() const;
  void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::Int64Value* accuracy_;
  ::google::protobuf::int64 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Int64ValueAndAccuracy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.base.Int64ValueAndAccuracy) */ {
 public:
  Int64ValueAndAccuracy();
  virtual ~Int64ValueAndAccuracy();

  Int64ValueAndAccuracy(const Int64ValueAndAccuracy& from);

  inline Int64ValueAndAccuracy& operator=(const Int64ValueAndAccuracy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int64ValueAndAccuracy(Int64ValueAndAccuracy&& from) noexcept
    : Int64ValueAndAccuracy() {
    *this = ::std::move(from);
  }

  inline Int64ValueAndAccuracy& operator=(Int64ValueAndAccuracy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Int64ValueAndAccuracy& default_instance();

  enum ValueOneofCase {
    kValueAndAccuracy = 1,
    kStatisticMeasureAndAccuracy = 2,
    kAbsoluteHistogram = 3,
    kRelativeHistogram = 4,
    kGaussianDistribution = 5,
    VALUE_ONEOF_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int64ValueAndAccuracy* internal_default_instance() {
    return reinterpret_cast<const Int64ValueAndAccuracy*>(
               &_Int64ValueAndAccuracy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void UnsafeArenaSwap(Int64ValueAndAccuracy* other);
  void Swap(Int64ValueAndAccuracy* other);
  friend void swap(Int64ValueAndAccuracy& a, Int64ValueAndAccuracy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int64ValueAndAccuracy* New() const final {
    return CreateMaybeMessage<Int64ValueAndAccuracy>(NULL);
  }

  Int64ValueAndAccuracy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Int64ValueAndAccuracy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Int64ValueAndAccuracy& from);
  void MergeFrom(const Int64ValueAndAccuracy& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Int64ValueAndAccuracy* other);
  protected:
  explicit Int64ValueAndAccuracy(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Int64ValueAndAccuracy_ValueAndAccuracy ValueAndAccuracy;

  // accessors -------------------------------------------------------

  // .sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy value_and_accuracy = 1;
  bool has_value_and_accuracy() const;
  void clear_value_and_accuracy();
  static const int kValueAndAccuracyFieldNumber = 1;
  private:
  const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy& _internal_value_and_accuracy() const;
  public:
  const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy& value_and_accuracy() const;
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy* release_value_and_accuracy();
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy* mutable_value_and_accuracy();
  void set_allocated_value_and_accuracy(::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy* value_and_accuracy);
  void unsafe_arena_set_allocated_value_and_accuracy(
      ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy* value_and_accuracy);
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy* unsafe_arena_release_value_and_accuracy();

  // .sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy statistic_measure_and_accuracy = 2;
  bool has_statistic_measure_and_accuracy() const;
  void clear_statistic_measure_and_accuracy();
  static const int kStatisticMeasureAndAccuracyFieldNumber = 2;
  private:
  const ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy& _internal_statistic_measure_and_accuracy() const;
  public:
  const ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy& statistic_measure_and_accuracy() const;
  ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy* release_statistic_measure_and_accuracy();
  ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy* mutable_statistic_measure_and_accuracy();
  void set_allocated_statistic_measure_and_accuracy(::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy* statistic_measure_and_accuracy);
  void unsafe_arena_set_allocated_statistic_measure_and_accuracy(
      ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy* statistic_measure_and_accuracy);
  ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy* unsafe_arena_release_statistic_measure_and_accuracy();

  // .sensoris.protobuf.types.base.AbsoluteInt64Histogram absolute_histogram = 3;
  bool has_absolute_histogram() const;
  void clear_absolute_histogram();
  static const int kAbsoluteHistogramFieldNumber = 3;
  private:
  const ::sensoris::protobuf::types::base::AbsoluteInt64Histogram& _internal_absolute_histogram() const;
  public:
  const ::sensoris::protobuf::types::base::AbsoluteInt64Histogram& absolute_histogram() const;
  ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* release_absolute_histogram();
  ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* mutable_absolute_histogram();
  void set_allocated_absolute_histogram(::sensoris::protobuf::types::base::AbsoluteInt64Histogram* absolute_histogram);
  void unsafe_arena_set_allocated_absolute_histogram(
      ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* absolute_histogram);
  ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* unsafe_arena_release_absolute_histogram();

  // .sensoris.protobuf.types.base.RelativeInt64Histogram relative_histogram = 4;
  bool has_relative_histogram() const;
  void clear_relative_histogram();
  static const int kRelativeHistogramFieldNumber = 4;
  private:
  const ::sensoris::protobuf::types::base::RelativeInt64Histogram& _internal_relative_histogram() const;
  public:
  const ::sensoris::protobuf::types::base::RelativeInt64Histogram& relative_histogram() const;
  ::sensoris::protobuf::types::base::RelativeInt64Histogram* release_relative_histogram();
  ::sensoris::protobuf::types::base::RelativeInt64Histogram* mutable_relative_histogram();
  void set_allocated_relative_histogram(::sensoris::protobuf::types::base::RelativeInt64Histogram* relative_histogram);
  void unsafe_arena_set_allocated_relative_histogram(
      ::sensoris::protobuf::types::base::RelativeInt64Histogram* relative_histogram);
  ::sensoris::protobuf::types::base::RelativeInt64Histogram* unsafe_arena_release_relative_histogram();

  // .sensoris.protobuf.types.base.Int64GaussianDistribution gaussian_distribution = 5;
  bool has_gaussian_distribution() const;
  void clear_gaussian_distribution();
  static const int kGaussianDistributionFieldNumber = 5;
  private:
  const ::sensoris::protobuf::types::base::Int64GaussianDistribution& _internal_gaussian_distribution() const;
  public:
  const ::sensoris::protobuf::types::base::Int64GaussianDistribution& gaussian_distribution() const;
  ::sensoris::protobuf::types::base::Int64GaussianDistribution* release_gaussian_distribution();
  ::sensoris::protobuf::types::base::Int64GaussianDistribution* mutable_gaussian_distribution();
  void set_allocated_gaussian_distribution(::sensoris::protobuf::types::base::Int64GaussianDistribution* gaussian_distribution);
  void unsafe_arena_set_allocated_gaussian_distribution(
      ::sensoris::protobuf::types::base::Int64GaussianDistribution* gaussian_distribution);
  ::sensoris::protobuf::types::base::Int64GaussianDistribution* unsafe_arena_release_gaussian_distribution();

  void clear_value_oneof();
  ValueOneofCase value_oneof_case() const;
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
 private:
  void set_has_value_and_accuracy();
  void set_has_statistic_measure_and_accuracy();
  void set_has_absolute_histogram();
  void set_has_relative_histogram();
  void set_has_gaussian_distribution();

  inline bool has_value_oneof() const;
  inline void clear_has_value_oneof();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union ValueOneofUnion {
    ValueOneofUnion() {}
    ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy* value_and_accuracy_;
    ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy* statistic_measure_and_accuracy_;
    ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* absolute_histogram_;
    ::sensoris::protobuf::types::base::RelativeInt64Histogram* relative_histogram_;
    ::sensoris::protobuf::types::base::Int64GaussianDistribution* gaussian_distribution_;
  } value_oneof_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Confidence : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.base.Confidence) */ {
 public:
  Confidence();
  virtual ~Confidence();

  Confidence(const Confidence& from);

  inline Confidence& operator=(const Confidence& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Confidence(Confidence&& from) noexcept
    : Confidence() {
    *this = ::std::move(from);
  }

  inline Confidence& operator=(Confidence&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Confidence& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Confidence* internal_default_instance() {
    return reinterpret_cast<const Confidence*>(
               &_Confidence_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void UnsafeArenaSwap(Confidence* other);
  void Swap(Confidence* other);
  friend void swap(Confidence& a, Confidence& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Confidence* New() const final {
    return CreateMaybeMessage<Confidence>(NULL);
  }

  Confidence* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Confidence>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Confidence& from);
  void MergeFrom(const Confidence& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Confidence* other);
  protected:
  explicit Confidence(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 value = 1 [(.sensoris.protobuf.types.base.exponent) = 0];
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int64 value() const;
  void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.base.Confidence)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::int64 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CountAndConfidence : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.base.CountAndConfidence) */ {
 public:
  CountAndConfidence();
  virtual ~CountAndConfidence();

  CountAndConfidence(const CountAndConfidence& from);

  inline CountAndConfidence& operator=(const CountAndConfidence& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CountAndConfidence(CountAndConfidence&& from) noexcept
    : CountAndConfidence() {
    *this = ::std::move(from);
  }

  inline CountAndConfidence& operator=(CountAndConfidence&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CountAndConfidence& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CountAndConfidence* internal_default_instance() {
    return reinterpret_cast<const CountAndConfidence*>(
               &_CountAndConfidence_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void UnsafeArenaSwap(CountAndConfidence* other);
  void Swap(CountAndConfidence* other);
  friend void swap(CountAndConfidence& a, CountAndConfidence& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CountAndConfidence* New() const final {
    return CreateMaybeMessage<CountAndConfidence>(NULL);
  }

  CountAndConfidence* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CountAndConfidence>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CountAndConfidence& from);
  void MergeFrom(const CountAndConfidence& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CountAndConfidence* other);
  protected:
  explicit CountAndConfidence(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Int64Value count = 1;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 1;
  private:
  const ::google::protobuf::Int64Value& _internal_count() const;
  public:
  const ::google::protobuf::Int64Value& count() const;
  ::google::protobuf::Int64Value* release_count();
  ::google::protobuf::Int64Value* mutable_count();
  void set_allocated_count(::google::protobuf::Int64Value* count);
  void unsafe_arena_set_allocated_count(
      ::google::protobuf::Int64Value* count);
  ::google::protobuf::Int64Value* unsafe_arena_release_count();

  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  bool has_confidence() const;
  void clear_confidence();
  static const int kConfidenceFieldNumber = 2;
  private:
  const ::sensoris::protobuf::types::base::Confidence& _internal_confidence() const;
  public:
  const ::sensoris::protobuf::types::base::Confidence& confidence() const;
  ::sensoris::protobuf::types::base::Confidence* release_confidence();
  ::sensoris::protobuf::types::base::Confidence* mutable_confidence();
  void set_allocated_confidence(::sensoris::protobuf::types::base::Confidence* confidence);
  void unsafe_arena_set_allocated_confidence(
      ::sensoris::protobuf::types::base::Confidence* confidence);
  ::sensoris::protobuf::types::base::Confidence* unsafe_arena_release_confidence();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.base.CountAndConfidence)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::Int64Value* count_;
  ::sensoris::protobuf::types::base::Confidence* confidence_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Int64Matrix3x3 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.base.Int64Matrix3x3) */ {
 public:
  Int64Matrix3x3();
  virtual ~Int64Matrix3x3();

  Int64Matrix3x3(const Int64Matrix3x3& from);

  inline Int64Matrix3x3& operator=(const Int64Matrix3x3& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int64Matrix3x3(Int64Matrix3x3&& from) noexcept
    : Int64Matrix3x3() {
    *this = ::std::move(from);
  }

  inline Int64Matrix3x3& operator=(Int64Matrix3x3&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Int64Matrix3x3& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int64Matrix3x3* internal_default_instance() {
    return reinterpret_cast<const Int64Matrix3x3*>(
               &_Int64Matrix3x3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void UnsafeArenaSwap(Int64Matrix3x3* other);
  void Swap(Int64Matrix3x3* other);
  friend void swap(Int64Matrix3x3& a, Int64Matrix3x3& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int64Matrix3x3* New() const final {
    return CreateMaybeMessage<Int64Matrix3x3>(NULL);
  }

  Int64Matrix3x3* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Int64Matrix3x3>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Int64Matrix3x3& from);
  void MergeFrom(const Int64Matrix3x3& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Int64Matrix3x3* other);
  protected:
  explicit Int64Matrix3x3(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Int64Value a11 = 1;
  bool has_a11() const;
  void clear_a11();
  static const int kA11FieldNumber = 1;
  private:
  const ::google::protobuf::Int64Value& _internal_a11() const;
  public:
  const ::google::protobuf::Int64Value& a11() const;
  ::google::protobuf::Int64Value* release_a11();
  ::google::protobuf::Int64Value* mutable_a11();
  void set_allocated_a11(::google::protobuf::Int64Value* a11);
  void unsafe_arena_set_allocated_a11(
      ::google::protobuf::Int64Value* a11);
  ::google::protobuf::Int64Value* unsafe_arena_release_a11();

  // .google.protobuf.Int64Value a12 = 2;
  bool has_a12() const;
  void clear_a12();
  static const int kA12FieldNumber = 2;
  private:
  const ::google::protobuf::Int64Value& _internal_a12() const;
  public:
  const ::google::protobuf::Int64Value& a12() const;
  ::google::protobuf::Int64Value* release_a12();
  ::google::protobuf::Int64Value* mutable_a12();
  void set_allocated_a12(::google::protobuf::Int64Value* a12);
  void unsafe_arena_set_allocated_a12(
      ::google::protobuf::Int64Value* a12);
  ::google::protobuf::Int64Value* unsafe_arena_release_a12();

  // .google.protobuf.Int64Value a13 = 3;
  bool has_a13() const;
  void clear_a13();
  static const int kA13FieldNumber = 3;
  private:
  const ::google::protobuf::Int64Value& _internal_a13() const;
  public:
  const ::google::protobuf::Int64Value& a13() const;
  ::google::protobuf::Int64Value* release_a13();
  ::google::protobuf::Int64Value* mutable_a13();
  void set_allocated_a13(::google::protobuf::Int64Value* a13);
  void unsafe_arena_set_allocated_a13(
      ::google::protobuf::Int64Value* a13);
  ::google::protobuf::Int64Value* unsafe_arena_release_a13();

  // .google.protobuf.Int64Value a21 = 4;
  bool has_a21() const;
  void clear_a21();
  static const int kA21FieldNumber = 4;
  private:
  const ::google::protobuf::Int64Value& _internal_a21() const;
  public:
  const ::google::protobuf::Int64Value& a21() const;
  ::google::protobuf::Int64Value* release_a21();
  ::google::protobuf::Int64Value* mutable_a21();
  void set_allocated_a21(::google::protobuf::Int64Value* a21);
  void unsafe_arena_set_allocated_a21(
      ::google::protobuf::Int64Value* a21);
  ::google::protobuf::Int64Value* unsafe_arena_release_a21();

  // .google.protobuf.Int64Value a22 = 5;
  bool has_a22() const;
  void clear_a22();
  static const int kA22FieldNumber = 5;
  private:
  const ::google::protobuf::Int64Value& _internal_a22() const;
  public:
  const ::google::protobuf::Int64Value& a22() const;
  ::google::protobuf::Int64Value* release_a22();
  ::google::protobuf::Int64Value* mutable_a22();
  void set_allocated_a22(::google::protobuf::Int64Value* a22);
  void unsafe_arena_set_allocated_a22(
      ::google::protobuf::Int64Value* a22);
  ::google::protobuf::Int64Value* unsafe_arena_release_a22();

  // .google.protobuf.Int64Value a23 = 6;
  bool has_a23() const;
  void clear_a23();
  static const int kA23FieldNumber = 6;
  private:
  const ::google::protobuf::Int64Value& _internal_a23() const;
  public:
  const ::google::protobuf::Int64Value& a23() const;
  ::google::protobuf::Int64Value* release_a23();
  ::google::protobuf::Int64Value* mutable_a23();
  void set_allocated_a23(::google::protobuf::Int64Value* a23);
  void unsafe_arena_set_allocated_a23(
      ::google::protobuf::Int64Value* a23);
  ::google::protobuf::Int64Value* unsafe_arena_release_a23();

  // .google.protobuf.Int64Value a31 = 7;
  bool has_a31() const;
  void clear_a31();
  static const int kA31FieldNumber = 7;
  private:
  const ::google::protobuf::Int64Value& _internal_a31() const;
  public:
  const ::google::protobuf::Int64Value& a31() const;
  ::google::protobuf::Int64Value* release_a31();
  ::google::protobuf::Int64Value* mutable_a31();
  void set_allocated_a31(::google::protobuf::Int64Value* a31);
  void unsafe_arena_set_allocated_a31(
      ::google::protobuf::Int64Value* a31);
  ::google::protobuf::Int64Value* unsafe_arena_release_a31();

  // .google.protobuf.Int64Value a32 = 8;
  bool has_a32() const;
  void clear_a32();
  static const int kA32FieldNumber = 8;
  private:
  const ::google::protobuf::Int64Value& _internal_a32() const;
  public:
  const ::google::protobuf::Int64Value& a32() const;
  ::google::protobuf::Int64Value* release_a32();
  ::google::protobuf::Int64Value* mutable_a32();
  void set_allocated_a32(::google::protobuf::Int64Value* a32);
  void unsafe_arena_set_allocated_a32(
      ::google::protobuf::Int64Value* a32);
  ::google::protobuf::Int64Value* unsafe_arena_release_a32();

  // .google.protobuf.Int64Value a33 = 9;
  bool has_a33() const;
  void clear_a33();
  static const int kA33FieldNumber = 9;
  private:
  const ::google::protobuf::Int64Value& _internal_a33() const;
  public:
  const ::google::protobuf::Int64Value& a33() const;
  ::google::protobuf::Int64Value* release_a33();
  ::google::protobuf::Int64Value* mutable_a33();
  void set_allocated_a33(::google::protobuf::Int64Value* a33);
  void unsafe_arena_set_allocated_a33(
      ::google::protobuf::Int64Value* a33);
  ::google::protobuf::Int64Value* unsafe_arena_release_a33();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.base.Int64Matrix3x3)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::Int64Value* a11_;
  ::google::protobuf::Int64Value* a12_;
  ::google::protobuf::Int64Value* a13_;
  ::google::protobuf::Int64Value* a21_;
  ::google::protobuf::Int64Value* a22_;
  ::google::protobuf::Int64Value* a23_;
  ::google::protobuf::Int64Value* a31_;
  ::google::protobuf::Int64Value* a32_;
  ::google::protobuf::Int64Value* a33_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::TableStruct;
};
// ===================================================================

static const int kExponentFieldNumber = 50001;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 3, false >
  exponent;

// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Version

// .google.protobuf.Int64Value major = 1;
inline bool Version::has_major() const {
  return this != internal_default_instance() && major_ != NULL;
}
inline const ::google::protobuf::Int64Value& Version::_internal_major() const {
  return *major_;
}
inline const ::google::protobuf::Int64Value& Version::major() const {
  const ::google::protobuf::Int64Value* p = major_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Version.major)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* Version::release_major() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Version.major)
  
  ::google::protobuf::Int64Value* temp = major_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  major_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Version::unsafe_arena_release_major() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Version.major)
  
  ::google::protobuf::Int64Value* temp = major_;
  major_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Version::mutable_major() {
  
  if (major_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    major_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Version.major)
  return major_;
}
inline void Version::set_allocated_major(::google::protobuf::Int64Value* major) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(major_);
  }
  if (major) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(major)->GetArena();
    if (message_arena != submessage_arena) {
      major = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, major, submessage_arena);
    }
    
  } else {
    
  }
  major_ = major;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Version.major)
}

// .google.protobuf.Int64Value minor = 2;
inline bool Version::has_minor() const {
  return this != internal_default_instance() && minor_ != NULL;
}
inline const ::google::protobuf::Int64Value& Version::_internal_minor() const {
  return *minor_;
}
inline const ::google::protobuf::Int64Value& Version::minor() const {
  const ::google::protobuf::Int64Value* p = minor_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Version.minor)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* Version::release_minor() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Version.minor)
  
  ::google::protobuf::Int64Value* temp = minor_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  minor_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Version::unsafe_arena_release_minor() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Version.minor)
  
  ::google::protobuf::Int64Value* temp = minor_;
  minor_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Version::mutable_minor() {
  
  if (minor_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    minor_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Version.minor)
  return minor_;
}
inline void Version::set_allocated_minor(::google::protobuf::Int64Value* minor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(minor_);
  }
  if (minor) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(minor)->GetArena();
    if (message_arena != submessage_arena) {
      minor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, minor, submessage_arena);
    }
    
  } else {
    
  }
  minor_ = minor;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Version.minor)
}

// .google.protobuf.Int64Value patch = 3;
inline bool Version::has_patch() const {
  return this != internal_default_instance() && patch_ != NULL;
}
inline const ::google::protobuf::Int64Value& Version::_internal_patch() const {
  return *patch_;
}
inline const ::google::protobuf::Int64Value& Version::patch() const {
  const ::google::protobuf::Int64Value* p = patch_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Version.patch)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* Version::release_patch() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Version.patch)
  
  ::google::protobuf::Int64Value* temp = patch_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  patch_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Version::unsafe_arena_release_patch() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Version.patch)
  
  ::google::protobuf::Int64Value* temp = patch_;
  patch_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Version::mutable_patch() {
  
  if (patch_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    patch_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Version.patch)
  return patch_;
}
inline void Version::set_allocated_patch(::google::protobuf::Int64Value* patch) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(patch_);
  }
  if (patch) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(patch)->GetArena();
    if (message_arena != submessage_arena) {
      patch = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, patch, submessage_arena);
    }
    
  } else {
    
  }
  patch_ = patch;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Version.patch)
}

// .google.protobuf.StringValue name = 4;
inline bool Version::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::google::protobuf::StringValue& Version::_internal_name() const {
  return *name_;
}
inline const ::google::protobuf::StringValue& Version::name() const {
  const ::google::protobuf::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Version.name)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* Version::release_name() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Version.name)
  
  ::google::protobuf::StringValue* temp = name_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  name_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* Version::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Version.name)
  
  ::google::protobuf::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* Version::mutable_name() {
  
  if (name_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Version.name)
  return name_;
}
inline void Version::set_allocated_name(::google::protobuf::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(name)->GetArena();
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Version.name)
}

// -------------------------------------------------------------------

// Entity

// .google.protobuf.StringValue primary_id = 1;
inline bool Entity::has_primary_id() const {
  return this != internal_default_instance() && primary_id_ != NULL;
}
inline const ::google::protobuf::StringValue& Entity::_internal_primary_id() const {
  return *primary_id_;
}
inline const ::google::protobuf::StringValue& Entity::primary_id() const {
  const ::google::protobuf::StringValue* p = primary_id_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Entity.primary_id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* Entity::release_primary_id() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Entity.primary_id)
  
  ::google::protobuf::StringValue* temp = primary_id_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  primary_id_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* Entity::unsafe_arena_release_primary_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Entity.primary_id)
  
  ::google::protobuf::StringValue* temp = primary_id_;
  primary_id_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* Entity::mutable_primary_id() {
  
  if (primary_id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    primary_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Entity.primary_id)
  return primary_id_;
}
inline void Entity::set_allocated_primary_id(::google::protobuf::StringValue* primary_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(primary_id_);
  }
  if (primary_id) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(primary_id)->GetArena();
    if (message_arena != submessage_arena) {
      primary_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, primary_id, submessage_arena);
    }
    
  } else {
    
  }
  primary_id_ = primary_id;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Entity.primary_id)
}

// .google.protobuf.StringValue secondary_id = 2;
inline bool Entity::has_secondary_id() const {
  return this != internal_default_instance() && secondary_id_ != NULL;
}
inline const ::google::protobuf::StringValue& Entity::_internal_secondary_id() const {
  return *secondary_id_;
}
inline const ::google::protobuf::StringValue& Entity::secondary_id() const {
  const ::google::protobuf::StringValue* p = secondary_id_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Entity.secondary_id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* Entity::release_secondary_id() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Entity.secondary_id)
  
  ::google::protobuf::StringValue* temp = secondary_id_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  secondary_id_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* Entity::unsafe_arena_release_secondary_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Entity.secondary_id)
  
  ::google::protobuf::StringValue* temp = secondary_id_;
  secondary_id_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* Entity::mutable_secondary_id() {
  
  if (secondary_id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    secondary_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Entity.secondary_id)
  return secondary_id_;
}
inline void Entity::set_allocated_secondary_id(::google::protobuf::StringValue* secondary_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(secondary_id_);
  }
  if (secondary_id) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(secondary_id)->GetArena();
    if (message_arena != submessage_arena) {
      secondary_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, secondary_id, submessage_arena);
    }
    
  } else {
    
  }
  secondary_id_ = secondary_id;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Entity.secondary_id)
}

// .google.protobuf.StringValue type = 3;
inline bool Entity::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline const ::google::protobuf::StringValue& Entity::_internal_type() const {
  return *type_;
}
inline const ::google::protobuf::StringValue& Entity::type() const {
  const ::google::protobuf::StringValue* p = type_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Entity.type)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* Entity::release_type() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Entity.type)
  
  ::google::protobuf::StringValue* temp = type_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  type_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* Entity::unsafe_arena_release_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Entity.type)
  
  ::google::protobuf::StringValue* temp = type_;
  type_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* Entity::mutable_type() {
  
  if (type_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Entity.type)
  return type_;
}
inline void Entity::set_allocated_type(::google::protobuf::StringValue* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(type_);
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(type)->GetArena();
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    
  } else {
    
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Entity.type)
}

// .sensoris.protobuf.types.base.Version software_version = 4;
inline bool Entity::has_software_version() const {
  return this != internal_default_instance() && software_version_ != NULL;
}
inline void Entity::clear_software_version() {
  if (GetArenaNoVirtual() == NULL && software_version_ != NULL) {
    delete software_version_;
  }
  software_version_ = NULL;
}
inline const ::sensoris::protobuf::types::base::Version& Entity::_internal_software_version() const {
  return *software_version_;
}
inline const ::sensoris::protobuf::types::base::Version& Entity::software_version() const {
  const ::sensoris::protobuf::types::base::Version* p = software_version_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Entity.software_version)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::types::base::Version*>(
      &::sensoris::protobuf::types::base::_Version_default_instance_);
}
inline ::sensoris::protobuf::types::base::Version* Entity::release_software_version() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Entity.software_version)
  
  ::sensoris::protobuf::types::base::Version* temp = software_version_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  software_version_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Version* Entity::unsafe_arena_release_software_version() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Entity.software_version)
  
  ::sensoris::protobuf::types::base::Version* temp = software_version_;
  software_version_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Version* Entity::mutable_software_version() {
  
  if (software_version_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::Version>(GetArenaNoVirtual());
    software_version_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Entity.software_version)
  return software_version_;
}
inline void Entity::set_allocated_software_version(::sensoris::protobuf::types::base::Version* software_version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete software_version_;
  }
  if (software_version) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(software_version);
    if (message_arena != submessage_arena) {
      software_version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, software_version, submessage_arena);
    }
    
  } else {
    
  }
  software_version_ = software_version;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Entity.software_version)
}

// .sensoris.protobuf.types.base.Version hardware_version = 5;
inline bool Entity::has_hardware_version() const {
  return this != internal_default_instance() && hardware_version_ != NULL;
}
inline void Entity::clear_hardware_version() {
  if (GetArenaNoVirtual() == NULL && hardware_version_ != NULL) {
    delete hardware_version_;
  }
  hardware_version_ = NULL;
}
inline const ::sensoris::protobuf::types::base::Version& Entity::_internal_hardware_version() const {
  return *hardware_version_;
}
inline const ::sensoris::protobuf::types::base::Version& Entity::hardware_version() const {
  const ::sensoris::protobuf::types::base::Version* p = hardware_version_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Entity.hardware_version)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::types::base::Version*>(
      &::sensoris::protobuf::types::base::_Version_default_instance_);
}
inline ::sensoris::protobuf::types::base::Version* Entity::release_hardware_version() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Entity.hardware_version)
  
  ::sensoris::protobuf::types::base::Version* temp = hardware_version_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  hardware_version_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Version* Entity::unsafe_arena_release_hardware_version() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Entity.hardware_version)
  
  ::sensoris::protobuf::types::base::Version* temp = hardware_version_;
  hardware_version_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Version* Entity::mutable_hardware_version() {
  
  if (hardware_version_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::Version>(GetArenaNoVirtual());
    hardware_version_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Entity.hardware_version)
  return hardware_version_;
}
inline void Entity::set_allocated_hardware_version(::sensoris::protobuf::types::base::Version* hardware_version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete hardware_version_;
  }
  if (hardware_version) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(hardware_version);
    if (message_arena != submessage_arena) {
      hardware_version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hardware_version, submessage_arena);
    }
    
  } else {
    
  }
  hardware_version_ = hardware_version;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Entity.hardware_version)
}

// repeated .google.protobuf.Any extension = 15;
inline int Entity::extension_size() const {
  return extension_.size();
}
inline ::google::protobuf::Any* Entity::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Entity.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
Entity::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.types.base.Entity.extension)
  return &extension_;
}
inline const ::google::protobuf::Any& Entity::extension(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Entity.extension)
  return extension_.Get(index);
}
inline ::google::protobuf::Any* Entity::add_extension() {
  // @@protoc_insertion_point(field_add:sensoris.protobuf.types.base.Entity.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
Entity::extension() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.types.base.Entity.extension)
  return extension_;
}

// -------------------------------------------------------------------

// Timestamp

// .google.protobuf.Int64Value posix_time = 1;
inline bool Timestamp::has_posix_time() const {
  return this != internal_default_instance() && posix_time_ != NULL;
}
inline const ::google::protobuf::Int64Value& Timestamp::_internal_posix_time() const {
  return *posix_time_;
}
inline const ::google::protobuf::Int64Value& Timestamp::posix_time() const {
  const ::google::protobuf::Int64Value* p = posix_time_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Timestamp.posix_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* Timestamp::release_posix_time() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Timestamp.posix_time)
  
  ::google::protobuf::Int64Value* temp = posix_time_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  posix_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Timestamp::unsafe_arena_release_posix_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Timestamp.posix_time)
  
  ::google::protobuf::Int64Value* temp = posix_time_;
  posix_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Timestamp::mutable_posix_time() {
  
  if (posix_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    posix_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Timestamp.posix_time)
  return posix_time_;
}
inline void Timestamp::set_allocated_posix_time(::google::protobuf::Int64Value* posix_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(posix_time_);
  }
  if (posix_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(posix_time)->GetArena();
    if (message_arena != submessage_arena) {
      posix_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, posix_time, submessage_arena);
    }
    
  } else {
    
  }
  posix_time_ = posix_time;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Timestamp.posix_time)
}

// .google.protobuf.Int64Value posix_time_fraction = 2 [(.sensoris.protobuf.types.base.exponent) = 0];
inline bool Timestamp::has_posix_time_fraction() const {
  return this != internal_default_instance() && posix_time_fraction_ != NULL;
}
inline const ::google::protobuf::Int64Value& Timestamp::_internal_posix_time_fraction() const {
  return *posix_time_fraction_;
}
inline const ::google::protobuf::Int64Value& Timestamp::posix_time_fraction() const {
  const ::google::protobuf::Int64Value* p = posix_time_fraction_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Timestamp.posix_time_fraction)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* Timestamp::release_posix_time_fraction() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Timestamp.posix_time_fraction)
  
  ::google::protobuf::Int64Value* temp = posix_time_fraction_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  posix_time_fraction_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Timestamp::unsafe_arena_release_posix_time_fraction() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Timestamp.posix_time_fraction)
  
  ::google::protobuf::Int64Value* temp = posix_time_fraction_;
  posix_time_fraction_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Timestamp::mutable_posix_time_fraction() {
  
  if (posix_time_fraction_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    posix_time_fraction_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Timestamp.posix_time_fraction)
  return posix_time_fraction_;
}
inline void Timestamp::set_allocated_posix_time_fraction(::google::protobuf::Int64Value* posix_time_fraction) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(posix_time_fraction_);
  }
  if (posix_time_fraction) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(posix_time_fraction)->GetArena();
    if (message_arena != submessage_arena) {
      posix_time_fraction = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, posix_time_fraction, submessage_arena);
    }
    
  } else {
    
  }
  posix_time_fraction_ = posix_time_fraction;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Timestamp.posix_time_fraction)
}

// -------------------------------------------------------------------

// TimestampInterval

// .sensoris.protobuf.types.base.Timestamp start_inclusive = 1;
inline bool TimestampInterval::has_start_inclusive() const {
  return this != internal_default_instance() && start_inclusive_ != NULL;
}
inline void TimestampInterval::clear_start_inclusive() {
  if (GetArenaNoVirtual() == NULL && start_inclusive_ != NULL) {
    delete start_inclusive_;
  }
  start_inclusive_ = NULL;
}
inline const ::sensoris::protobuf::types::base::Timestamp& TimestampInterval::_internal_start_inclusive() const {
  return *start_inclusive_;
}
inline const ::sensoris::protobuf::types::base::Timestamp& TimestampInterval::start_inclusive() const {
  const ::sensoris::protobuf::types::base::Timestamp* p = start_inclusive_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.TimestampInterval.start_inclusive)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::types::base::Timestamp*>(
      &::sensoris::protobuf::types::base::_Timestamp_default_instance_);
}
inline ::sensoris::protobuf::types::base::Timestamp* TimestampInterval::release_start_inclusive() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.TimestampInterval.start_inclusive)
  
  ::sensoris::protobuf::types::base::Timestamp* temp = start_inclusive_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  start_inclusive_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Timestamp* TimestampInterval::unsafe_arena_release_start_inclusive() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.TimestampInterval.start_inclusive)
  
  ::sensoris::protobuf::types::base::Timestamp* temp = start_inclusive_;
  start_inclusive_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Timestamp* TimestampInterval::mutable_start_inclusive() {
  
  if (start_inclusive_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::Timestamp>(GetArenaNoVirtual());
    start_inclusive_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.TimestampInterval.start_inclusive)
  return start_inclusive_;
}
inline void TimestampInterval::set_allocated_start_inclusive(::sensoris::protobuf::types::base::Timestamp* start_inclusive) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete start_inclusive_;
  }
  if (start_inclusive) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(start_inclusive);
    if (message_arena != submessage_arena) {
      start_inclusive = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_inclusive, submessage_arena);
    }
    
  } else {
    
  }
  start_inclusive_ = start_inclusive;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.TimestampInterval.start_inclusive)
}

// .sensoris.protobuf.types.base.Timestamp end_exclusive = 2;
inline bool TimestampInterval::has_end_exclusive() const {
  return this != internal_default_instance() && end_exclusive_ != NULL;
}
inline void TimestampInterval::clear_end_exclusive() {
  if (GetArenaNoVirtual() == NULL && end_exclusive_ != NULL) {
    delete end_exclusive_;
  }
  end_exclusive_ = NULL;
}
inline const ::sensoris::protobuf::types::base::Timestamp& TimestampInterval::_internal_end_exclusive() const {
  return *end_exclusive_;
}
inline const ::sensoris::protobuf::types::base::Timestamp& TimestampInterval::end_exclusive() const {
  const ::sensoris::protobuf::types::base::Timestamp* p = end_exclusive_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.TimestampInterval.end_exclusive)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::types::base::Timestamp*>(
      &::sensoris::protobuf::types::base::_Timestamp_default_instance_);
}
inline ::sensoris::protobuf::types::base::Timestamp* TimestampInterval::release_end_exclusive() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.TimestampInterval.end_exclusive)
  
  ::sensoris::protobuf::types::base::Timestamp* temp = end_exclusive_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  end_exclusive_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Timestamp* TimestampInterval::unsafe_arena_release_end_exclusive() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.TimestampInterval.end_exclusive)
  
  ::sensoris::protobuf::types::base::Timestamp* temp = end_exclusive_;
  end_exclusive_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Timestamp* TimestampInterval::mutable_end_exclusive() {
  
  if (end_exclusive_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::Timestamp>(GetArenaNoVirtual());
    end_exclusive_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.TimestampInterval.end_exclusive)
  return end_exclusive_;
}
inline void TimestampInterval::set_allocated_end_exclusive(::sensoris::protobuf::types::base::Timestamp* end_exclusive) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete end_exclusive_;
  }
  if (end_exclusive) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(end_exclusive);
    if (message_arena != submessage_arena) {
      end_exclusive = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, end_exclusive, submessage_arena);
    }
    
  } else {
    
  }
  end_exclusive_ = end_exclusive;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.TimestampInterval.end_exclusive)
}

// -------------------------------------------------------------------

// EventEnvelope

// .google.protobuf.Int64Value id = 1;
inline bool EventEnvelope::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::protobuf::Int64Value& EventEnvelope::_internal_id() const {
  return *id_;
}
inline const ::google::protobuf::Int64Value& EventEnvelope::id() const {
  const ::google::protobuf::Int64Value* p = id_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.EventEnvelope.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* EventEnvelope::release_id() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.EventEnvelope.id)
  
  ::google::protobuf::Int64Value* temp = id_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  id_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* EventEnvelope::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.EventEnvelope.id)
  
  ::google::protobuf::Int64Value* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* EventEnvelope::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.EventEnvelope.id)
  return id_;
}
inline void EventEnvelope::set_allocated_id(::google::protobuf::Int64Value* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(id)->GetArena();
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.EventEnvelope.id)
}

// .sensoris.protobuf.types.base.Timestamp timestamp = 2;
inline bool EventEnvelope::has_timestamp() const {
  return this != internal_default_instance() && timestamp_ != NULL;
}
inline void EventEnvelope::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
}
inline const ::sensoris::protobuf::types::base::Timestamp& EventEnvelope::_internal_timestamp() const {
  return *timestamp_;
}
inline const ::sensoris::protobuf::types::base::Timestamp& EventEnvelope::timestamp() const {
  const ::sensoris::protobuf::types::base::Timestamp* p = timestamp_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.EventEnvelope.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::types::base::Timestamp*>(
      &::sensoris::protobuf::types::base::_Timestamp_default_instance_);
}
inline ::sensoris::protobuf::types::base::Timestamp* EventEnvelope::release_timestamp() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.EventEnvelope.timestamp)
  
  ::sensoris::protobuf::types::base::Timestamp* temp = timestamp_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  timestamp_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Timestamp* EventEnvelope::unsafe_arena_release_timestamp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.EventEnvelope.timestamp)
  
  ::sensoris::protobuf::types::base::Timestamp* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Timestamp* EventEnvelope::mutable_timestamp() {
  
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::Timestamp>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.EventEnvelope.timestamp)
  return timestamp_;
}
inline void EventEnvelope::set_allocated_timestamp(::sensoris::protobuf::types::base::Timestamp* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(timestamp);
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    
  } else {
    
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.EventEnvelope.timestamp)
}

// repeated .google.protobuf.Any extension = 15;
inline int EventEnvelope::extension_size() const {
  return extension_.size();
}
inline ::google::protobuf::Any* EventEnvelope::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.EventEnvelope.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
EventEnvelope::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.types.base.EventEnvelope.extension)
  return &extension_;
}
inline const ::google::protobuf::Any& EventEnvelope::extension(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.EventEnvelope.extension)
  return extension_.Get(index);
}
inline ::google::protobuf::Any* EventEnvelope::add_extension() {
  // @@protoc_insertion_point(field_add:sensoris.protobuf.types.base.EventEnvelope.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
EventEnvelope::extension() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.types.base.EventEnvelope.extension)
  return extension_;
}

// -------------------------------------------------------------------

// EventDetectionStatus

// .sensoris.protobuf.types.base.EventDetectionStatus.Type type = 1;
inline void EventDetectionStatus::clear_type() {
  type_ = 0;
}
inline ::sensoris::protobuf::types::base::EventDetectionStatus_Type EventDetectionStatus::type() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.EventDetectionStatus.type)
  return static_cast< ::sensoris::protobuf::types::base::EventDetectionStatus_Type >(type_);
}
inline void EventDetectionStatus::set_type(::sensoris::protobuf::types::base::EventDetectionStatus_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:sensoris.protobuf.types.base.EventDetectionStatus.type)
}

// .sensoris.protobuf.types.base.Confidence confidence = 2;
inline bool EventDetectionStatus::has_confidence() const {
  return this != internal_default_instance() && confidence_ != NULL;
}
inline void EventDetectionStatus::clear_confidence() {
  if (GetArenaNoVirtual() == NULL && confidence_ != NULL) {
    delete confidence_;
  }
  confidence_ = NULL;
}
inline const ::sensoris::protobuf::types::base::Confidence& EventDetectionStatus::_internal_confidence() const {
  return *confidence_;
}
inline const ::sensoris::protobuf::types::base::Confidence& EventDetectionStatus::confidence() const {
  const ::sensoris::protobuf::types::base::Confidence* p = confidence_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.EventDetectionStatus.confidence)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::types::base::Confidence*>(
      &::sensoris::protobuf::types::base::_Confidence_default_instance_);
}
inline ::sensoris::protobuf::types::base::Confidence* EventDetectionStatus::release_confidence() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.EventDetectionStatus.confidence)
  
  ::sensoris::protobuf::types::base::Confidence* temp = confidence_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  confidence_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Confidence* EventDetectionStatus::unsafe_arena_release_confidence() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.EventDetectionStatus.confidence)
  
  ::sensoris::protobuf::types::base::Confidence* temp = confidence_;
  confidence_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Confidence* EventDetectionStatus::mutable_confidence() {
  
  if (confidence_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::Confidence>(GetArenaNoVirtual());
    confidence_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.EventDetectionStatus.confidence)
  return confidence_;
}
inline void EventDetectionStatus::set_allocated_confidence(::sensoris::protobuf::types::base::Confidence* confidence) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete confidence_;
  }
  if (confidence) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(confidence);
    if (message_arena != submessage_arena) {
      confidence = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, confidence, submessage_arena);
    }
    
  } else {
    
  }
  confidence_ = confidence;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.EventDetectionStatus.confidence)
}

// -------------------------------------------------------------------

// CategoryEnvelope

// repeated .google.protobuf.Any extension = 15;
inline int CategoryEnvelope::extension_size() const {
  return extension_.size();
}
inline ::google::protobuf::Any* CategoryEnvelope::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.CategoryEnvelope.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
CategoryEnvelope::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.types.base.CategoryEnvelope.extension)
  return &extension_;
}
inline const ::google::protobuf::Any& CategoryEnvelope::extension(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.CategoryEnvelope.extension)
  return extension_.Get(index);
}
inline ::google::protobuf::Any* CategoryEnvelope::add_extension() {
  // @@protoc_insertion_point(field_add:sensoris.protobuf.types.base.CategoryEnvelope.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
CategoryEnvelope::extension() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.types.base.CategoryEnvelope.extension)
  return extension_;
}

// -------------------------------------------------------------------

// Int64StatisticMeasure

// .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
inline bool Int64StatisticMeasure::has_timestamp_interval() const {
  return this != internal_default_instance() && timestamp_interval_ != NULL;
}
inline void Int64StatisticMeasure::clear_timestamp_interval() {
  if (GetArenaNoVirtual() == NULL && timestamp_interval_ != NULL) {
    delete timestamp_interval_;
  }
  timestamp_interval_ = NULL;
}
inline const ::sensoris::protobuf::types::base::TimestampInterval& Int64StatisticMeasure::_internal_timestamp_interval() const {
  return *timestamp_interval_;
}
inline const ::sensoris::protobuf::types::base::TimestampInterval& Int64StatisticMeasure::timestamp_interval() const {
  const ::sensoris::protobuf::types::base::TimestampInterval* p = timestamp_interval_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64StatisticMeasure.timestamp_interval)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::types::base::TimestampInterval*>(
      &::sensoris::protobuf::types::base::_TimestampInterval_default_instance_);
}
inline ::sensoris::protobuf::types::base::TimestampInterval* Int64StatisticMeasure::release_timestamp_interval() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64StatisticMeasure.timestamp_interval)
  
  ::sensoris::protobuf::types::base::TimestampInterval* temp = timestamp_interval_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  timestamp_interval_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::TimestampInterval* Int64StatisticMeasure::unsafe_arena_release_timestamp_interval() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64StatisticMeasure.timestamp_interval)
  
  ::sensoris::protobuf::types::base::TimestampInterval* temp = timestamp_interval_;
  timestamp_interval_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::TimestampInterval* Int64StatisticMeasure::mutable_timestamp_interval() {
  
  if (timestamp_interval_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::TimestampInterval>(GetArenaNoVirtual());
    timestamp_interval_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64StatisticMeasure.timestamp_interval)
  return timestamp_interval_;
}
inline void Int64StatisticMeasure::set_allocated_timestamp_interval(::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_interval_;
  }
  if (timestamp_interval) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(timestamp_interval);
    if (message_arena != submessage_arena) {
      timestamp_interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp_interval, submessage_arena);
    }
    
  } else {
    
  }
  timestamp_interval_ = timestamp_interval;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64StatisticMeasure.timestamp_interval)
}

// .sensoris.protobuf.types.base.StatisticMeasureType type = 2;
inline void Int64StatisticMeasure::clear_type() {
  type_ = 0;
}
inline ::sensoris::protobuf::types::base::StatisticMeasureType Int64StatisticMeasure::type() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64StatisticMeasure.type)
  return static_cast< ::sensoris::protobuf::types::base::StatisticMeasureType >(type_);
}
inline void Int64StatisticMeasure::set_type(::sensoris::protobuf::types::base::StatisticMeasureType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:sensoris.protobuf.types.base.Int64StatisticMeasure.type)
}

// int64 value = 3;
inline void Int64StatisticMeasure::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Int64StatisticMeasure::value() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64StatisticMeasure.value)
  return value_;
}
inline void Int64StatisticMeasure::set_value(::google::protobuf::int64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:sensoris.protobuf.types.base.Int64StatisticMeasure.value)
}

// -------------------------------------------------------------------

// Int64StatisticMeasureAndAccuracy

// .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
inline bool Int64StatisticMeasureAndAccuracy::has_timestamp_interval() const {
  return this != internal_default_instance() && timestamp_interval_ != NULL;
}
inline void Int64StatisticMeasureAndAccuracy::clear_timestamp_interval() {
  if (GetArenaNoVirtual() == NULL && timestamp_interval_ != NULL) {
    delete timestamp_interval_;
  }
  timestamp_interval_ = NULL;
}
inline const ::sensoris::protobuf::types::base::TimestampInterval& Int64StatisticMeasureAndAccuracy::_internal_timestamp_interval() const {
  return *timestamp_interval_;
}
inline const ::sensoris::protobuf::types::base::TimestampInterval& Int64StatisticMeasureAndAccuracy::timestamp_interval() const {
  const ::sensoris::protobuf::types::base::TimestampInterval* p = timestamp_interval_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy.timestamp_interval)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::types::base::TimestampInterval*>(
      &::sensoris::protobuf::types::base::_TimestampInterval_default_instance_);
}
inline ::sensoris::protobuf::types::base::TimestampInterval* Int64StatisticMeasureAndAccuracy::release_timestamp_interval() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy.timestamp_interval)
  
  ::sensoris::protobuf::types::base::TimestampInterval* temp = timestamp_interval_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  timestamp_interval_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::TimestampInterval* Int64StatisticMeasureAndAccuracy::unsafe_arena_release_timestamp_interval() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy.timestamp_interval)
  
  ::sensoris::protobuf::types::base::TimestampInterval* temp = timestamp_interval_;
  timestamp_interval_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::TimestampInterval* Int64StatisticMeasureAndAccuracy::mutable_timestamp_interval() {
  
  if (timestamp_interval_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::TimestampInterval>(GetArenaNoVirtual());
    timestamp_interval_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy.timestamp_interval)
  return timestamp_interval_;
}
inline void Int64StatisticMeasureAndAccuracy::set_allocated_timestamp_interval(::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_interval_;
  }
  if (timestamp_interval) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(timestamp_interval);
    if (message_arena != submessage_arena) {
      timestamp_interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp_interval, submessage_arena);
    }
    
  } else {
    
  }
  timestamp_interval_ = timestamp_interval;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy.timestamp_interval)
}

// .sensoris.protobuf.types.base.StatisticMeasureType type = 2;
inline void Int64StatisticMeasureAndAccuracy::clear_type() {
  type_ = 0;
}
inline ::sensoris::protobuf::types::base::StatisticMeasureType Int64StatisticMeasureAndAccuracy::type() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy.type)
  return static_cast< ::sensoris::protobuf::types::base::StatisticMeasureType >(type_);
}
inline void Int64StatisticMeasureAndAccuracy::set_type(::sensoris::protobuf::types::base::StatisticMeasureType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy.type)
}

// int64 value = 3;
inline void Int64StatisticMeasureAndAccuracy::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Int64StatisticMeasureAndAccuracy::value() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy.value)
  return value_;
}
inline void Int64StatisticMeasureAndAccuracy::set_value(::google::protobuf::int64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy.value)
}

// .google.protobuf.Int64Value accuracy = 4;
inline bool Int64StatisticMeasureAndAccuracy::has_accuracy() const {
  return this != internal_default_instance() && accuracy_ != NULL;
}
inline const ::google::protobuf::Int64Value& Int64StatisticMeasureAndAccuracy::_internal_accuracy() const {
  return *accuracy_;
}
inline const ::google::protobuf::Int64Value& Int64StatisticMeasureAndAccuracy::accuracy() const {
  const ::google::protobuf::Int64Value* p = accuracy_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy.accuracy)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* Int64StatisticMeasureAndAccuracy::release_accuracy() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy.accuracy)
  
  ::google::protobuf::Int64Value* temp = accuracy_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  accuracy_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64StatisticMeasureAndAccuracy::unsafe_arena_release_accuracy() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy.accuracy)
  
  ::google::protobuf::Int64Value* temp = accuracy_;
  accuracy_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64StatisticMeasureAndAccuracy::mutable_accuracy() {
  
  if (accuracy_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    accuracy_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy.accuracy)
  return accuracy_;
}
inline void Int64StatisticMeasureAndAccuracy::set_allocated_accuracy(::google::protobuf::Int64Value* accuracy) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(accuracy_);
  }
  if (accuracy) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(accuracy)->GetArena();
    if (message_arena != submessage_arena) {
      accuracy = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, accuracy, submessage_arena);
    }
    
  } else {
    
  }
  accuracy_ = accuracy;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy.accuracy)
}

// -------------------------------------------------------------------

// AbsoluteInt64Histogram_Bin

// .google.protobuf.Int64Value lower_endpoint_inclusive = 1;
inline bool AbsoluteInt64Histogram_Bin::has_lower_endpoint_inclusive() const {
  return this != internal_default_instance() && lower_endpoint_inclusive_ != NULL;
}
inline const ::google::protobuf::Int64Value& AbsoluteInt64Histogram_Bin::_internal_lower_endpoint_inclusive() const {
  return *lower_endpoint_inclusive_;
}
inline const ::google::protobuf::Int64Value& AbsoluteInt64Histogram_Bin::lower_endpoint_inclusive() const {
  const ::google::protobuf::Int64Value* p = lower_endpoint_inclusive_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin.lower_endpoint_inclusive)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* AbsoluteInt64Histogram_Bin::release_lower_endpoint_inclusive() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin.lower_endpoint_inclusive)
  
  ::google::protobuf::Int64Value* temp = lower_endpoint_inclusive_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  lower_endpoint_inclusive_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* AbsoluteInt64Histogram_Bin::unsafe_arena_release_lower_endpoint_inclusive() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin.lower_endpoint_inclusive)
  
  ::google::protobuf::Int64Value* temp = lower_endpoint_inclusive_;
  lower_endpoint_inclusive_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* AbsoluteInt64Histogram_Bin::mutable_lower_endpoint_inclusive() {
  
  if (lower_endpoint_inclusive_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    lower_endpoint_inclusive_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin.lower_endpoint_inclusive)
  return lower_endpoint_inclusive_;
}
inline void AbsoluteInt64Histogram_Bin::set_allocated_lower_endpoint_inclusive(::google::protobuf::Int64Value* lower_endpoint_inclusive) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(lower_endpoint_inclusive_);
  }
  if (lower_endpoint_inclusive) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(lower_endpoint_inclusive)->GetArena();
    if (message_arena != submessage_arena) {
      lower_endpoint_inclusive = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lower_endpoint_inclusive, submessage_arena);
    }
    
  } else {
    
  }
  lower_endpoint_inclusive_ = lower_endpoint_inclusive;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin.lower_endpoint_inclusive)
}

// .google.protobuf.Int64Value frequency = 2;
inline bool AbsoluteInt64Histogram_Bin::has_frequency() const {
  return this != internal_default_instance() && frequency_ != NULL;
}
inline const ::google::protobuf::Int64Value& AbsoluteInt64Histogram_Bin::_internal_frequency() const {
  return *frequency_;
}
inline const ::google::protobuf::Int64Value& AbsoluteInt64Histogram_Bin::frequency() const {
  const ::google::protobuf::Int64Value* p = frequency_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin.frequency)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* AbsoluteInt64Histogram_Bin::release_frequency() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin.frequency)
  
  ::google::protobuf::Int64Value* temp = frequency_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  frequency_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* AbsoluteInt64Histogram_Bin::unsafe_arena_release_frequency() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin.frequency)
  
  ::google::protobuf::Int64Value* temp = frequency_;
  frequency_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* AbsoluteInt64Histogram_Bin::mutable_frequency() {
  
  if (frequency_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    frequency_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin.frequency)
  return frequency_;
}
inline void AbsoluteInt64Histogram_Bin::set_allocated_frequency(::google::protobuf::Int64Value* frequency) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(frequency_);
  }
  if (frequency) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(frequency)->GetArena();
    if (message_arena != submessage_arena) {
      frequency = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, frequency, submessage_arena);
    }
    
  } else {
    
  }
  frequency_ = frequency;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin.frequency)
}

// -------------------------------------------------------------------

// AbsoluteInt64Histogram

// .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
inline bool AbsoluteInt64Histogram::has_timestamp_interval() const {
  return this != internal_default_instance() && timestamp_interval_ != NULL;
}
inline void AbsoluteInt64Histogram::clear_timestamp_interval() {
  if (GetArenaNoVirtual() == NULL && timestamp_interval_ != NULL) {
    delete timestamp_interval_;
  }
  timestamp_interval_ = NULL;
}
inline const ::sensoris::protobuf::types::base::TimestampInterval& AbsoluteInt64Histogram::_internal_timestamp_interval() const {
  return *timestamp_interval_;
}
inline const ::sensoris::protobuf::types::base::TimestampInterval& AbsoluteInt64Histogram::timestamp_interval() const {
  const ::sensoris::protobuf::types::base::TimestampInterval* p = timestamp_interval_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.AbsoluteInt64Histogram.timestamp_interval)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::types::base::TimestampInterval*>(
      &::sensoris::protobuf::types::base::_TimestampInterval_default_instance_);
}
inline ::sensoris::protobuf::types::base::TimestampInterval* AbsoluteInt64Histogram::release_timestamp_interval() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.AbsoluteInt64Histogram.timestamp_interval)
  
  ::sensoris::protobuf::types::base::TimestampInterval* temp = timestamp_interval_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  timestamp_interval_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::TimestampInterval* AbsoluteInt64Histogram::unsafe_arena_release_timestamp_interval() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.AbsoluteInt64Histogram.timestamp_interval)
  
  ::sensoris::protobuf::types::base::TimestampInterval* temp = timestamp_interval_;
  timestamp_interval_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::TimestampInterval* AbsoluteInt64Histogram::mutable_timestamp_interval() {
  
  if (timestamp_interval_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::TimestampInterval>(GetArenaNoVirtual());
    timestamp_interval_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.AbsoluteInt64Histogram.timestamp_interval)
  return timestamp_interval_;
}
inline void AbsoluteInt64Histogram::set_allocated_timestamp_interval(::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_interval_;
  }
  if (timestamp_interval) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(timestamp_interval);
    if (message_arena != submessage_arena) {
      timestamp_interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp_interval, submessage_arena);
    }
    
  } else {
    
  }
  timestamp_interval_ = timestamp_interval;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.AbsoluteInt64Histogram.timestamp_interval)
}

// .google.protobuf.Int64Value total_elements = 2;
inline bool AbsoluteInt64Histogram::has_total_elements() const {
  return this != internal_default_instance() && total_elements_ != NULL;
}
inline const ::google::protobuf::Int64Value& AbsoluteInt64Histogram::_internal_total_elements() const {
  return *total_elements_;
}
inline const ::google::protobuf::Int64Value& AbsoluteInt64Histogram::total_elements() const {
  const ::google::protobuf::Int64Value* p = total_elements_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.AbsoluteInt64Histogram.total_elements)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* AbsoluteInt64Histogram::release_total_elements() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.AbsoluteInt64Histogram.total_elements)
  
  ::google::protobuf::Int64Value* temp = total_elements_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  total_elements_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* AbsoluteInt64Histogram::unsafe_arena_release_total_elements() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.AbsoluteInt64Histogram.total_elements)
  
  ::google::protobuf::Int64Value* temp = total_elements_;
  total_elements_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* AbsoluteInt64Histogram::mutable_total_elements() {
  
  if (total_elements_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    total_elements_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.AbsoluteInt64Histogram.total_elements)
  return total_elements_;
}
inline void AbsoluteInt64Histogram::set_allocated_total_elements(::google::protobuf::Int64Value* total_elements) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(total_elements_);
  }
  if (total_elements) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(total_elements)->GetArena();
    if (message_arena != submessage_arena) {
      total_elements = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, total_elements, submessage_arena);
    }
    
  } else {
    
  }
  total_elements_ = total_elements;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.AbsoluteInt64Histogram.total_elements)
}

// repeated .sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin bin = 3;
inline int AbsoluteInt64Histogram::bin_size() const {
  return bin_.size();
}
inline void AbsoluteInt64Histogram::clear_bin() {
  bin_.Clear();
}
inline ::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin* AbsoluteInt64Histogram::mutable_bin(int index) {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.AbsoluteInt64Histogram.bin)
  return bin_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin >*
AbsoluteInt64Histogram::mutable_bin() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.types.base.AbsoluteInt64Histogram.bin)
  return &bin_;
}
inline const ::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin& AbsoluteInt64Histogram::bin(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.AbsoluteInt64Histogram.bin)
  return bin_.Get(index);
}
inline ::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin* AbsoluteInt64Histogram::add_bin() {
  // @@protoc_insertion_point(field_add:sensoris.protobuf.types.base.AbsoluteInt64Histogram.bin)
  return bin_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin >&
AbsoluteInt64Histogram::bin() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.types.base.AbsoluteInt64Histogram.bin)
  return bin_;
}

// .google.protobuf.Int64Value upper_endpoint_inclusive = 4;
inline bool AbsoluteInt64Histogram::has_upper_endpoint_inclusive() const {
  return this != internal_default_instance() && upper_endpoint_inclusive_ != NULL;
}
inline const ::google::protobuf::Int64Value& AbsoluteInt64Histogram::_internal_upper_endpoint_inclusive() const {
  return *upper_endpoint_inclusive_;
}
inline const ::google::protobuf::Int64Value& AbsoluteInt64Histogram::upper_endpoint_inclusive() const {
  const ::google::protobuf::Int64Value* p = upper_endpoint_inclusive_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.AbsoluteInt64Histogram.upper_endpoint_inclusive)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* AbsoluteInt64Histogram::release_upper_endpoint_inclusive() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.AbsoluteInt64Histogram.upper_endpoint_inclusive)
  
  ::google::protobuf::Int64Value* temp = upper_endpoint_inclusive_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  upper_endpoint_inclusive_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* AbsoluteInt64Histogram::unsafe_arena_release_upper_endpoint_inclusive() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.AbsoluteInt64Histogram.upper_endpoint_inclusive)
  
  ::google::protobuf::Int64Value* temp = upper_endpoint_inclusive_;
  upper_endpoint_inclusive_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* AbsoluteInt64Histogram::mutable_upper_endpoint_inclusive() {
  
  if (upper_endpoint_inclusive_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    upper_endpoint_inclusive_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.AbsoluteInt64Histogram.upper_endpoint_inclusive)
  return upper_endpoint_inclusive_;
}
inline void AbsoluteInt64Histogram::set_allocated_upper_endpoint_inclusive(::google::protobuf::Int64Value* upper_endpoint_inclusive) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(upper_endpoint_inclusive_);
  }
  if (upper_endpoint_inclusive) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(upper_endpoint_inclusive)->GetArena();
    if (message_arena != submessage_arena) {
      upper_endpoint_inclusive = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, upper_endpoint_inclusive, submessage_arena);
    }
    
  } else {
    
  }
  upper_endpoint_inclusive_ = upper_endpoint_inclusive;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.AbsoluteInt64Histogram.upper_endpoint_inclusive)
}

// -------------------------------------------------------------------

// RelativeInt64Histogram_Bin

// .google.protobuf.Int64Value lower_endpoint_inclusive = 1;
inline bool RelativeInt64Histogram_Bin::has_lower_endpoint_inclusive() const {
  return this != internal_default_instance() && lower_endpoint_inclusive_ != NULL;
}
inline const ::google::protobuf::Int64Value& RelativeInt64Histogram_Bin::_internal_lower_endpoint_inclusive() const {
  return *lower_endpoint_inclusive_;
}
inline const ::google::protobuf::Int64Value& RelativeInt64Histogram_Bin::lower_endpoint_inclusive() const {
  const ::google::protobuf::Int64Value* p = lower_endpoint_inclusive_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin.lower_endpoint_inclusive)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* RelativeInt64Histogram_Bin::release_lower_endpoint_inclusive() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin.lower_endpoint_inclusive)
  
  ::google::protobuf::Int64Value* temp = lower_endpoint_inclusive_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  lower_endpoint_inclusive_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* RelativeInt64Histogram_Bin::unsafe_arena_release_lower_endpoint_inclusive() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin.lower_endpoint_inclusive)
  
  ::google::protobuf::Int64Value* temp = lower_endpoint_inclusive_;
  lower_endpoint_inclusive_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* RelativeInt64Histogram_Bin::mutable_lower_endpoint_inclusive() {
  
  if (lower_endpoint_inclusive_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    lower_endpoint_inclusive_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin.lower_endpoint_inclusive)
  return lower_endpoint_inclusive_;
}
inline void RelativeInt64Histogram_Bin::set_allocated_lower_endpoint_inclusive(::google::protobuf::Int64Value* lower_endpoint_inclusive) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(lower_endpoint_inclusive_);
  }
  if (lower_endpoint_inclusive) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(lower_endpoint_inclusive)->GetArena();
    if (message_arena != submessage_arena) {
      lower_endpoint_inclusive = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lower_endpoint_inclusive, submessage_arena);
    }
    
  } else {
    
  }
  lower_endpoint_inclusive_ = lower_endpoint_inclusive;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin.lower_endpoint_inclusive)
}

// .google.protobuf.Int64Value relative_frequency = 3 [(.sensoris.protobuf.types.base.exponent) = 1];
inline bool RelativeInt64Histogram_Bin::has_relative_frequency() const {
  return this != internal_default_instance() && relative_frequency_ != NULL;
}
inline const ::google::protobuf::Int64Value& RelativeInt64Histogram_Bin::_internal_relative_frequency() const {
  return *relative_frequency_;
}
inline const ::google::protobuf::Int64Value& RelativeInt64Histogram_Bin::relative_frequency() const {
  const ::google::protobuf::Int64Value* p = relative_frequency_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin.relative_frequency)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* RelativeInt64Histogram_Bin::release_relative_frequency() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin.relative_frequency)
  
  ::google::protobuf::Int64Value* temp = relative_frequency_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  relative_frequency_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* RelativeInt64Histogram_Bin::unsafe_arena_release_relative_frequency() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin.relative_frequency)
  
  ::google::protobuf::Int64Value* temp = relative_frequency_;
  relative_frequency_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* RelativeInt64Histogram_Bin::mutable_relative_frequency() {
  
  if (relative_frequency_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    relative_frequency_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin.relative_frequency)
  return relative_frequency_;
}
inline void RelativeInt64Histogram_Bin::set_allocated_relative_frequency(::google::protobuf::Int64Value* relative_frequency) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(relative_frequency_);
  }
  if (relative_frequency) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(relative_frequency)->GetArena();
    if (message_arena != submessage_arena) {
      relative_frequency = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, relative_frequency, submessage_arena);
    }
    
  } else {
    
  }
  relative_frequency_ = relative_frequency;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin.relative_frequency)
}

// -------------------------------------------------------------------

// RelativeInt64Histogram

// .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
inline bool RelativeInt64Histogram::has_timestamp_interval() const {
  return this != internal_default_instance() && timestamp_interval_ != NULL;
}
inline void RelativeInt64Histogram::clear_timestamp_interval() {
  if (GetArenaNoVirtual() == NULL && timestamp_interval_ != NULL) {
    delete timestamp_interval_;
  }
  timestamp_interval_ = NULL;
}
inline const ::sensoris::protobuf::types::base::TimestampInterval& RelativeInt64Histogram::_internal_timestamp_interval() const {
  return *timestamp_interval_;
}
inline const ::sensoris::protobuf::types::base::TimestampInterval& RelativeInt64Histogram::timestamp_interval() const {
  const ::sensoris::protobuf::types::base::TimestampInterval* p = timestamp_interval_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.RelativeInt64Histogram.timestamp_interval)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::types::base::TimestampInterval*>(
      &::sensoris::protobuf::types::base::_TimestampInterval_default_instance_);
}
inline ::sensoris::protobuf::types::base::TimestampInterval* RelativeInt64Histogram::release_timestamp_interval() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.RelativeInt64Histogram.timestamp_interval)
  
  ::sensoris::protobuf::types::base::TimestampInterval* temp = timestamp_interval_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  timestamp_interval_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::TimestampInterval* RelativeInt64Histogram::unsafe_arena_release_timestamp_interval() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.RelativeInt64Histogram.timestamp_interval)
  
  ::sensoris::protobuf::types::base::TimestampInterval* temp = timestamp_interval_;
  timestamp_interval_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::TimestampInterval* RelativeInt64Histogram::mutable_timestamp_interval() {
  
  if (timestamp_interval_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::TimestampInterval>(GetArenaNoVirtual());
    timestamp_interval_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.RelativeInt64Histogram.timestamp_interval)
  return timestamp_interval_;
}
inline void RelativeInt64Histogram::set_allocated_timestamp_interval(::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_interval_;
  }
  if (timestamp_interval) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(timestamp_interval);
    if (message_arena != submessage_arena) {
      timestamp_interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp_interval, submessage_arena);
    }
    
  } else {
    
  }
  timestamp_interval_ = timestamp_interval;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.RelativeInt64Histogram.timestamp_interval)
}

// .google.protobuf.Int64Value total_elements = 2;
inline bool RelativeInt64Histogram::has_total_elements() const {
  return this != internal_default_instance() && total_elements_ != NULL;
}
inline const ::google::protobuf::Int64Value& RelativeInt64Histogram::_internal_total_elements() const {
  return *total_elements_;
}
inline const ::google::protobuf::Int64Value& RelativeInt64Histogram::total_elements() const {
  const ::google::protobuf::Int64Value* p = total_elements_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.RelativeInt64Histogram.total_elements)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* RelativeInt64Histogram::release_total_elements() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.RelativeInt64Histogram.total_elements)
  
  ::google::protobuf::Int64Value* temp = total_elements_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  total_elements_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* RelativeInt64Histogram::unsafe_arena_release_total_elements() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.RelativeInt64Histogram.total_elements)
  
  ::google::protobuf::Int64Value* temp = total_elements_;
  total_elements_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* RelativeInt64Histogram::mutable_total_elements() {
  
  if (total_elements_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    total_elements_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.RelativeInt64Histogram.total_elements)
  return total_elements_;
}
inline void RelativeInt64Histogram::set_allocated_total_elements(::google::protobuf::Int64Value* total_elements) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(total_elements_);
  }
  if (total_elements) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(total_elements)->GetArena();
    if (message_arena != submessage_arena) {
      total_elements = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, total_elements, submessage_arena);
    }
    
  } else {
    
  }
  total_elements_ = total_elements;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.RelativeInt64Histogram.total_elements)
}

// repeated .sensoris.protobuf.types.base.RelativeInt64Histogram.Bin bin = 3;
inline int RelativeInt64Histogram::bin_size() const {
  return bin_.size();
}
inline void RelativeInt64Histogram::clear_bin() {
  bin_.Clear();
}
inline ::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin* RelativeInt64Histogram::mutable_bin(int index) {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.RelativeInt64Histogram.bin)
  return bin_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin >*
RelativeInt64Histogram::mutable_bin() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.types.base.RelativeInt64Histogram.bin)
  return &bin_;
}
inline const ::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin& RelativeInt64Histogram::bin(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.RelativeInt64Histogram.bin)
  return bin_.Get(index);
}
inline ::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin* RelativeInt64Histogram::add_bin() {
  // @@protoc_insertion_point(field_add:sensoris.protobuf.types.base.RelativeInt64Histogram.bin)
  return bin_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin >&
RelativeInt64Histogram::bin() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.types.base.RelativeInt64Histogram.bin)
  return bin_;
}

// .google.protobuf.Int64Value upper_endpoint_inclusive = 4;
inline bool RelativeInt64Histogram::has_upper_endpoint_inclusive() const {
  return this != internal_default_instance() && upper_endpoint_inclusive_ != NULL;
}
inline const ::google::protobuf::Int64Value& RelativeInt64Histogram::_internal_upper_endpoint_inclusive() const {
  return *upper_endpoint_inclusive_;
}
inline const ::google::protobuf::Int64Value& RelativeInt64Histogram::upper_endpoint_inclusive() const {
  const ::google::protobuf::Int64Value* p = upper_endpoint_inclusive_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.RelativeInt64Histogram.upper_endpoint_inclusive)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* RelativeInt64Histogram::release_upper_endpoint_inclusive() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.RelativeInt64Histogram.upper_endpoint_inclusive)
  
  ::google::protobuf::Int64Value* temp = upper_endpoint_inclusive_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  upper_endpoint_inclusive_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* RelativeInt64Histogram::unsafe_arena_release_upper_endpoint_inclusive() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.RelativeInt64Histogram.upper_endpoint_inclusive)
  
  ::google::protobuf::Int64Value* temp = upper_endpoint_inclusive_;
  upper_endpoint_inclusive_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* RelativeInt64Histogram::mutable_upper_endpoint_inclusive() {
  
  if (upper_endpoint_inclusive_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    upper_endpoint_inclusive_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.RelativeInt64Histogram.upper_endpoint_inclusive)
  return upper_endpoint_inclusive_;
}
inline void RelativeInt64Histogram::set_allocated_upper_endpoint_inclusive(::google::protobuf::Int64Value* upper_endpoint_inclusive) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(upper_endpoint_inclusive_);
  }
  if (upper_endpoint_inclusive) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(upper_endpoint_inclusive)->GetArena();
    if (message_arena != submessage_arena) {
      upper_endpoint_inclusive = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, upper_endpoint_inclusive, submessage_arena);
    }
    
  } else {
    
  }
  upper_endpoint_inclusive_ = upper_endpoint_inclusive;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.RelativeInt64Histogram.upper_endpoint_inclusive)
}

// -------------------------------------------------------------------

// Int64GaussianDistribution

// .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
inline bool Int64GaussianDistribution::has_timestamp_interval() const {
  return this != internal_default_instance() && timestamp_interval_ != NULL;
}
inline void Int64GaussianDistribution::clear_timestamp_interval() {
  if (GetArenaNoVirtual() == NULL && timestamp_interval_ != NULL) {
    delete timestamp_interval_;
  }
  timestamp_interval_ = NULL;
}
inline const ::sensoris::protobuf::types::base::TimestampInterval& Int64GaussianDistribution::_internal_timestamp_interval() const {
  return *timestamp_interval_;
}
inline const ::sensoris::protobuf::types::base::TimestampInterval& Int64GaussianDistribution::timestamp_interval() const {
  const ::sensoris::protobuf::types::base::TimestampInterval* p = timestamp_interval_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64GaussianDistribution.timestamp_interval)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::types::base::TimestampInterval*>(
      &::sensoris::protobuf::types::base::_TimestampInterval_default_instance_);
}
inline ::sensoris::protobuf::types::base::TimestampInterval* Int64GaussianDistribution::release_timestamp_interval() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64GaussianDistribution.timestamp_interval)
  
  ::sensoris::protobuf::types::base::TimestampInterval* temp = timestamp_interval_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  timestamp_interval_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::TimestampInterval* Int64GaussianDistribution::unsafe_arena_release_timestamp_interval() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64GaussianDistribution.timestamp_interval)
  
  ::sensoris::protobuf::types::base::TimestampInterval* temp = timestamp_interval_;
  timestamp_interval_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::TimestampInterval* Int64GaussianDistribution::mutable_timestamp_interval() {
  
  if (timestamp_interval_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::TimestampInterval>(GetArenaNoVirtual());
    timestamp_interval_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64GaussianDistribution.timestamp_interval)
  return timestamp_interval_;
}
inline void Int64GaussianDistribution::set_allocated_timestamp_interval(::sensoris::protobuf::types::base::TimestampInterval* timestamp_interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_interval_;
  }
  if (timestamp_interval) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(timestamp_interval);
    if (message_arena != submessage_arena) {
      timestamp_interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp_interval, submessage_arena);
    }
    
  } else {
    
  }
  timestamp_interval_ = timestamp_interval;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64GaussianDistribution.timestamp_interval)
}

// .google.protobuf.Int64Value mean = 2;
inline bool Int64GaussianDistribution::has_mean() const {
  return this != internal_default_instance() && mean_ != NULL;
}
inline const ::google::protobuf::Int64Value& Int64GaussianDistribution::_internal_mean() const {
  return *mean_;
}
inline const ::google::protobuf::Int64Value& Int64GaussianDistribution::mean() const {
  const ::google::protobuf::Int64Value* p = mean_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64GaussianDistribution.mean)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* Int64GaussianDistribution::release_mean() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64GaussianDistribution.mean)
  
  ::google::protobuf::Int64Value* temp = mean_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  mean_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64GaussianDistribution::unsafe_arena_release_mean() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64GaussianDistribution.mean)
  
  ::google::protobuf::Int64Value* temp = mean_;
  mean_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64GaussianDistribution::mutable_mean() {
  
  if (mean_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    mean_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64GaussianDistribution.mean)
  return mean_;
}
inline void Int64GaussianDistribution::set_allocated_mean(::google::protobuf::Int64Value* mean) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mean_);
  }
  if (mean) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(mean)->GetArena();
    if (message_arena != submessage_arena) {
      mean = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mean, submessage_arena);
    }
    
  } else {
    
  }
  mean_ = mean;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64GaussianDistribution.mean)
}

// .google.protobuf.Int64Value variance = 3;
inline bool Int64GaussianDistribution::has_variance() const {
  return this != internal_default_instance() && variance_ != NULL;
}
inline const ::google::protobuf::Int64Value& Int64GaussianDistribution::_internal_variance() const {
  return *variance_;
}
inline const ::google::protobuf::Int64Value& Int64GaussianDistribution::variance() const {
  const ::google::protobuf::Int64Value* p = variance_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64GaussianDistribution.variance)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* Int64GaussianDistribution::release_variance() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64GaussianDistribution.variance)
  
  ::google::protobuf::Int64Value* temp = variance_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  variance_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64GaussianDistribution::unsafe_arena_release_variance() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64GaussianDistribution.variance)
  
  ::google::protobuf::Int64Value* temp = variance_;
  variance_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64GaussianDistribution::mutable_variance() {
  
  if (variance_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    variance_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64GaussianDistribution.variance)
  return variance_;
}
inline void Int64GaussianDistribution::set_allocated_variance(::google::protobuf::Int64Value* variance) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(variance_);
  }
  if (variance) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(variance)->GetArena();
    if (message_arena != submessage_arena) {
      variance = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, variance, submessage_arena);
    }
    
  } else {
    
  }
  variance_ = variance;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64GaussianDistribution.variance)
}

// -------------------------------------------------------------------

// Int64Value

// int64 value = 1;
inline bool Int64Value::has_value() const {
  return value_oneof_case() == kValue;
}
inline void Int64Value::set_has_value() {
  _oneof_case_[0] = kValue;
}
inline void Int64Value::clear_value() {
  if (has_value()) {
    value_oneof_.value_ = GOOGLE_LONGLONG(0);
    clear_has_value_oneof();
  }
}
inline ::google::protobuf::int64 Int64Value::value() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64Value.value)
  if (has_value()) {
    return value_oneof_.value_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void Int64Value::set_value(::google::protobuf::int64 value) {
  if (!has_value()) {
    clear_value_oneof();
    set_has_value();
  }
  value_oneof_.value_ = value;
  // @@protoc_insertion_point(field_set:sensoris.protobuf.types.base.Int64Value.value)
}

// .sensoris.protobuf.types.base.Int64StatisticMeasure statistic_measure = 2;
inline bool Int64Value::has_statistic_measure() const {
  return value_oneof_case() == kStatisticMeasure;
}
inline void Int64Value::set_has_statistic_measure() {
  _oneof_case_[0] = kStatisticMeasure;
}
inline void Int64Value::clear_statistic_measure() {
  if (has_statistic_measure()) {
    if (GetArenaNoVirtual() == NULL) {
      delete value_oneof_.statistic_measure_;
    }
    clear_has_value_oneof();
  }
}
inline const ::sensoris::protobuf::types::base::Int64StatisticMeasure& Int64Value::_internal_statistic_measure() const {
  return *value_oneof_.statistic_measure_;
}
inline ::sensoris::protobuf::types::base::Int64StatisticMeasure* Int64Value::release_statistic_measure() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64Value.statistic_measure)
  if (has_statistic_measure()) {
    clear_has_value_oneof();
      ::sensoris::protobuf::types::base::Int64StatisticMeasure* temp = value_oneof_.statistic_measure_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    value_oneof_.statistic_measure_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::sensoris::protobuf::types::base::Int64StatisticMeasure& Int64Value::statistic_measure() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64Value.statistic_measure)
  return has_statistic_measure()
      ? *value_oneof_.statistic_measure_
      : *reinterpret_cast< ::sensoris::protobuf::types::base::Int64StatisticMeasure*>(&::sensoris::protobuf::types::base::_Int64StatisticMeasure_default_instance_);
}
inline ::sensoris::protobuf::types::base::Int64StatisticMeasure* Int64Value::unsafe_arena_release_statistic_measure() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64Value.statistic_measure)
  if (has_statistic_measure()) {
    clear_has_value_oneof();
    ::sensoris::protobuf::types::base::Int64StatisticMeasure* temp = value_oneof_.statistic_measure_;
    value_oneof_.statistic_measure_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Int64Value::unsafe_arena_set_allocated_statistic_measure(::sensoris::protobuf::types::base::Int64StatisticMeasure* statistic_measure) {
  clear_value_oneof();
  if (statistic_measure) {
    set_has_statistic_measure();
    value_oneof_.statistic_measure_ = statistic_measure;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64Value.statistic_measure)
}
inline ::sensoris::protobuf::types::base::Int64StatisticMeasure* Int64Value::mutable_statistic_measure() {
  if (!has_statistic_measure()) {
    clear_value_oneof();
    set_has_statistic_measure();
    value_oneof_.statistic_measure_ = CreateMaybeMessage< ::sensoris::protobuf::types::base::Int64StatisticMeasure >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64Value.statistic_measure)
  return value_oneof_.statistic_measure_;
}

// .sensoris.protobuf.types.base.AbsoluteInt64Histogram absolute_histogram = 3;
inline bool Int64Value::has_absolute_histogram() const {
  return value_oneof_case() == kAbsoluteHistogram;
}
inline void Int64Value::set_has_absolute_histogram() {
  _oneof_case_[0] = kAbsoluteHistogram;
}
inline void Int64Value::clear_absolute_histogram() {
  if (has_absolute_histogram()) {
    if (GetArenaNoVirtual() == NULL) {
      delete value_oneof_.absolute_histogram_;
    }
    clear_has_value_oneof();
  }
}
inline const ::sensoris::protobuf::types::base::AbsoluteInt64Histogram& Int64Value::_internal_absolute_histogram() const {
  return *value_oneof_.absolute_histogram_;
}
inline ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* Int64Value::release_absolute_histogram() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64Value.absolute_histogram)
  if (has_absolute_histogram()) {
    clear_has_value_oneof();
      ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* temp = value_oneof_.absolute_histogram_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    value_oneof_.absolute_histogram_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::sensoris::protobuf::types::base::AbsoluteInt64Histogram& Int64Value::absolute_histogram() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64Value.absolute_histogram)
  return has_absolute_histogram()
      ? *value_oneof_.absolute_histogram_
      : *reinterpret_cast< ::sensoris::protobuf::types::base::AbsoluteInt64Histogram*>(&::sensoris::protobuf::types::base::_AbsoluteInt64Histogram_default_instance_);
}
inline ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* Int64Value::unsafe_arena_release_absolute_histogram() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64Value.absolute_histogram)
  if (has_absolute_histogram()) {
    clear_has_value_oneof();
    ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* temp = value_oneof_.absolute_histogram_;
    value_oneof_.absolute_histogram_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Int64Value::unsafe_arena_set_allocated_absolute_histogram(::sensoris::protobuf::types::base::AbsoluteInt64Histogram* absolute_histogram) {
  clear_value_oneof();
  if (absolute_histogram) {
    set_has_absolute_histogram();
    value_oneof_.absolute_histogram_ = absolute_histogram;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64Value.absolute_histogram)
}
inline ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* Int64Value::mutable_absolute_histogram() {
  if (!has_absolute_histogram()) {
    clear_value_oneof();
    set_has_absolute_histogram();
    value_oneof_.absolute_histogram_ = CreateMaybeMessage< ::sensoris::protobuf::types::base::AbsoluteInt64Histogram >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64Value.absolute_histogram)
  return value_oneof_.absolute_histogram_;
}

// .sensoris.protobuf.types.base.RelativeInt64Histogram relative_histogram = 4;
inline bool Int64Value::has_relative_histogram() const {
  return value_oneof_case() == kRelativeHistogram;
}
inline void Int64Value::set_has_relative_histogram() {
  _oneof_case_[0] = kRelativeHistogram;
}
inline void Int64Value::clear_relative_histogram() {
  if (has_relative_histogram()) {
    if (GetArenaNoVirtual() == NULL) {
      delete value_oneof_.relative_histogram_;
    }
    clear_has_value_oneof();
  }
}
inline const ::sensoris::protobuf::types::base::RelativeInt64Histogram& Int64Value::_internal_relative_histogram() const {
  return *value_oneof_.relative_histogram_;
}
inline ::sensoris::protobuf::types::base::RelativeInt64Histogram* Int64Value::release_relative_histogram() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64Value.relative_histogram)
  if (has_relative_histogram()) {
    clear_has_value_oneof();
      ::sensoris::protobuf::types::base::RelativeInt64Histogram* temp = value_oneof_.relative_histogram_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    value_oneof_.relative_histogram_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::sensoris::protobuf::types::base::RelativeInt64Histogram& Int64Value::relative_histogram() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64Value.relative_histogram)
  return has_relative_histogram()
      ? *value_oneof_.relative_histogram_
      : *reinterpret_cast< ::sensoris::protobuf::types::base::RelativeInt64Histogram*>(&::sensoris::protobuf::types::base::_RelativeInt64Histogram_default_instance_);
}
inline ::sensoris::protobuf::types::base::RelativeInt64Histogram* Int64Value::unsafe_arena_release_relative_histogram() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64Value.relative_histogram)
  if (has_relative_histogram()) {
    clear_has_value_oneof();
    ::sensoris::protobuf::types::base::RelativeInt64Histogram* temp = value_oneof_.relative_histogram_;
    value_oneof_.relative_histogram_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Int64Value::unsafe_arena_set_allocated_relative_histogram(::sensoris::protobuf::types::base::RelativeInt64Histogram* relative_histogram) {
  clear_value_oneof();
  if (relative_histogram) {
    set_has_relative_histogram();
    value_oneof_.relative_histogram_ = relative_histogram;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64Value.relative_histogram)
}
inline ::sensoris::protobuf::types::base::RelativeInt64Histogram* Int64Value::mutable_relative_histogram() {
  if (!has_relative_histogram()) {
    clear_value_oneof();
    set_has_relative_histogram();
    value_oneof_.relative_histogram_ = CreateMaybeMessage< ::sensoris::protobuf::types::base::RelativeInt64Histogram >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64Value.relative_histogram)
  return value_oneof_.relative_histogram_;
}

// .sensoris.protobuf.types.base.Int64GaussianDistribution gaussian_distribution = 5;
inline bool Int64Value::has_gaussian_distribution() const {
  return value_oneof_case() == kGaussianDistribution;
}
inline void Int64Value::set_has_gaussian_distribution() {
  _oneof_case_[0] = kGaussianDistribution;
}
inline void Int64Value::clear_gaussian_distribution() {
  if (has_gaussian_distribution()) {
    if (GetArenaNoVirtual() == NULL) {
      delete value_oneof_.gaussian_distribution_;
    }
    clear_has_value_oneof();
  }
}
inline const ::sensoris::protobuf::types::base::Int64GaussianDistribution& Int64Value::_internal_gaussian_distribution() const {
  return *value_oneof_.gaussian_distribution_;
}
inline ::sensoris::protobuf::types::base::Int64GaussianDistribution* Int64Value::release_gaussian_distribution() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64Value.gaussian_distribution)
  if (has_gaussian_distribution()) {
    clear_has_value_oneof();
      ::sensoris::protobuf::types::base::Int64GaussianDistribution* temp = value_oneof_.gaussian_distribution_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    value_oneof_.gaussian_distribution_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::sensoris::protobuf::types::base::Int64GaussianDistribution& Int64Value::gaussian_distribution() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64Value.gaussian_distribution)
  return has_gaussian_distribution()
      ? *value_oneof_.gaussian_distribution_
      : *reinterpret_cast< ::sensoris::protobuf::types::base::Int64GaussianDistribution*>(&::sensoris::protobuf::types::base::_Int64GaussianDistribution_default_instance_);
}
inline ::sensoris::protobuf::types::base::Int64GaussianDistribution* Int64Value::unsafe_arena_release_gaussian_distribution() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64Value.gaussian_distribution)
  if (has_gaussian_distribution()) {
    clear_has_value_oneof();
    ::sensoris::protobuf::types::base::Int64GaussianDistribution* temp = value_oneof_.gaussian_distribution_;
    value_oneof_.gaussian_distribution_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Int64Value::unsafe_arena_set_allocated_gaussian_distribution(::sensoris::protobuf::types::base::Int64GaussianDistribution* gaussian_distribution) {
  clear_value_oneof();
  if (gaussian_distribution) {
    set_has_gaussian_distribution();
    value_oneof_.gaussian_distribution_ = gaussian_distribution;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64Value.gaussian_distribution)
}
inline ::sensoris::protobuf::types::base::Int64GaussianDistribution* Int64Value::mutable_gaussian_distribution() {
  if (!has_gaussian_distribution()) {
    clear_value_oneof();
    set_has_gaussian_distribution();
    value_oneof_.gaussian_distribution_ = CreateMaybeMessage< ::sensoris::protobuf::types::base::Int64GaussianDistribution >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64Value.gaussian_distribution)
  return value_oneof_.gaussian_distribution_;
}

inline bool Int64Value::has_value_oneof() const {
  return value_oneof_case() != VALUE_ONEOF_NOT_SET;
}
inline void Int64Value::clear_has_value_oneof() {
  _oneof_case_[0] = VALUE_ONEOF_NOT_SET;
}
inline Int64Value::ValueOneofCase Int64Value::value_oneof_case() const {
  return Int64Value::ValueOneofCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Int64ValueAndAccuracy_ValueAndAccuracy

// int64 value = 1;
inline void Int64ValueAndAccuracy_ValueAndAccuracy::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Int64ValueAndAccuracy_ValueAndAccuracy::value() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy.value)
  return value_;
}
inline void Int64ValueAndAccuracy_ValueAndAccuracy::set_value(::google::protobuf::int64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy.value)
}

// .google.protobuf.Int64Value accuracy = 2;
inline bool Int64ValueAndAccuracy_ValueAndAccuracy::has_accuracy() const {
  return this != internal_default_instance() && accuracy_ != NULL;
}
inline const ::google::protobuf::Int64Value& Int64ValueAndAccuracy_ValueAndAccuracy::_internal_accuracy() const {
  return *accuracy_;
}
inline const ::google::protobuf::Int64Value& Int64ValueAndAccuracy_ValueAndAccuracy::accuracy() const {
  const ::google::protobuf::Int64Value* p = accuracy_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy.accuracy)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* Int64ValueAndAccuracy_ValueAndAccuracy::release_accuracy() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy.accuracy)
  
  ::google::protobuf::Int64Value* temp = accuracy_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  accuracy_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64ValueAndAccuracy_ValueAndAccuracy::unsafe_arena_release_accuracy() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy.accuracy)
  
  ::google::protobuf::Int64Value* temp = accuracy_;
  accuracy_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64ValueAndAccuracy_ValueAndAccuracy::mutable_accuracy() {
  
  if (accuracy_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    accuracy_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy.accuracy)
  return accuracy_;
}
inline void Int64ValueAndAccuracy_ValueAndAccuracy::set_allocated_accuracy(::google::protobuf::Int64Value* accuracy) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(accuracy_);
  }
  if (accuracy) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(accuracy)->GetArena();
    if (message_arena != submessage_arena) {
      accuracy = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, accuracy, submessage_arena);
    }
    
  } else {
    
  }
  accuracy_ = accuracy;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy.accuracy)
}

// -------------------------------------------------------------------

// Int64ValueAndAccuracy

// .sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy value_and_accuracy = 1;
inline bool Int64ValueAndAccuracy::has_value_and_accuracy() const {
  return value_oneof_case() == kValueAndAccuracy;
}
inline void Int64ValueAndAccuracy::set_has_value_and_accuracy() {
  _oneof_case_[0] = kValueAndAccuracy;
}
inline void Int64ValueAndAccuracy::clear_value_and_accuracy() {
  if (has_value_and_accuracy()) {
    if (GetArenaNoVirtual() == NULL) {
      delete value_oneof_.value_and_accuracy_;
    }
    clear_has_value_oneof();
  }
}
inline const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy& Int64ValueAndAccuracy::_internal_value_and_accuracy() const {
  return *value_oneof_.value_and_accuracy_;
}
inline ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy* Int64ValueAndAccuracy::release_value_and_accuracy() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64ValueAndAccuracy.value_and_accuracy)
  if (has_value_and_accuracy()) {
    clear_has_value_oneof();
      ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy* temp = value_oneof_.value_and_accuracy_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    value_oneof_.value_and_accuracy_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy& Int64ValueAndAccuracy::value_and_accuracy() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64ValueAndAccuracy.value_and_accuracy)
  return has_value_and_accuracy()
      ? *value_oneof_.value_and_accuracy_
      : *reinterpret_cast< ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy*>(&::sensoris::protobuf::types::base::_Int64ValueAndAccuracy_ValueAndAccuracy_default_instance_);
}
inline ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy* Int64ValueAndAccuracy::unsafe_arena_release_value_and_accuracy() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64ValueAndAccuracy.value_and_accuracy)
  if (has_value_and_accuracy()) {
    clear_has_value_oneof();
    ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy* temp = value_oneof_.value_and_accuracy_;
    value_oneof_.value_and_accuracy_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Int64ValueAndAccuracy::unsafe_arena_set_allocated_value_and_accuracy(::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy* value_and_accuracy) {
  clear_value_oneof();
  if (value_and_accuracy) {
    set_has_value_and_accuracy();
    value_oneof_.value_and_accuracy_ = value_and_accuracy;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64ValueAndAccuracy.value_and_accuracy)
}
inline ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy* Int64ValueAndAccuracy::mutable_value_and_accuracy() {
  if (!has_value_and_accuracy()) {
    clear_value_oneof();
    set_has_value_and_accuracy();
    value_oneof_.value_and_accuracy_ = CreateMaybeMessage< ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64ValueAndAccuracy.value_and_accuracy)
  return value_oneof_.value_and_accuracy_;
}

// .sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy statistic_measure_and_accuracy = 2;
inline bool Int64ValueAndAccuracy::has_statistic_measure_and_accuracy() const {
  return value_oneof_case() == kStatisticMeasureAndAccuracy;
}
inline void Int64ValueAndAccuracy::set_has_statistic_measure_and_accuracy() {
  _oneof_case_[0] = kStatisticMeasureAndAccuracy;
}
inline void Int64ValueAndAccuracy::clear_statistic_measure_and_accuracy() {
  if (has_statistic_measure_and_accuracy()) {
    if (GetArenaNoVirtual() == NULL) {
      delete value_oneof_.statistic_measure_and_accuracy_;
    }
    clear_has_value_oneof();
  }
}
inline const ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy& Int64ValueAndAccuracy::_internal_statistic_measure_and_accuracy() const {
  return *value_oneof_.statistic_measure_and_accuracy_;
}
inline ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy* Int64ValueAndAccuracy::release_statistic_measure_and_accuracy() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64ValueAndAccuracy.statistic_measure_and_accuracy)
  if (has_statistic_measure_and_accuracy()) {
    clear_has_value_oneof();
      ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy* temp = value_oneof_.statistic_measure_and_accuracy_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    value_oneof_.statistic_measure_and_accuracy_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy& Int64ValueAndAccuracy::statistic_measure_and_accuracy() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64ValueAndAccuracy.statistic_measure_and_accuracy)
  return has_statistic_measure_and_accuracy()
      ? *value_oneof_.statistic_measure_and_accuracy_
      : *reinterpret_cast< ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy*>(&::sensoris::protobuf::types::base::_Int64StatisticMeasureAndAccuracy_default_instance_);
}
inline ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy* Int64ValueAndAccuracy::unsafe_arena_release_statistic_measure_and_accuracy() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64ValueAndAccuracy.statistic_measure_and_accuracy)
  if (has_statistic_measure_and_accuracy()) {
    clear_has_value_oneof();
    ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy* temp = value_oneof_.statistic_measure_and_accuracy_;
    value_oneof_.statistic_measure_and_accuracy_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Int64ValueAndAccuracy::unsafe_arena_set_allocated_statistic_measure_and_accuracy(::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy* statistic_measure_and_accuracy) {
  clear_value_oneof();
  if (statistic_measure_and_accuracy) {
    set_has_statistic_measure_and_accuracy();
    value_oneof_.statistic_measure_and_accuracy_ = statistic_measure_and_accuracy;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64ValueAndAccuracy.statistic_measure_and_accuracy)
}
inline ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy* Int64ValueAndAccuracy::mutable_statistic_measure_and_accuracy() {
  if (!has_statistic_measure_and_accuracy()) {
    clear_value_oneof();
    set_has_statistic_measure_and_accuracy();
    value_oneof_.statistic_measure_and_accuracy_ = CreateMaybeMessage< ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64ValueAndAccuracy.statistic_measure_and_accuracy)
  return value_oneof_.statistic_measure_and_accuracy_;
}

// .sensoris.protobuf.types.base.AbsoluteInt64Histogram absolute_histogram = 3;
inline bool Int64ValueAndAccuracy::has_absolute_histogram() const {
  return value_oneof_case() == kAbsoluteHistogram;
}
inline void Int64ValueAndAccuracy::set_has_absolute_histogram() {
  _oneof_case_[0] = kAbsoluteHistogram;
}
inline void Int64ValueAndAccuracy::clear_absolute_histogram() {
  if (has_absolute_histogram()) {
    if (GetArenaNoVirtual() == NULL) {
      delete value_oneof_.absolute_histogram_;
    }
    clear_has_value_oneof();
  }
}
inline const ::sensoris::protobuf::types::base::AbsoluteInt64Histogram& Int64ValueAndAccuracy::_internal_absolute_histogram() const {
  return *value_oneof_.absolute_histogram_;
}
inline ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* Int64ValueAndAccuracy::release_absolute_histogram() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64ValueAndAccuracy.absolute_histogram)
  if (has_absolute_histogram()) {
    clear_has_value_oneof();
      ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* temp = value_oneof_.absolute_histogram_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    value_oneof_.absolute_histogram_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::sensoris::protobuf::types::base::AbsoluteInt64Histogram& Int64ValueAndAccuracy::absolute_histogram() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64ValueAndAccuracy.absolute_histogram)
  return has_absolute_histogram()
      ? *value_oneof_.absolute_histogram_
      : *reinterpret_cast< ::sensoris::protobuf::types::base::AbsoluteInt64Histogram*>(&::sensoris::protobuf::types::base::_AbsoluteInt64Histogram_default_instance_);
}
inline ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* Int64ValueAndAccuracy::unsafe_arena_release_absolute_histogram() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64ValueAndAccuracy.absolute_histogram)
  if (has_absolute_histogram()) {
    clear_has_value_oneof();
    ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* temp = value_oneof_.absolute_histogram_;
    value_oneof_.absolute_histogram_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Int64ValueAndAccuracy::unsafe_arena_set_allocated_absolute_histogram(::sensoris::protobuf::types::base::AbsoluteInt64Histogram* absolute_histogram) {
  clear_value_oneof();
  if (absolute_histogram) {
    set_has_absolute_histogram();
    value_oneof_.absolute_histogram_ = absolute_histogram;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64ValueAndAccuracy.absolute_histogram)
}
inline ::sensoris::protobuf::types::base::AbsoluteInt64Histogram* Int64ValueAndAccuracy::mutable_absolute_histogram() {
  if (!has_absolute_histogram()) {
    clear_value_oneof();
    set_has_absolute_histogram();
    value_oneof_.absolute_histogram_ = CreateMaybeMessage< ::sensoris::protobuf::types::base::AbsoluteInt64Histogram >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64ValueAndAccuracy.absolute_histogram)
  return value_oneof_.absolute_histogram_;
}

// .sensoris.protobuf.types.base.RelativeInt64Histogram relative_histogram = 4;
inline bool Int64ValueAndAccuracy::has_relative_histogram() const {
  return value_oneof_case() == kRelativeHistogram;
}
inline void Int64ValueAndAccuracy::set_has_relative_histogram() {
  _oneof_case_[0] = kRelativeHistogram;
}
inline void Int64ValueAndAccuracy::clear_relative_histogram() {
  if (has_relative_histogram()) {
    if (GetArenaNoVirtual() == NULL) {
      delete value_oneof_.relative_histogram_;
    }
    clear_has_value_oneof();
  }
}
inline const ::sensoris::protobuf::types::base::RelativeInt64Histogram& Int64ValueAndAccuracy::_internal_relative_histogram() const {
  return *value_oneof_.relative_histogram_;
}
inline ::sensoris::protobuf::types::base::RelativeInt64Histogram* Int64ValueAndAccuracy::release_relative_histogram() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64ValueAndAccuracy.relative_histogram)
  if (has_relative_histogram()) {
    clear_has_value_oneof();
      ::sensoris::protobuf::types::base::RelativeInt64Histogram* temp = value_oneof_.relative_histogram_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    value_oneof_.relative_histogram_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::sensoris::protobuf::types::base::RelativeInt64Histogram& Int64ValueAndAccuracy::relative_histogram() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64ValueAndAccuracy.relative_histogram)
  return has_relative_histogram()
      ? *value_oneof_.relative_histogram_
      : *reinterpret_cast< ::sensoris::protobuf::types::base::RelativeInt64Histogram*>(&::sensoris::protobuf::types::base::_RelativeInt64Histogram_default_instance_);
}
inline ::sensoris::protobuf::types::base::RelativeInt64Histogram* Int64ValueAndAccuracy::unsafe_arena_release_relative_histogram() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64ValueAndAccuracy.relative_histogram)
  if (has_relative_histogram()) {
    clear_has_value_oneof();
    ::sensoris::protobuf::types::base::RelativeInt64Histogram* temp = value_oneof_.relative_histogram_;
    value_oneof_.relative_histogram_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Int64ValueAndAccuracy::unsafe_arena_set_allocated_relative_histogram(::sensoris::protobuf::types::base::RelativeInt64Histogram* relative_histogram) {
  clear_value_oneof();
  if (relative_histogram) {
    set_has_relative_histogram();
    value_oneof_.relative_histogram_ = relative_histogram;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64ValueAndAccuracy.relative_histogram)
}
inline ::sensoris::protobuf::types::base::RelativeInt64Histogram* Int64ValueAndAccuracy::mutable_relative_histogram() {
  if (!has_relative_histogram()) {
    clear_value_oneof();
    set_has_relative_histogram();
    value_oneof_.relative_histogram_ = CreateMaybeMessage< ::sensoris::protobuf::types::base::RelativeInt64Histogram >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64ValueAndAccuracy.relative_histogram)
  return value_oneof_.relative_histogram_;
}

// .sensoris.protobuf.types.base.Int64GaussianDistribution gaussian_distribution = 5;
inline bool Int64ValueAndAccuracy::has_gaussian_distribution() const {
  return value_oneof_case() == kGaussianDistribution;
}
inline void Int64ValueAndAccuracy::set_has_gaussian_distribution() {
  _oneof_case_[0] = kGaussianDistribution;
}
inline void Int64ValueAndAccuracy::clear_gaussian_distribution() {
  if (has_gaussian_distribution()) {
    if (GetArenaNoVirtual() == NULL) {
      delete value_oneof_.gaussian_distribution_;
    }
    clear_has_value_oneof();
  }
}
inline const ::sensoris::protobuf::types::base::Int64GaussianDistribution& Int64ValueAndAccuracy::_internal_gaussian_distribution() const {
  return *value_oneof_.gaussian_distribution_;
}
inline ::sensoris::protobuf::types::base::Int64GaussianDistribution* Int64ValueAndAccuracy::release_gaussian_distribution() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64ValueAndAccuracy.gaussian_distribution)
  if (has_gaussian_distribution()) {
    clear_has_value_oneof();
      ::sensoris::protobuf::types::base::Int64GaussianDistribution* temp = value_oneof_.gaussian_distribution_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    value_oneof_.gaussian_distribution_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::sensoris::protobuf::types::base::Int64GaussianDistribution& Int64ValueAndAccuracy::gaussian_distribution() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64ValueAndAccuracy.gaussian_distribution)
  return has_gaussian_distribution()
      ? *value_oneof_.gaussian_distribution_
      : *reinterpret_cast< ::sensoris::protobuf::types::base::Int64GaussianDistribution*>(&::sensoris::protobuf::types::base::_Int64GaussianDistribution_default_instance_);
}
inline ::sensoris::protobuf::types::base::Int64GaussianDistribution* Int64ValueAndAccuracy::unsafe_arena_release_gaussian_distribution() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64ValueAndAccuracy.gaussian_distribution)
  if (has_gaussian_distribution()) {
    clear_has_value_oneof();
    ::sensoris::protobuf::types::base::Int64GaussianDistribution* temp = value_oneof_.gaussian_distribution_;
    value_oneof_.gaussian_distribution_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Int64ValueAndAccuracy::unsafe_arena_set_allocated_gaussian_distribution(::sensoris::protobuf::types::base::Int64GaussianDistribution* gaussian_distribution) {
  clear_value_oneof();
  if (gaussian_distribution) {
    set_has_gaussian_distribution();
    value_oneof_.gaussian_distribution_ = gaussian_distribution;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.base.Int64ValueAndAccuracy.gaussian_distribution)
}
inline ::sensoris::protobuf::types::base::Int64GaussianDistribution* Int64ValueAndAccuracy::mutable_gaussian_distribution() {
  if (!has_gaussian_distribution()) {
    clear_value_oneof();
    set_has_gaussian_distribution();
    value_oneof_.gaussian_distribution_ = CreateMaybeMessage< ::sensoris::protobuf::types::base::Int64GaussianDistribution >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64ValueAndAccuracy.gaussian_distribution)
  return value_oneof_.gaussian_distribution_;
}

inline bool Int64ValueAndAccuracy::has_value_oneof() const {
  return value_oneof_case() != VALUE_ONEOF_NOT_SET;
}
inline void Int64ValueAndAccuracy::clear_has_value_oneof() {
  _oneof_case_[0] = VALUE_ONEOF_NOT_SET;
}
inline Int64ValueAndAccuracy::ValueOneofCase Int64ValueAndAccuracy::value_oneof_case() const {
  return Int64ValueAndAccuracy::ValueOneofCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Confidence

// int64 value = 1 [(.sensoris.protobuf.types.base.exponent) = 0];
inline void Confidence::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Confidence::value() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Confidence.value)
  return value_;
}
inline void Confidence::set_value(::google::protobuf::int64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:sensoris.protobuf.types.base.Confidence.value)
}

// -------------------------------------------------------------------

// CountAndConfidence

// .google.protobuf.Int64Value count = 1;
inline bool CountAndConfidence::has_count() const {
  return this != internal_default_instance() && count_ != NULL;
}
inline const ::google::protobuf::Int64Value& CountAndConfidence::_internal_count() const {
  return *count_;
}
inline const ::google::protobuf::Int64Value& CountAndConfidence::count() const {
  const ::google::protobuf::Int64Value* p = count_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.CountAndConfidence.count)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* CountAndConfidence::release_count() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.CountAndConfidence.count)
  
  ::google::protobuf::Int64Value* temp = count_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  count_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* CountAndConfidence::unsafe_arena_release_count() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.CountAndConfidence.count)
  
  ::google::protobuf::Int64Value* temp = count_;
  count_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* CountAndConfidence::mutable_count() {
  
  if (count_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    count_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.CountAndConfidence.count)
  return count_;
}
inline void CountAndConfidence::set_allocated_count(::google::protobuf::Int64Value* count) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(count_);
  }
  if (count) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(count)->GetArena();
    if (message_arena != submessage_arena) {
      count = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, count, submessage_arena);
    }
    
  } else {
    
  }
  count_ = count;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.CountAndConfidence.count)
}

// .sensoris.protobuf.types.base.Confidence confidence = 2;
inline bool CountAndConfidence::has_confidence() const {
  return this != internal_default_instance() && confidence_ != NULL;
}
inline void CountAndConfidence::clear_confidence() {
  if (GetArenaNoVirtual() == NULL && confidence_ != NULL) {
    delete confidence_;
  }
  confidence_ = NULL;
}
inline const ::sensoris::protobuf::types::base::Confidence& CountAndConfidence::_internal_confidence() const {
  return *confidence_;
}
inline const ::sensoris::protobuf::types::base::Confidence& CountAndConfidence::confidence() const {
  const ::sensoris::protobuf::types::base::Confidence* p = confidence_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.CountAndConfidence.confidence)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::types::base::Confidence*>(
      &::sensoris::protobuf::types::base::_Confidence_default_instance_);
}
inline ::sensoris::protobuf::types::base::Confidence* CountAndConfidence::release_confidence() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.CountAndConfidence.confidence)
  
  ::sensoris::protobuf::types::base::Confidence* temp = confidence_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  confidence_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Confidence* CountAndConfidence::unsafe_arena_release_confidence() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.CountAndConfidence.confidence)
  
  ::sensoris::protobuf::types::base::Confidence* temp = confidence_;
  confidence_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Confidence* CountAndConfidence::mutable_confidence() {
  
  if (confidence_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::Confidence>(GetArenaNoVirtual());
    confidence_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.CountAndConfidence.confidence)
  return confidence_;
}
inline void CountAndConfidence::set_allocated_confidence(::sensoris::protobuf::types::base::Confidence* confidence) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete confidence_;
  }
  if (confidence) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(confidence);
    if (message_arena != submessage_arena) {
      confidence = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, confidence, submessage_arena);
    }
    
  } else {
    
  }
  confidence_ = confidence;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.CountAndConfidence.confidence)
}

// -------------------------------------------------------------------

// Int64Matrix3x3

// .google.protobuf.Int64Value a11 = 1;
inline bool Int64Matrix3x3::has_a11() const {
  return this != internal_default_instance() && a11_ != NULL;
}
inline const ::google::protobuf::Int64Value& Int64Matrix3x3::_internal_a11() const {
  return *a11_;
}
inline const ::google::protobuf::Int64Value& Int64Matrix3x3::a11() const {
  const ::google::protobuf::Int64Value* p = a11_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64Matrix3x3.a11)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::release_a11() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64Matrix3x3.a11)
  
  ::google::protobuf::Int64Value* temp = a11_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  a11_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::unsafe_arena_release_a11() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64Matrix3x3.a11)
  
  ::google::protobuf::Int64Value* temp = a11_;
  a11_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::mutable_a11() {
  
  if (a11_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    a11_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64Matrix3x3.a11)
  return a11_;
}
inline void Int64Matrix3x3::set_allocated_a11(::google::protobuf::Int64Value* a11) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(a11_);
  }
  if (a11) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(a11)->GetArena();
    if (message_arena != submessage_arena) {
      a11 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, a11, submessage_arena);
    }
    
  } else {
    
  }
  a11_ = a11;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64Matrix3x3.a11)
}

// .google.protobuf.Int64Value a12 = 2;
inline bool Int64Matrix3x3::has_a12() const {
  return this != internal_default_instance() && a12_ != NULL;
}
inline const ::google::protobuf::Int64Value& Int64Matrix3x3::_internal_a12() const {
  return *a12_;
}
inline const ::google::protobuf::Int64Value& Int64Matrix3x3::a12() const {
  const ::google::protobuf::Int64Value* p = a12_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64Matrix3x3.a12)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::release_a12() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64Matrix3x3.a12)
  
  ::google::protobuf::Int64Value* temp = a12_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  a12_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::unsafe_arena_release_a12() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64Matrix3x3.a12)
  
  ::google::protobuf::Int64Value* temp = a12_;
  a12_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::mutable_a12() {
  
  if (a12_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    a12_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64Matrix3x3.a12)
  return a12_;
}
inline void Int64Matrix3x3::set_allocated_a12(::google::protobuf::Int64Value* a12) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(a12_);
  }
  if (a12) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(a12)->GetArena();
    if (message_arena != submessage_arena) {
      a12 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, a12, submessage_arena);
    }
    
  } else {
    
  }
  a12_ = a12;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64Matrix3x3.a12)
}

// .google.protobuf.Int64Value a13 = 3;
inline bool Int64Matrix3x3::has_a13() const {
  return this != internal_default_instance() && a13_ != NULL;
}
inline const ::google::protobuf::Int64Value& Int64Matrix3x3::_internal_a13() const {
  return *a13_;
}
inline const ::google::protobuf::Int64Value& Int64Matrix3x3::a13() const {
  const ::google::protobuf::Int64Value* p = a13_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64Matrix3x3.a13)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::release_a13() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64Matrix3x3.a13)
  
  ::google::protobuf::Int64Value* temp = a13_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  a13_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::unsafe_arena_release_a13() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64Matrix3x3.a13)
  
  ::google::protobuf::Int64Value* temp = a13_;
  a13_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::mutable_a13() {
  
  if (a13_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    a13_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64Matrix3x3.a13)
  return a13_;
}
inline void Int64Matrix3x3::set_allocated_a13(::google::protobuf::Int64Value* a13) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(a13_);
  }
  if (a13) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(a13)->GetArena();
    if (message_arena != submessage_arena) {
      a13 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, a13, submessage_arena);
    }
    
  } else {
    
  }
  a13_ = a13;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64Matrix3x3.a13)
}

// .google.protobuf.Int64Value a21 = 4;
inline bool Int64Matrix3x3::has_a21() const {
  return this != internal_default_instance() && a21_ != NULL;
}
inline const ::google::protobuf::Int64Value& Int64Matrix3x3::_internal_a21() const {
  return *a21_;
}
inline const ::google::protobuf::Int64Value& Int64Matrix3x3::a21() const {
  const ::google::protobuf::Int64Value* p = a21_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64Matrix3x3.a21)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::release_a21() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64Matrix3x3.a21)
  
  ::google::protobuf::Int64Value* temp = a21_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  a21_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::unsafe_arena_release_a21() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64Matrix3x3.a21)
  
  ::google::protobuf::Int64Value* temp = a21_;
  a21_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::mutable_a21() {
  
  if (a21_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    a21_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64Matrix3x3.a21)
  return a21_;
}
inline void Int64Matrix3x3::set_allocated_a21(::google::protobuf::Int64Value* a21) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(a21_);
  }
  if (a21) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(a21)->GetArena();
    if (message_arena != submessage_arena) {
      a21 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, a21, submessage_arena);
    }
    
  } else {
    
  }
  a21_ = a21;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64Matrix3x3.a21)
}

// .google.protobuf.Int64Value a22 = 5;
inline bool Int64Matrix3x3::has_a22() const {
  return this != internal_default_instance() && a22_ != NULL;
}
inline const ::google::protobuf::Int64Value& Int64Matrix3x3::_internal_a22() const {
  return *a22_;
}
inline const ::google::protobuf::Int64Value& Int64Matrix3x3::a22() const {
  const ::google::protobuf::Int64Value* p = a22_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64Matrix3x3.a22)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::release_a22() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64Matrix3x3.a22)
  
  ::google::protobuf::Int64Value* temp = a22_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  a22_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::unsafe_arena_release_a22() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64Matrix3x3.a22)
  
  ::google::protobuf::Int64Value* temp = a22_;
  a22_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::mutable_a22() {
  
  if (a22_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    a22_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64Matrix3x3.a22)
  return a22_;
}
inline void Int64Matrix3x3::set_allocated_a22(::google::protobuf::Int64Value* a22) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(a22_);
  }
  if (a22) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(a22)->GetArena();
    if (message_arena != submessage_arena) {
      a22 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, a22, submessage_arena);
    }
    
  } else {
    
  }
  a22_ = a22;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64Matrix3x3.a22)
}

// .google.protobuf.Int64Value a23 = 6;
inline bool Int64Matrix3x3::has_a23() const {
  return this != internal_default_instance() && a23_ != NULL;
}
inline const ::google::protobuf::Int64Value& Int64Matrix3x3::_internal_a23() const {
  return *a23_;
}
inline const ::google::protobuf::Int64Value& Int64Matrix3x3::a23() const {
  const ::google::protobuf::Int64Value* p = a23_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64Matrix3x3.a23)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::release_a23() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64Matrix3x3.a23)
  
  ::google::protobuf::Int64Value* temp = a23_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  a23_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::unsafe_arena_release_a23() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64Matrix3x3.a23)
  
  ::google::protobuf::Int64Value* temp = a23_;
  a23_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::mutable_a23() {
  
  if (a23_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    a23_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64Matrix3x3.a23)
  return a23_;
}
inline void Int64Matrix3x3::set_allocated_a23(::google::protobuf::Int64Value* a23) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(a23_);
  }
  if (a23) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(a23)->GetArena();
    if (message_arena != submessage_arena) {
      a23 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, a23, submessage_arena);
    }
    
  } else {
    
  }
  a23_ = a23;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64Matrix3x3.a23)
}

// .google.protobuf.Int64Value a31 = 7;
inline bool Int64Matrix3x3::has_a31() const {
  return this != internal_default_instance() && a31_ != NULL;
}
inline const ::google::protobuf::Int64Value& Int64Matrix3x3::_internal_a31() const {
  return *a31_;
}
inline const ::google::protobuf::Int64Value& Int64Matrix3x3::a31() const {
  const ::google::protobuf::Int64Value* p = a31_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64Matrix3x3.a31)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::release_a31() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64Matrix3x3.a31)
  
  ::google::protobuf::Int64Value* temp = a31_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  a31_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::unsafe_arena_release_a31() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64Matrix3x3.a31)
  
  ::google::protobuf::Int64Value* temp = a31_;
  a31_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::mutable_a31() {
  
  if (a31_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    a31_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64Matrix3x3.a31)
  return a31_;
}
inline void Int64Matrix3x3::set_allocated_a31(::google::protobuf::Int64Value* a31) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(a31_);
  }
  if (a31) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(a31)->GetArena();
    if (message_arena != submessage_arena) {
      a31 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, a31, submessage_arena);
    }
    
  } else {
    
  }
  a31_ = a31;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64Matrix3x3.a31)
}

// .google.protobuf.Int64Value a32 = 8;
inline bool Int64Matrix3x3::has_a32() const {
  return this != internal_default_instance() && a32_ != NULL;
}
inline const ::google::protobuf::Int64Value& Int64Matrix3x3::_internal_a32() const {
  return *a32_;
}
inline const ::google::protobuf::Int64Value& Int64Matrix3x3::a32() const {
  const ::google::protobuf::Int64Value* p = a32_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64Matrix3x3.a32)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::release_a32() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64Matrix3x3.a32)
  
  ::google::protobuf::Int64Value* temp = a32_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  a32_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::unsafe_arena_release_a32() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64Matrix3x3.a32)
  
  ::google::protobuf::Int64Value* temp = a32_;
  a32_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::mutable_a32() {
  
  if (a32_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    a32_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64Matrix3x3.a32)
  return a32_;
}
inline void Int64Matrix3x3::set_allocated_a32(::google::protobuf::Int64Value* a32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(a32_);
  }
  if (a32) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(a32)->GetArena();
    if (message_arena != submessage_arena) {
      a32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, a32, submessage_arena);
    }
    
  } else {
    
  }
  a32_ = a32;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64Matrix3x3.a32)
}

// .google.protobuf.Int64Value a33 = 9;
inline bool Int64Matrix3x3::has_a33() const {
  return this != internal_default_instance() && a33_ != NULL;
}
inline const ::google::protobuf::Int64Value& Int64Matrix3x3::_internal_a33() const {
  return *a33_;
}
inline const ::google::protobuf::Int64Value& Int64Matrix3x3::a33() const {
  const ::google::protobuf::Int64Value* p = a33_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.base.Int64Matrix3x3.a33)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::release_a33() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.base.Int64Matrix3x3.a33)
  
  ::google::protobuf::Int64Value* temp = a33_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  a33_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::unsafe_arena_release_a33() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.base.Int64Matrix3x3.a33)
  
  ::google::protobuf::Int64Value* temp = a33_;
  a33_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* Int64Matrix3x3::mutable_a33() {
  
  if (a33_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    a33_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.base.Int64Matrix3x3.a33)
  return a33_;
}
inline void Int64Matrix3x3::set_allocated_a33(::google::protobuf::Int64Value* a33) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(a33_);
  }
  if (a33) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(a33)->GetArena();
    if (message_arena != submessage_arena) {
      a33 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, a33, submessage_arena);
    }
    
  } else {
    
  }
  a33_ = a33;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64Matrix3x3.a33)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace base
}  // namespace types
}  // namespace protobuf
}  // namespace sensoris

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::sensoris::protobuf::types::base::EventDetectionStatus_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sensoris::protobuf::types::base::EventDetectionStatus_Type>() {
  return ::sensoris::protobuf::types::base::EventDetectionStatus_Type_descriptor();
}
template <> struct is_proto_enum< ::sensoris::protobuf::types::base::StatisticMeasureType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sensoris::protobuf::types::base::StatisticMeasureType>() {
  return ::sensoris::protobuf::types::base::StatisticMeasureType_descriptor();
}
template <> struct is_proto_enum< ::sensoris::protobuf::types::base::SystemStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sensoris::protobuf::types::base::SystemStatus>() {
  return ::sensoris::protobuf::types::base::SystemStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_sensoris_2fprotobuf_2ftypes_2fbase_2eproto
