// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/messages/data.proto

#include "sensoris/protobuf/messages/data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace protobuf_google_2fprotobuf_2fwrappers_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BoolValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int64Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StringValue;
}  // namespace protobuf_google_2fprotobuf_2fwrappers_2eproto
namespace protobuf_sensoris_2fprotobuf_2fcategories_2fbrake_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fcategories_2fbrake_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_BrakeCategory;
}  // namespace protobuf_sensoris_2fprotobuf_2fcategories_2fbrake_2eproto
namespace protobuf_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_DrivingBehaviorCategory;
}  // namespace protobuf_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto
namespace protobuf_sensoris_2fprotobuf_2fcategories_2fintersection_5fattribution_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fcategories_2fintersection_5fattribution_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_IntersectionAttributionCategory;
}  // namespace protobuf_sensoris_2fprotobuf_2fcategories_2fintersection_5fattribution_2eproto
namespace protobuf_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_LocalizationCategory;
}  // namespace protobuf_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto
namespace protobuf_sensoris_2fprotobuf_2fcategories_2fmap_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fcategories_2fmap_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MapCategory;
}  // namespace protobuf_sensoris_2fprotobuf_2fcategories_2fmap_2eproto
namespace protobuf_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ObjectDetectionCategory;
}  // namespace protobuf_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto
namespace protobuf_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_PowertrainCategory;
}  // namespace protobuf_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto
namespace protobuf_sensoris_2fprotobuf_2fcategories_2froad_5fattribution_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fcategories_2froad_5fattribution_2eproto ::google::protobuf::internal::SCCInfo<9> scc_info_RoadAttributionCategory;
}  // namespace protobuf_sensoris_2fprotobuf_2fcategories_2froad_5fattribution_2eproto
namespace protobuf_sensoris_2fprotobuf_2fcategories_2ftraffic_5fevents_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fcategories_2ftraffic_5fevents_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_TrafficEventsCategory;
}  // namespace protobuf_sensoris_2fprotobuf_2fcategories_2ftraffic_5fevents_2eproto
namespace protobuf_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_TrafficManeuverCategory;
}  // namespace protobuf_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto
namespace protobuf_sensoris_2fprotobuf_2fcategories_2ftraffic_5fregulation_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fcategories_2ftraffic_5fregulation_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TrafficRegulationCategory;
}  // namespace protobuf_sensoris_2fprotobuf_2fcategories_2ftraffic_5fregulation_2eproto
namespace protobuf_sensoris_2fprotobuf_2fcategories_2fweather_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fcategories_2fweather_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_WeatherCategory;
}  // namespace protobuf_sensoris_2fprotobuf_2fcategories_2fweather_2eproto
namespace protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DataMessage_AbsolutePaths_Path;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto ::google::protobuf::internal::SCCInfo<13> scc_info_EventGroup;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DataMessage_AbsolutePaths;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DataMessage_Envelope_MapIdentification;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DataMessage_Envelope_VehicleDimensions;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DataMessage_EventSource_EventEnvelopeIds;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DataMessage_Paths;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_DataMessage_Envelope_FieldResolutionOverride;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_DataMessage_EventRelation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_EventGroup_Envelope;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_DataMessage_Envelope_Ids;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_DataMessage_Envelope_MapIdentification_MapVersion;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_DataMessages_Envelope;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_EventGroup_Envelope_Origin;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_DataMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_DataMessage_EventSource;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_DataMessage_Envelope;
}  // namespace protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto
namespace protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Timestamp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Version;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Entity;
}  // namespace protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto
namespace protobuf_sensoris_2fprotobuf_2ftypes_2fsource_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2ftypes_2fsource_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_Source;
}  // namespace protobuf_sensoris_2fprotobuf_2ftypes_2fsource_2eproto
namespace protobuf_sensoris_2fprotobuf_2ftypes_2fspatial_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2ftypes_2fspatial_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_RotationAndAccuracy;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2ftypes_2fspatial_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_PositionAndAccuracy;
}  // namespace protobuf_sensoris_2fprotobuf_2ftypes_2fspatial_2eproto
namespace sensoris {
namespace protobuf {
namespace messages {
namespace data {
class EventGroup_Envelope_OriginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventGroup_Envelope_Origin>
      _instance;
} _EventGroup_Envelope_Origin_default_instance_;
class EventGroup_EnvelopeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventGroup_Envelope>
      _instance;
} _EventGroup_Envelope_default_instance_;
class EventGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventGroup>
      _instance;
} _EventGroup_default_instance_;
class DataMessage_AbsolutePaths_PathDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataMessage_AbsolutePaths_Path>
      _instance;
} _DataMessage_AbsolutePaths_Path_default_instance_;
class DataMessage_AbsolutePathsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataMessage_AbsolutePaths>
      _instance;
} _DataMessage_AbsolutePaths_default_instance_;
class DataMessage_PathsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataMessage_Paths>
      _instance;
  const ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* absolute_paths_;
} _DataMessage_Paths_default_instance_;
class DataMessage_Envelope_IdsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataMessage_Envelope_Ids>
      _instance;
} _DataMessage_Envelope_Ids_default_instance_;
class DataMessage_Envelope_FieldResolutionOverrideDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataMessage_Envelope_FieldResolutionOverride>
      _instance;
} _DataMessage_Envelope_FieldResolutionOverride_default_instance_;
class DataMessage_Envelope_VehicleDimensionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataMessage_Envelope_VehicleDimensions>
      _instance;
} _DataMessage_Envelope_VehicleDimensions_default_instance_;
class DataMessage_Envelope_MapIdentification_MapVersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataMessage_Envelope_MapIdentification_MapVersion>
      _instance;
} _DataMessage_Envelope_MapIdentification_MapVersion_default_instance_;
class DataMessage_Envelope_MapIdentificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataMessage_Envelope_MapIdentification>
      _instance;
} _DataMessage_Envelope_MapIdentification_default_instance_;
class DataMessage_EnvelopeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataMessage_Envelope>
      _instance;
} _DataMessage_Envelope_default_instance_;
class DataMessage_EventRelationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataMessage_EventRelation>
      _instance;
} _DataMessage_EventRelation_default_instance_;
class DataMessage_EventSource_EventEnvelopeIdsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataMessage_EventSource_EventEnvelopeIds>
      _instance;
} _DataMessage_EventSource_EventEnvelopeIds_default_instance_;
class DataMessage_EventSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataMessage_EventSource>
      _instance;
  const ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* ids_;
  const ::sensoris::protobuf::messages::data::DataMessage_Paths* paths_;
} _DataMessage_EventSource_default_instance_;
class DataMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataMessage>
      _instance;
} _DataMessage_default_instance_;
class DataMessages_EnvelopeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataMessages_Envelope>
      _instance;
} _DataMessages_Envelope_default_instance_;
class DataMessagesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataMessages>
      _instance;
} _DataMessages_default_instance_;
}  // namespace data
}  // namespace messages
}  // namespace protobuf
}  // namespace sensoris
namespace protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto {
static void InitDefaultsEventGroup_Envelope_Origin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::messages::data::_EventGroup_Envelope_Origin_default_instance_;
    new (ptr) ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_EventGroup_Envelope_Origin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsEventGroup_Envelope_Origin}, {
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Timestamp.base,
      &protobuf_sensoris_2fprotobuf_2ftypes_2fspatial_2eproto::scc_info_PositionAndAccuracy.base,
      &protobuf_sensoris_2fprotobuf_2ftypes_2fspatial_2eproto::scc_info_RotationAndAccuracy.base,}};

static void InitDefaultsEventGroup_Envelope() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::messages::data::_EventGroup_Envelope_default_instance_;
    new (ptr) ::sensoris::protobuf::messages::data::EventGroup_Envelope();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::messages::data::EventGroup_Envelope::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_EventGroup_Envelope =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsEventGroup_Envelope}, {
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_EventGroup_Envelope_Origin.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsEventGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::messages::data::_EventGroup_default_instance_;
    new (ptr) ::sensoris::protobuf::messages::data::EventGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::messages::data::EventGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<13> scc_info_EventGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 13, InitDefaultsEventGroup}, {
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_EventGroup_Envelope.base,
      &protobuf_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto::scc_info_LocalizationCategory.base,
      &protobuf_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto::scc_info_ObjectDetectionCategory.base,
      &protobuf_sensoris_2fprotobuf_2fcategories_2fweather_2eproto::scc_info_WeatherCategory.base,
      &protobuf_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto::scc_info_DrivingBehaviorCategory.base,
      &protobuf_sensoris_2fprotobuf_2fcategories_2fintersection_5fattribution_2eproto::scc_info_IntersectionAttributionCategory.base,
      &protobuf_sensoris_2fprotobuf_2fcategories_2froad_5fattribution_2eproto::scc_info_RoadAttributionCategory.base,
      &protobuf_sensoris_2fprotobuf_2fcategories_2ftraffic_5fregulation_2eproto::scc_info_TrafficRegulationCategory.base,
      &protobuf_sensoris_2fprotobuf_2fcategories_2ftraffic_5fevents_2eproto::scc_info_TrafficEventsCategory.base,
      &protobuf_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto::scc_info_TrafficManeuverCategory.base,
      &protobuf_sensoris_2fprotobuf_2fcategories_2fbrake_2eproto::scc_info_BrakeCategory.base,
      &protobuf_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto::scc_info_PowertrainCategory.base,
      &protobuf_sensoris_2fprotobuf_2fcategories_2fmap_2eproto::scc_info_MapCategory.base,}};

static void InitDefaultsDataMessage_AbsolutePaths_Path() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::messages::data::_DataMessage_AbsolutePaths_Path_default_instance_;
    new (ptr) ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DataMessage_AbsolutePaths_Path =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDataMessage_AbsolutePaths_Path}, {}};

static void InitDefaultsDataMessage_AbsolutePaths() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::messages::data::_DataMessage_AbsolutePaths_default_instance_;
    new (ptr) ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DataMessage_AbsolutePaths =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDataMessage_AbsolutePaths}, {
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_AbsolutePaths_Path.base,}};

static void InitDefaultsDataMessage_Paths() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::messages::data::_DataMessage_Paths_default_instance_;
    new (ptr) ::sensoris::protobuf::messages::data::DataMessage_Paths();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::messages::data::DataMessage_Paths::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DataMessage_Paths =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDataMessage_Paths}, {
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_AbsolutePaths.base,}};

static void InitDefaultsDataMessage_Envelope_Ids() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::messages::data::_DataMessage_Envelope_Ids_default_instance_;
    new (ptr) ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_DataMessage_Envelope_Ids =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsDataMessage_Envelope_Ids}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_StringValue.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_BoolValue.base,}};

static void InitDefaultsDataMessage_Envelope_FieldResolutionOverride() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::messages::data::_DataMessage_Envelope_FieldResolutionOverride_default_instance_;
    new (ptr) ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DataMessage_Envelope_FieldResolutionOverride =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDataMessage_Envelope_FieldResolutionOverride}, {
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Paths.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,}};

static void InitDefaultsDataMessage_Envelope_VehicleDimensions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::messages::data::_DataMessage_Envelope_VehicleDimensions_default_instance_;
    new (ptr) ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DataMessage_Envelope_VehicleDimensions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDataMessage_Envelope_VehicleDimensions}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,}};

static void InitDefaultsDataMessage_Envelope_MapIdentification_MapVersion() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::messages::data::_DataMessage_Envelope_MapIdentification_MapVersion_default_instance_;
    new (ptr) ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_DataMessage_Envelope_MapIdentification_MapVersion =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsDataMessage_Envelope_MapIdentification_MapVersion}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_StringValue.base,
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Version.base,
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsDataMessage_Envelope_MapIdentification() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::messages::data::_DataMessage_Envelope_MapIdentification_default_instance_;
    new (ptr) ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DataMessage_Envelope_MapIdentification =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDataMessage_Envelope_MapIdentification}, {
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope_MapIdentification_MapVersion.base,}};

static void InitDefaultsDataMessage_Envelope() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::messages::data::_DataMessage_Envelope_default_instance_;
    new (ptr) ::sensoris::protobuf::messages::data::DataMessage_Envelope();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::messages::data::DataMessage_Envelope::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_DataMessage_Envelope =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsDataMessage_Envelope}, {
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope_Ids.base,
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope_FieldResolutionOverride.base,
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope_VehicleDimensions.base,
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope_MapIdentification.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsDataMessage_EventRelation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::messages::data::_DataMessage_EventRelation_default_instance_;
    new (ptr) ::sensoris::protobuf::messages::data::DataMessage_EventRelation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::messages::data::DataMessage_EventRelation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DataMessage_EventRelation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDataMessage_EventRelation}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsDataMessage_EventSource_EventEnvelopeIds() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::messages::data::_DataMessage_EventSource_EventEnvelopeIds_default_instance_;
    new (ptr) ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DataMessage_EventSource_EventEnvelopeIds =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDataMessage_EventSource_EventEnvelopeIds}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,}};

static void InitDefaultsDataMessage_EventSource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::messages::data::_DataMessage_EventSource_default_instance_;
    new (ptr) ::sensoris::protobuf::messages::data::DataMessage_EventSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::messages::data::DataMessage_EventSource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_DataMessage_EventSource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsDataMessage_EventSource}, {
      &protobuf_sensoris_2fprotobuf_2ftypes_2fsource_2eproto::scc_info_Source.base,
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_EventSource_EventEnvelopeIds.base,
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Paths.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsDataMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::messages::data::_DataMessage_default_instance_;
    new (ptr) ::sensoris::protobuf::messages::data::DataMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::messages::data::DataMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_DataMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsDataMessage}, {
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope.base,
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_EventGroup.base,
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_EventRelation.base,
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_EventSource.base,}};

static void InitDefaultsDataMessages_Envelope() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::messages::data::_DataMessages_Envelope_default_instance_;
    new (ptr) ::sensoris::protobuf::messages::data::DataMessages_Envelope();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::messages::data::DataMessages_Envelope::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_DataMessages_Envelope =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsDataMessages_Envelope}, {
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Version.base,
      &protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::scc_info_Entity.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsDataMessages() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sensoris::protobuf::messages::data::_DataMessages_default_instance_;
    new (ptr) ::sensoris::protobuf::messages::data::DataMessages();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sensoris::protobuf::messages::data::DataMessages::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DataMessages =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDataMessages}, {
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessages_Envelope.base,
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_EventGroup_Envelope_Origin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EventGroup_Envelope.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EventGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataMessage_AbsolutePaths_Path.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataMessage_AbsolutePaths.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataMessage_Paths.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataMessage_Envelope_Ids.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataMessage_Envelope_FieldResolutionOverride.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataMessage_Envelope_VehicleDimensions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataMessage_Envelope_MapIdentification_MapVersion.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataMessage_Envelope_MapIdentification.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataMessage_Envelope.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataMessage_EventRelation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataMessage_EventSource_EventEnvelopeIds.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataMessage_EventSource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataMessages_Envelope.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataMessages.base);
}

::google::protobuf::Metadata file_level_metadata[18];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin, position_and_accuracy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin, orientation_and_accuracy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup_Envelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup_Envelope, origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup_Envelope, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup, envelope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup, localization_category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup, object_detection_category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup, weather_category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup, driving_behavior_category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup, intersection_attribution_category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup, road_attribution_category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup, traffic_regulation_category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup, traffic_events_category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup, traffic_maneuver_category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup, brake_category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup, powertrain_category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::EventGroup, map_category_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path, field_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Paths, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Paths, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::sensoris::protobuf::messages::data::DataMessage_PathsDefaultTypeInternal, absolute_paths_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Paths, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids, message_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids, last_message_of_session_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids, vehicle_fleet_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids, vehicle_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids, driver_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride, paths_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride, exponent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions, distance_to_front_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions, distance_to_back_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions, distance_to_left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions, distance_to_right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions, distance_to_top_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions, distance_to_ground_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion, extraction_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification, provider_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification, compiler_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification, format_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope, ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope, field_resolution_override_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope, vehicle_dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope, map_identification_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_Envelope, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_EventRelation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_EventRelation, from_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_EventRelation, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_EventRelation, to_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_EventRelation, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_EventSource, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_EventSource, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_EventSource, source_),
  offsetof(::sensoris::protobuf::messages::data::DataMessage_EventSourceDefaultTypeInternal, ids_),
  offsetof(::sensoris::protobuf::messages::data::DataMessage_EventSourceDefaultTypeInternal, paths_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_EventSource, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage_EventSource, event_reference_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage, envelope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage, event_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage, event_relation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessage, event_source_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessages_Envelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessages_Envelope, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessages_Envelope, submitter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessages_Envelope, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessages, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessages, envelope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sensoris::protobuf::messages::data::DataMessages, data_message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin)},
  { 8, -1, sizeof(::sensoris::protobuf::messages::data::EventGroup_Envelope)},
  { 15, -1, sizeof(::sensoris::protobuf::messages::data::EventGroup)},
  { 33, -1, sizeof(::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path)},
  { 39, -1, sizeof(::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths)},
  { 45, -1, sizeof(::sensoris::protobuf::messages::data::DataMessage_Paths)},
  { 52, -1, sizeof(::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids)},
  { 63, -1, sizeof(::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride)},
  { 70, -1, sizeof(::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions)},
  { 81, -1, sizeof(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion)},
  { 89, -1, sizeof(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification)},
  { 97, -1, sizeof(::sensoris::protobuf::messages::data::DataMessage_Envelope)},
  { 107, -1, sizeof(::sensoris::protobuf::messages::data::DataMessage_EventRelation)},
  { 116, -1, sizeof(::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds)},
  { 122, -1, sizeof(::sensoris::protobuf::messages::data::DataMessage_EventSource)},
  { 132, -1, sizeof(::sensoris::protobuf::messages::data::DataMessage)},
  { 141, -1, sizeof(::sensoris::protobuf::messages::data::DataMessages_Envelope)},
  { 149, -1, sizeof(::sensoris::protobuf::messages::data::DataMessages)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::messages::data::_EventGroup_Envelope_Origin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::messages::data::_EventGroup_Envelope_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::messages::data::_EventGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::messages::data::_DataMessage_AbsolutePaths_Path_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::messages::data::_DataMessage_AbsolutePaths_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::messages::data::_DataMessage_Paths_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::messages::data::_DataMessage_Envelope_Ids_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::messages::data::_DataMessage_Envelope_FieldResolutionOverride_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::messages::data::_DataMessage_Envelope_VehicleDimensions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::messages::data::_DataMessage_Envelope_MapIdentification_MapVersion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::messages::data::_DataMessage_Envelope_MapIdentification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::messages::data::_DataMessage_Envelope_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::messages::data::_DataMessage_EventRelation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::messages::data::_DataMessage_EventSource_EventEnvelopeIds_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::messages::data::_DataMessage_EventSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::messages::data::_DataMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::messages::data::_DataMessages_Envelope_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sensoris::protobuf::messages::data::_DataMessages_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "sensoris/protobuf/messages/data.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 18);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n%sensoris/protobuf/messages/data.proto\022"
      "\037sensoris.protobuf.messages.data\032\031google"
      "/protobuf/any.proto\032\036google/protobuf/wra"
      "ppers.proto\032\"sensoris/protobuf/types/bas"
      "e.proto\032$sensoris/protobuf/types/source."
      "proto\032%sensoris/protobuf/types/spatial.p"
      "roto\032/sensoris/protobuf/categories/local"
      "ization.proto\0323sensoris/protobuf/categor"
      "ies/object_detection.proto\032*sensoris/pro"
      "tobuf/categories/weather.proto\0323sensoris"
      "/protobuf/categories/driving_behavior.pr"
      "oto\032;sensoris/protobuf/categories/inters"
      "ection_attribution.proto\0323sensoris/proto"
      "buf/categories/road_attribution.proto\0325s"
      "ensoris/protobuf/categories/traffic_regu"
      "lation.proto\0321sensoris/protobuf/categori"
      "es/traffic_events.proto\0323sensoris/protob"
      "uf/categories/traffic_maneuver.proto\032(se"
      "nsoris/protobuf/categories/brake.proto\032-"
      "sensoris/protobuf/categories/powertrain."
      "proto\032&sensoris/protobuf/categories/map."
      "proto\"\345\014\n\nEventGroup\022F\n\010envelope\030\001 \001(\01324"
      ".sensoris.protobuf.messages.data.EventGr"
      "oup.Envelope\022^\n\025localization_category\030\002 "
      "\001(\0132\?.sensoris.protobuf.categories.local"
      "ization.LocalizationCategory\022h\n\031object_d"
      "etection_category\030\003 \001(\0132E.sensoris.proto"
      "buf.categories.objectdetection.ObjectDet"
      "ectionCategory\022O\n\020weather_category\030\004 \001(\013"
      "25.sensoris.protobuf.categories.weather."
      "WeatherCategory\022h\n\031driving_behavior_cate"
      "gory\030\005 \001(\0132E.sensoris.protobuf.categorie"
      "s.drivingbehavior.DrivingBehaviorCategor"
      "y\022\200\001\n!intersection_attribution_category\030"
      "\006 \001(\0132U.sensoris.protobuf.categories.int"
      "ersectionattribution.IntersectionAttribu"
      "tionCategory\022h\n\031road_attribution_categor"
      "y\030\007 \001(\0132E.sensoris.protobuf.categories.r"
      "oadattribution.RoadAttributionCategory\022n"
      "\n\033traffic_regulation_category\030\010 \001(\0132I.se"
      "nsoris.protobuf.categories.trafficregula"
      "tion.TrafficRegulationCategory\022b\n\027traffi"
      "c_events_category\030\t \001(\0132A.sensoris.proto"
      "buf.categories.trafficevents.TrafficEven"
      "tsCategory\022h\n\031traffic_maneuver_category\030"
      "\n \001(\0132E.sensoris.protobuf.categories.tra"
      "fficmaneuver.TrafficManeuverCategory\022I\n\016"
      "brake_category\030\013 \001(\01321.sensoris.protobuf"
      ".categories.brake.BrakeCategory\022X\n\023power"
      "train_category\030\014 \001(\0132;.sensoris.protobuf"
      ".categories.powertrain.PowertrainCategor"
      "y\022C\n\014map_category\030\r \001(\0132-.sensoris.proto"
      "buf.categories.map.MapCategory\032\364\002\n\010Envel"
      "ope\022K\n\006origin\030\001 \001(\0132;.sensoris.protobuf."
      "messages.data.EventGroup.Envelope.Origin"
      "\022\'\n\textension\030\017 \003(\0132\024.google.protobuf.An"
      "y\032\361\001\n\006Origin\022:\n\ttimestamp\030\001 \001(\0132\'.sensor"
      "is.protobuf.types.base.Timestamp\022S\n\025posi"
      "tion_and_accuracy\030\002 \001(\01324.sensoris.proto"
      "buf.types.spatial.PositionAndAccuracy\022V\n"
      "\030orientation_and_accuracy\030\003 \001(\01324.sensor"
      "is.protobuf.types.spatial.RotationAndAcc"
      "uracy\"\355\030\n\013DataMessage\022G\n\010envelope\030\001 \001(\0132"
      "5.sensoris.protobuf.messages.data.DataMe"
      "ssage.Envelope\022@\n\013event_group\030\002 \003(\0132+.se"
      "nsoris.protobuf.messages.data.EventGroup"
      "\022R\n\016event_relation\030\003 \003(\0132:.sensoris.prot"
      "obuf.messages.data.DataMessage.EventRela"
      "tion\022N\n\014event_source\030\004 \003(\01328.sensoris.pr"
      "otobuf.messages.data.DataMessage.EventSo"
      "urce\032|\n\rAbsolutePaths\022M\n\004path\030\001 \003(\0132\?.se"
      "nsoris.protobuf.messages.data.DataMessag"
      "e.AbsolutePaths.Path\032\034\n\004Path\022\024\n\014field_nu"
      "mber\030\001 \003(\003\032e\n\005Paths\022T\n\016absolute_paths\030\001 "
      "\001(\0132:.sensoris.protobuf.messages.data.Da"
      "taMessage.AbsolutePathsH\000B\006\n\004type\032\317\016\n\010En"
      "velope\022F\n\003ids\030\001 \001(\01329.sensoris.protobuf."
      "messages.data.DataMessage.Envelope.Ids\022p"
      "\n\031field_resolution_override\030\003 \003(\0132M.sens"
      "oris.protobuf.messages.data.DataMessage."
      "Envelope.FieldResolutionOverride\022c\n\022vehi"
      "cle_dimensions\030\004 \001(\0132G.sensoris.protobuf"
      ".messages.data.DataMessage.Envelope.Vehi"
      "cleDimensions\022c\n\022map_identification\030\005 \001("
      "\0132G.sensoris.protobuf.messages.data.Data"
      "Message.Envelope.MapIdentification\022\'\n\tex"
      "tension\030\017 \003(\0132\024.google.protobuf.Any\032\300\002\n\003"
      "Ids\0220\n\nsession_id\030\001 \001(\0132\034.google.protobu"
      "f.StringValue\022/\n\nmessage_id\030\002 \001(\0132\033.goog"
      "le.protobuf.Int64Value\022;\n\027last_message_o"
      "f_session\030\003 \001(\0132\032.google.protobuf.BoolVa"
      "lue\0226\n\020vehicle_fleet_id\030\004 \001(\0132\034.google.p"
      "rotobuf.StringValue\0220\n\nvehicle_id\030\005 \001(\0132"
      "\034.google.protobuf.StringValue\022/\n\tdriver_"
      "id\030\006 \001(\0132\034.google.protobuf.StringValue\032\213"
      "\001\n\027FieldResolutionOverride\022A\n\005paths\030\001 \001("
      "\01322.sensoris.protobuf.messages.data.Data"
      "Message.Paths\022-\n\010exponent\030\002 \001(\0132\033.google"
      ".protobuf.Int64Value\032\204\003\n\021VehicleDimensio"
      "ns\022<\n\021distance_to_front\030\001 \001(\0132\033.google.p"
      "rotobuf.Int64ValueB\004\210\265\030\000\022;\n\020distance_to_"
      "back\030\002 \001(\0132\033.google.protobuf.Int64ValueB"
      "\004\210\265\030\000\022;\n\020distance_to_left\030\003 \001(\0132\033.google"
      ".protobuf.Int64ValueB\004\210\265\030\000\022<\n\021distance_t"
      "o_right\030\004 \001(\0132\033.google.protobuf.Int64Val"
      "ueB\004\210\265\030\000\022:\n\017distance_to_top\030\005 \001(\0132\033.goog"
      "le.protobuf.Int64ValueB\004\210\265\030\000\022=\n\022distance"
      "_to_ground\030\006 \001(\0132\033.google.protobuf.Int64"
      "ValueB\004\210\265\030\000\032\275\004\n\021MapIdentification\022l\n\020pro"
      "vider_version\030\001 \001(\0132R.sensoris.protobuf."
      "messages.data.DataMessage.Envelope.MapId"
      "entification.MapVersion\022l\n\020compiler_vers"
      "ion\030\002 \001(\0132R.sensoris.protobuf.messages.d"
      "ata.DataMessage.Envelope.MapIdentificati"
      "on.MapVersion\022^\n\006format\030\003 \001(\0162N.sensoris"
      ".protobuf.messages.data.DataMessage.Enve"
      "lope.MapIdentification.Format\032\271\001\n\nMapVer"
      "sion\022,\n\006source\030\001 \001(\0132\034.google.protobuf.S"
      "tringValue\0226\n\007version\030\002 \001(\0132%.sensoris.p"
      "rotobuf.types.base.Version\022E\n\024extraction"
      "_timestamp\030\003 \001(\0132\'.sensoris.protobuf.typ"
      "es.base.Timestamp\"0\n\006Format\022\022\n\016UNKNOWN_F"
      "ORMAT\020\000\022\t\n\005OTHER\020\001\022\007\n\003NDS\020\002\032\227\003\n\rEventRel"
      "ation\022,\n\007from_id\030\001 \003(\0132\033.google.protobuf"
      ".Int64Value\022M\n\004type\030\002 \001(\0162\?.sensoris.pro"
      "tobuf.messages.data.DataMessage.EventRel"
      "ation.Type\022*\n\005to_id\030\003 \003(\0132\033.google.proto"
      "buf.Int64Value\022\'\n\textension\030\017 \003(\0132\024.goog"
      "le.protobuf.Any\"\263\001\n\004Type\022\020\n\014UNKNOWN_TYPE"
      "\020\000\022\t\n\005EQUAL\020\001\022\t\n\005GROUP\020\002\022\013\n\007CONTAIN\020\003\022\n\n"
      "\006IMPACT\020\004\022\014\n\010START_AT\020\005\022\n\n\006END_AT\020\006\022\013\n\007L"
      "EFT_OF\020\007\022\014\n\010RIGHT_OF\020\010\022\020\n\014TRIGGERED_BY\020\t"
      "\022\020\n\014DERIVED_FROM\020\013\022\021\n\rMAP_REFERENCE\020\014\032\335\002"
      "\n\013EventSource\0226\n\006source\030\001 \001(\0132&.sensoris"
      ".protobuf.types.source.Source\022X\n\003ids\030\002 \001"
      "(\0132I.sensoris.protobuf.messages.data.Dat"
      "aMessage.EventSource.EventEnvelopeIdsH\000\022"
      "C\n\005paths\030\003 \001(\01322.sensoris.protobuf.messa"
      "ges.data.DataMessage.PathsH\000\022\'\n\textensio"
      "n\030\017 \003(\0132\024.google.protobuf.Any\032;\n\020EventEn"
      "velopeIds\022\'\n\002id\030\002 \003(\0132\033.google.protobuf."
      "Int64ValueB\021\n\017event_reference\"\303\002\n\014DataMe"
      "ssages\022H\n\010envelope\030\001 \001(\01326.sensoris.prot"
      "obuf.messages.data.DataMessages.Envelope"
      "\022B\n\014data_message\030\002 \003(\0132,.sensoris.protob"
      "uf.messages.data.DataMessage\032\244\001\n\010Envelop"
      "e\0226\n\007version\030\001 \001(\0132%.sensoris.protobuf.t"
      "ypes.base.Version\0227\n\tsubmitter\030\002 \003(\0132$.s"
      "ensoris.protobuf.types.base.Entity\022\'\n\tex"
      "tension\030\017 \003(\0132\024.google.protobuf.AnyB7\n\032o"
      "rg.sensoris.messages.dataB\024SensorisDataM"
      "essagesP\001\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6060);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sensoris/protobuf/messages/data.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::AddDescriptors();
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fsource_2eproto::AddDescriptors();
  ::protobuf_sensoris_2fprotobuf_2ftypes_2fspatial_2eproto::AddDescriptors();
  ::protobuf_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto::AddDescriptors();
  ::protobuf_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto::AddDescriptors();
  ::protobuf_sensoris_2fprotobuf_2fcategories_2fweather_2eproto::AddDescriptors();
  ::protobuf_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto::AddDescriptors();
  ::protobuf_sensoris_2fprotobuf_2fcategories_2fintersection_5fattribution_2eproto::AddDescriptors();
  ::protobuf_sensoris_2fprotobuf_2fcategories_2froad_5fattribution_2eproto::AddDescriptors();
  ::protobuf_sensoris_2fprotobuf_2fcategories_2ftraffic_5fregulation_2eproto::AddDescriptors();
  ::protobuf_sensoris_2fprotobuf_2fcategories_2ftraffic_5fevents_2eproto::AddDescriptors();
  ::protobuf_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto::AddDescriptors();
  ::protobuf_sensoris_2fprotobuf_2fcategories_2fbrake_2eproto::AddDescriptors();
  ::protobuf_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto::AddDescriptors();
  ::protobuf_sensoris_2fprotobuf_2fcategories_2fmap_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto
namespace sensoris {
namespace protobuf {
namespace messages {
namespace data {
const ::google::protobuf::EnumDescriptor* DataMessage_Envelope_MapIdentification_Format_descriptor() {
  protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_enum_descriptors[0];
}
bool DataMessage_Envelope_MapIdentification_Format_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DataMessage_Envelope_MapIdentification_Format DataMessage_Envelope_MapIdentification::UNKNOWN_FORMAT;
const DataMessage_Envelope_MapIdentification_Format DataMessage_Envelope_MapIdentification::OTHER;
const DataMessage_Envelope_MapIdentification_Format DataMessage_Envelope_MapIdentification::NDS;
const DataMessage_Envelope_MapIdentification_Format DataMessage_Envelope_MapIdentification::Format_MIN;
const DataMessage_Envelope_MapIdentification_Format DataMessage_Envelope_MapIdentification::Format_MAX;
const int DataMessage_Envelope_MapIdentification::Format_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DataMessage_EventRelation_Type_descriptor() {
  protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_enum_descriptors[1];
}
bool DataMessage_EventRelation_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DataMessage_EventRelation_Type DataMessage_EventRelation::UNKNOWN_TYPE;
const DataMessage_EventRelation_Type DataMessage_EventRelation::EQUAL;
const DataMessage_EventRelation_Type DataMessage_EventRelation::GROUP;
const DataMessage_EventRelation_Type DataMessage_EventRelation::CONTAIN;
const DataMessage_EventRelation_Type DataMessage_EventRelation::IMPACT;
const DataMessage_EventRelation_Type DataMessage_EventRelation::START_AT;
const DataMessage_EventRelation_Type DataMessage_EventRelation::END_AT;
const DataMessage_EventRelation_Type DataMessage_EventRelation::LEFT_OF;
const DataMessage_EventRelation_Type DataMessage_EventRelation::RIGHT_OF;
const DataMessage_EventRelation_Type DataMessage_EventRelation::TRIGGERED_BY;
const DataMessage_EventRelation_Type DataMessage_EventRelation::DERIVED_FROM;
const DataMessage_EventRelation_Type DataMessage_EventRelation::MAP_REFERENCE;
const DataMessage_EventRelation_Type DataMessage_EventRelation::Type_MIN;
const DataMessage_EventRelation_Type DataMessage_EventRelation::Type_MAX;
const int DataMessage_EventRelation::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void EventGroup_Envelope_Origin::InitAsDefaultInstance() {
  ::sensoris::protobuf::messages::data::_EventGroup_Envelope_Origin_default_instance_._instance.get_mutable()->timestamp_ = const_cast< ::sensoris::protobuf::types::base::Timestamp*>(
      ::sensoris::protobuf::types::base::Timestamp::internal_default_instance());
  ::sensoris::protobuf::messages::data::_EventGroup_Envelope_Origin_default_instance_._instance.get_mutable()->position_and_accuracy_ = const_cast< ::sensoris::protobuf::types::spatial::PositionAndAccuracy*>(
      ::sensoris::protobuf::types::spatial::PositionAndAccuracy::internal_default_instance());
  ::sensoris::protobuf::messages::data::_EventGroup_Envelope_Origin_default_instance_._instance.get_mutable()->orientation_and_accuracy_ = const_cast< ::sensoris::protobuf::types::spatial::RotationAndAccuracy*>(
      ::sensoris::protobuf::types::spatial::RotationAndAccuracy::internal_default_instance());
}
void EventGroup_Envelope_Origin::unsafe_arena_set_allocated_timestamp(
    ::sensoris::protobuf::types::base::Timestamp* timestamp) {
  if (GetArenaNoVirtual() == NULL) {
    delete timestamp_;
  }
  timestamp_ = timestamp;
  if (timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.timestamp)
}
void EventGroup_Envelope_Origin::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
}
void EventGroup_Envelope_Origin::unsafe_arena_set_allocated_position_and_accuracy(
    ::sensoris::protobuf::types::spatial::PositionAndAccuracy* position_and_accuracy) {
  if (GetArenaNoVirtual() == NULL) {
    delete position_and_accuracy_;
  }
  position_and_accuracy_ = position_and_accuracy;
  if (position_and_accuracy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.position_and_accuracy)
}
void EventGroup_Envelope_Origin::clear_position_and_accuracy() {
  if (GetArenaNoVirtual() == NULL && position_and_accuracy_ != NULL) {
    delete position_and_accuracy_;
  }
  position_and_accuracy_ = NULL;
}
void EventGroup_Envelope_Origin::unsafe_arena_set_allocated_orientation_and_accuracy(
    ::sensoris::protobuf::types::spatial::RotationAndAccuracy* orientation_and_accuracy) {
  if (GetArenaNoVirtual() == NULL) {
    delete orientation_and_accuracy_;
  }
  orientation_and_accuracy_ = orientation_and_accuracy;
  if (orientation_and_accuracy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.orientation_and_accuracy)
}
void EventGroup_Envelope_Origin::clear_orientation_and_accuracy() {
  if (GetArenaNoVirtual() == NULL && orientation_and_accuracy_ != NULL) {
    delete orientation_and_accuracy_;
  }
  orientation_and_accuracy_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventGroup_Envelope_Origin::kTimestampFieldNumber;
const int EventGroup_Envelope_Origin::kPositionAndAccuracyFieldNumber;
const int EventGroup_Envelope_Origin::kOrientationAndAccuracyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventGroup_Envelope_Origin::EventGroup_Envelope_Origin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_EventGroup_Envelope_Origin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
}
EventGroup_Envelope_Origin::EventGroup_Envelope_Origin(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_EventGroup_Envelope_Origin.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
}
EventGroup_Envelope_Origin::EventGroup_Envelope_Origin(const EventGroup_Envelope_Origin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_timestamp()) {
    timestamp_ = new ::sensoris::protobuf::types::base::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = NULL;
  }
  if (from.has_position_and_accuracy()) {
    position_and_accuracy_ = new ::sensoris::protobuf::types::spatial::PositionAndAccuracy(*from.position_and_accuracy_);
  } else {
    position_and_accuracy_ = NULL;
  }
  if (from.has_orientation_and_accuracy()) {
    orientation_and_accuracy_ = new ::sensoris::protobuf::types::spatial::RotationAndAccuracy(*from.orientation_and_accuracy_);
  } else {
    orientation_and_accuracy_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
}

void EventGroup_Envelope_Origin::SharedCtor() {
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&orientation_and_accuracy_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(orientation_and_accuracy_));
}

EventGroup_Envelope_Origin::~EventGroup_Envelope_Origin() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
  SharedDtor();
}

void EventGroup_Envelope_Origin::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete timestamp_;
  if (this != internal_default_instance()) delete position_and_accuracy_;
  if (this != internal_default_instance()) delete orientation_and_accuracy_;
}

void EventGroup_Envelope_Origin::ArenaDtor(void* object) {
  EventGroup_Envelope_Origin* _this = reinterpret_cast< EventGroup_Envelope_Origin* >(object);
  (void)_this;
}
void EventGroup_Envelope_Origin::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EventGroup_Envelope_Origin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EventGroup_Envelope_Origin::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventGroup_Envelope_Origin& EventGroup_Envelope_Origin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_EventGroup_Envelope_Origin.base);
  return *internal_default_instance();
}


void EventGroup_Envelope_Origin::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
  if (GetArenaNoVirtual() == NULL && position_and_accuracy_ != NULL) {
    delete position_and_accuracy_;
  }
  position_and_accuracy_ = NULL;
  if (GetArenaNoVirtual() == NULL && orientation_and_accuracy_ != NULL) {
    delete orientation_and_accuracy_;
  }
  orientation_and_accuracy_ = NULL;
  _internal_metadata_.Clear();
}

bool EventGroup_Envelope_Origin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sensoris.protobuf.types.base.Timestamp timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.types.spatial.PositionAndAccuracy position_and_accuracy = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position_and_accuracy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.types.spatial.RotationAndAccuracy orientation_and_accuracy = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_orientation_and_accuracy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
  return false;
#undef DO_
}

void EventGroup_Envelope_Origin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.Timestamp timestamp = 1;
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_timestamp(), output);
  }

  // .sensoris.protobuf.types.spatial.PositionAndAccuracy position_and_accuracy = 2;
  if (this->has_position_and_accuracy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_position_and_accuracy(), output);
  }

  // .sensoris.protobuf.types.spatial.RotationAndAccuracy orientation_and_accuracy = 3;
  if (this->has_orientation_and_accuracy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_orientation_and_accuracy(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
}

::google::protobuf::uint8* EventGroup_Envelope_Origin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.Timestamp timestamp = 1;
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_timestamp(), deterministic, target);
  }

  // .sensoris.protobuf.types.spatial.PositionAndAccuracy position_and_accuracy = 2;
  if (this->has_position_and_accuracy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_position_and_accuracy(), deterministic, target);
  }

  // .sensoris.protobuf.types.spatial.RotationAndAccuracy orientation_and_accuracy = 3;
  if (this->has_orientation_and_accuracy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_orientation_and_accuracy(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
  return target;
}

size_t EventGroup_Envelope_Origin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .sensoris.protobuf.types.base.Timestamp timestamp = 1;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timestamp_);
  }

  // .sensoris.protobuf.types.spatial.PositionAndAccuracy position_and_accuracy = 2;
  if (this->has_position_and_accuracy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_and_accuracy_);
  }

  // .sensoris.protobuf.types.spatial.RotationAndAccuracy orientation_and_accuracy = 3;
  if (this->has_orientation_and_accuracy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *orientation_and_accuracy_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventGroup_Envelope_Origin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
  GOOGLE_DCHECK_NE(&from, this);
  const EventGroup_Envelope_Origin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventGroup_Envelope_Origin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
    MergeFrom(*source);
  }
}

void EventGroup_Envelope_Origin::MergeFrom(const EventGroup_Envelope_Origin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_timestamp()) {
    mutable_timestamp()->::sensoris::protobuf::types::base::Timestamp::MergeFrom(from.timestamp());
  }
  if (from.has_position_and_accuracy()) {
    mutable_position_and_accuracy()->::sensoris::protobuf::types::spatial::PositionAndAccuracy::MergeFrom(from.position_and_accuracy());
  }
  if (from.has_orientation_and_accuracy()) {
    mutable_orientation_and_accuracy()->::sensoris::protobuf::types::spatial::RotationAndAccuracy::MergeFrom(from.orientation_and_accuracy());
  }
}

void EventGroup_Envelope_Origin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventGroup_Envelope_Origin::CopyFrom(const EventGroup_Envelope_Origin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventGroup_Envelope_Origin::IsInitialized() const {
  return true;
}

void EventGroup_Envelope_Origin::Swap(EventGroup_Envelope_Origin* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EventGroup_Envelope_Origin* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EventGroup_Envelope_Origin::UnsafeArenaSwap(EventGroup_Envelope_Origin* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EventGroup_Envelope_Origin::InternalSwap(EventGroup_Envelope_Origin* other) {
  using std::swap;
  swap(timestamp_, other->timestamp_);
  swap(position_and_accuracy_, other->position_and_accuracy_);
  swap(orientation_and_accuracy_, other->orientation_and_accuracy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EventGroup_Envelope_Origin::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventGroup_Envelope::InitAsDefaultInstance() {
  ::sensoris::protobuf::messages::data::_EventGroup_Envelope_default_instance_._instance.get_mutable()->origin_ = const_cast< ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin*>(
      ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin::internal_default_instance());
}
void EventGroup_Envelope::unsafe_arena_set_allocated_origin(
    ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* origin) {
  if (GetArenaNoVirtual() == NULL) {
    delete origin_;
  }
  origin_ = origin;
  if (origin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.Envelope.origin)
}
void EventGroup_Envelope::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventGroup_Envelope::kOriginFieldNumber;
const int EventGroup_Envelope::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventGroup_Envelope::EventGroup_Envelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_EventGroup_Envelope.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.messages.data.EventGroup.Envelope)
}
EventGroup_Envelope::EventGroup_Envelope(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  extension_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_EventGroup_Envelope.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.messages.data.EventGroup.Envelope)
}
EventGroup_Envelope::EventGroup_Envelope(const EventGroup_Envelope& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_origin()) {
    origin_ = new ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin(*from.origin_);
  } else {
    origin_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.messages.data.EventGroup.Envelope)
}

void EventGroup_Envelope::SharedCtor() {
  origin_ = NULL;
}

EventGroup_Envelope::~EventGroup_Envelope() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.messages.data.EventGroup.Envelope)
  SharedDtor();
}

void EventGroup_Envelope::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete origin_;
}

void EventGroup_Envelope::ArenaDtor(void* object) {
  EventGroup_Envelope* _this = reinterpret_cast< EventGroup_Envelope* >(object);
  (void)_this;
}
void EventGroup_Envelope::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EventGroup_Envelope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EventGroup_Envelope::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventGroup_Envelope& EventGroup_Envelope::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_EventGroup_Envelope.base);
  return *internal_default_instance();
}


void EventGroup_Envelope::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.messages.data.EventGroup.Envelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && origin_ != NULL) {
    delete origin_;
  }
  origin_ = NULL;
  _internal_metadata_.Clear();
}

bool EventGroup_Envelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.messages.data.EventGroup.Envelope)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sensoris.protobuf.messages.data.EventGroup.Envelope.Origin origin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_origin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.messages.data.EventGroup.Envelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.messages.data.EventGroup.Envelope)
  return false;
#undef DO_
}

void EventGroup_Envelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.messages.data.EventGroup.Envelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.messages.data.EventGroup.Envelope.Origin origin = 1;
  if (this->has_origin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_origin(), output);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.messages.data.EventGroup.Envelope)
}

::google::protobuf::uint8* EventGroup_Envelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.messages.data.EventGroup.Envelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.messages.data.EventGroup.Envelope.Origin origin = 1;
  if (this->has_origin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_origin(), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.messages.data.EventGroup.Envelope)
  return target;
}

size_t EventGroup_Envelope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.messages.data.EventGroup.Envelope)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .sensoris.protobuf.messages.data.EventGroup.Envelope.Origin origin = 1;
  if (this->has_origin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *origin_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventGroup_Envelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.messages.data.EventGroup.Envelope)
  GOOGLE_DCHECK_NE(&from, this);
  const EventGroup_Envelope* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventGroup_Envelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.messages.data.EventGroup.Envelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.messages.data.EventGroup.Envelope)
    MergeFrom(*source);
  }
}

void EventGroup_Envelope::MergeFrom(const EventGroup_Envelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.messages.data.EventGroup.Envelope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_origin()) {
    mutable_origin()->::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin::MergeFrom(from.origin());
  }
}

void EventGroup_Envelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.messages.data.EventGroup.Envelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventGroup_Envelope::CopyFrom(const EventGroup_Envelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.messages.data.EventGroup.Envelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventGroup_Envelope::IsInitialized() const {
  return true;
}

void EventGroup_Envelope::Swap(EventGroup_Envelope* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EventGroup_Envelope* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EventGroup_Envelope::UnsafeArenaSwap(EventGroup_Envelope* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EventGroup_Envelope::InternalSwap(EventGroup_Envelope* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(origin_, other->origin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EventGroup_Envelope::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventGroup::InitAsDefaultInstance() {
  ::sensoris::protobuf::messages::data::_EventGroup_default_instance_._instance.get_mutable()->envelope_ = const_cast< ::sensoris::protobuf::messages::data::EventGroup_Envelope*>(
      ::sensoris::protobuf::messages::data::EventGroup_Envelope::internal_default_instance());
  ::sensoris::protobuf::messages::data::_EventGroup_default_instance_._instance.get_mutable()->localization_category_ = const_cast< ::sensoris::protobuf::categories::localization::LocalizationCategory*>(
      ::sensoris::protobuf::categories::localization::LocalizationCategory::internal_default_instance());
  ::sensoris::protobuf::messages::data::_EventGroup_default_instance_._instance.get_mutable()->object_detection_category_ = const_cast< ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory*>(
      ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory::internal_default_instance());
  ::sensoris::protobuf::messages::data::_EventGroup_default_instance_._instance.get_mutable()->weather_category_ = const_cast< ::sensoris::protobuf::categories::weather::WeatherCategory*>(
      ::sensoris::protobuf::categories::weather::WeatherCategory::internal_default_instance());
  ::sensoris::protobuf::messages::data::_EventGroup_default_instance_._instance.get_mutable()->driving_behavior_category_ = const_cast< ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory*>(
      ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory::internal_default_instance());
  ::sensoris::protobuf::messages::data::_EventGroup_default_instance_._instance.get_mutable()->intersection_attribution_category_ = const_cast< ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory*>(
      ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory::internal_default_instance());
  ::sensoris::protobuf::messages::data::_EventGroup_default_instance_._instance.get_mutable()->road_attribution_category_ = const_cast< ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory*>(
      ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory::internal_default_instance());
  ::sensoris::protobuf::messages::data::_EventGroup_default_instance_._instance.get_mutable()->traffic_regulation_category_ = const_cast< ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory*>(
      ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory::internal_default_instance());
  ::sensoris::protobuf::messages::data::_EventGroup_default_instance_._instance.get_mutable()->traffic_events_category_ = const_cast< ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory*>(
      ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory::internal_default_instance());
  ::sensoris::protobuf::messages::data::_EventGroup_default_instance_._instance.get_mutable()->traffic_maneuver_category_ = const_cast< ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory*>(
      ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory::internal_default_instance());
  ::sensoris::protobuf::messages::data::_EventGroup_default_instance_._instance.get_mutable()->brake_category_ = const_cast< ::sensoris::protobuf::categories::brake::BrakeCategory*>(
      ::sensoris::protobuf::categories::brake::BrakeCategory::internal_default_instance());
  ::sensoris::protobuf::messages::data::_EventGroup_default_instance_._instance.get_mutable()->powertrain_category_ = const_cast< ::sensoris::protobuf::categories::powertrain::PowertrainCategory*>(
      ::sensoris::protobuf::categories::powertrain::PowertrainCategory::internal_default_instance());
  ::sensoris::protobuf::messages::data::_EventGroup_default_instance_._instance.get_mutable()->map_category_ = const_cast< ::sensoris::protobuf::categories::map::MapCategory*>(
      ::sensoris::protobuf::categories::map::MapCategory::internal_default_instance());
}
void EventGroup::unsafe_arena_set_allocated_envelope(
    ::sensoris::protobuf::messages::data::EventGroup_Envelope* envelope) {
  if (GetArenaNoVirtual() == NULL) {
    delete envelope_;
  }
  envelope_ = envelope;
  if (envelope) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.envelope)
}
void EventGroup::unsafe_arena_set_allocated_localization_category(
    ::sensoris::protobuf::categories::localization::LocalizationCategory* localization_category) {
  if (GetArenaNoVirtual() == NULL) {
    delete localization_category_;
  }
  localization_category_ = localization_category;
  if (localization_category) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.localization_category)
}
void EventGroup::clear_localization_category() {
  if (GetArenaNoVirtual() == NULL && localization_category_ != NULL) {
    delete localization_category_;
  }
  localization_category_ = NULL;
}
void EventGroup::unsafe_arena_set_allocated_object_detection_category(
    ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* object_detection_category) {
  if (GetArenaNoVirtual() == NULL) {
    delete object_detection_category_;
  }
  object_detection_category_ = object_detection_category;
  if (object_detection_category) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.object_detection_category)
}
void EventGroup::clear_object_detection_category() {
  if (GetArenaNoVirtual() == NULL && object_detection_category_ != NULL) {
    delete object_detection_category_;
  }
  object_detection_category_ = NULL;
}
void EventGroup::unsafe_arena_set_allocated_weather_category(
    ::sensoris::protobuf::categories::weather::WeatherCategory* weather_category) {
  if (GetArenaNoVirtual() == NULL) {
    delete weather_category_;
  }
  weather_category_ = weather_category;
  if (weather_category) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.weather_category)
}
void EventGroup::clear_weather_category() {
  if (GetArenaNoVirtual() == NULL && weather_category_ != NULL) {
    delete weather_category_;
  }
  weather_category_ = NULL;
}
void EventGroup::unsafe_arena_set_allocated_driving_behavior_category(
    ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* driving_behavior_category) {
  if (GetArenaNoVirtual() == NULL) {
    delete driving_behavior_category_;
  }
  driving_behavior_category_ = driving_behavior_category;
  if (driving_behavior_category) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.driving_behavior_category)
}
void EventGroup::clear_driving_behavior_category() {
  if (GetArenaNoVirtual() == NULL && driving_behavior_category_ != NULL) {
    delete driving_behavior_category_;
  }
  driving_behavior_category_ = NULL;
}
void EventGroup::unsafe_arena_set_allocated_intersection_attribution_category(
    ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* intersection_attribution_category) {
  if (GetArenaNoVirtual() == NULL) {
    delete intersection_attribution_category_;
  }
  intersection_attribution_category_ = intersection_attribution_category;
  if (intersection_attribution_category) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.intersection_attribution_category)
}
void EventGroup::clear_intersection_attribution_category() {
  if (GetArenaNoVirtual() == NULL && intersection_attribution_category_ != NULL) {
    delete intersection_attribution_category_;
  }
  intersection_attribution_category_ = NULL;
}
void EventGroup::unsafe_arena_set_allocated_road_attribution_category(
    ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* road_attribution_category) {
  if (GetArenaNoVirtual() == NULL) {
    delete road_attribution_category_;
  }
  road_attribution_category_ = road_attribution_category;
  if (road_attribution_category) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.road_attribution_category)
}
void EventGroup::clear_road_attribution_category() {
  if (GetArenaNoVirtual() == NULL && road_attribution_category_ != NULL) {
    delete road_attribution_category_;
  }
  road_attribution_category_ = NULL;
}
void EventGroup::unsafe_arena_set_allocated_traffic_regulation_category(
    ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* traffic_regulation_category) {
  if (GetArenaNoVirtual() == NULL) {
    delete traffic_regulation_category_;
  }
  traffic_regulation_category_ = traffic_regulation_category;
  if (traffic_regulation_category) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.traffic_regulation_category)
}
void EventGroup::clear_traffic_regulation_category() {
  if (GetArenaNoVirtual() == NULL && traffic_regulation_category_ != NULL) {
    delete traffic_regulation_category_;
  }
  traffic_regulation_category_ = NULL;
}
void EventGroup::unsafe_arena_set_allocated_traffic_events_category(
    ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* traffic_events_category) {
  if (GetArenaNoVirtual() == NULL) {
    delete traffic_events_category_;
  }
  traffic_events_category_ = traffic_events_category;
  if (traffic_events_category) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.traffic_events_category)
}
void EventGroup::clear_traffic_events_category() {
  if (GetArenaNoVirtual() == NULL && traffic_events_category_ != NULL) {
    delete traffic_events_category_;
  }
  traffic_events_category_ = NULL;
}
void EventGroup::unsafe_arena_set_allocated_traffic_maneuver_category(
    ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* traffic_maneuver_category) {
  if (GetArenaNoVirtual() == NULL) {
    delete traffic_maneuver_category_;
  }
  traffic_maneuver_category_ = traffic_maneuver_category;
  if (traffic_maneuver_category) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.traffic_maneuver_category)
}
void EventGroup::clear_traffic_maneuver_category() {
  if (GetArenaNoVirtual() == NULL && traffic_maneuver_category_ != NULL) {
    delete traffic_maneuver_category_;
  }
  traffic_maneuver_category_ = NULL;
}
void EventGroup::unsafe_arena_set_allocated_brake_category(
    ::sensoris::protobuf::categories::brake::BrakeCategory* brake_category) {
  if (GetArenaNoVirtual() == NULL) {
    delete brake_category_;
  }
  brake_category_ = brake_category;
  if (brake_category) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.brake_category)
}
void EventGroup::clear_brake_category() {
  if (GetArenaNoVirtual() == NULL && brake_category_ != NULL) {
    delete brake_category_;
  }
  brake_category_ = NULL;
}
void EventGroup::unsafe_arena_set_allocated_powertrain_category(
    ::sensoris::protobuf::categories::powertrain::PowertrainCategory* powertrain_category) {
  if (GetArenaNoVirtual() == NULL) {
    delete powertrain_category_;
  }
  powertrain_category_ = powertrain_category;
  if (powertrain_category) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.powertrain_category)
}
void EventGroup::clear_powertrain_category() {
  if (GetArenaNoVirtual() == NULL && powertrain_category_ != NULL) {
    delete powertrain_category_;
  }
  powertrain_category_ = NULL;
}
void EventGroup::unsafe_arena_set_allocated_map_category(
    ::sensoris::protobuf::categories::map::MapCategory* map_category) {
  if (GetArenaNoVirtual() == NULL) {
    delete map_category_;
  }
  map_category_ = map_category;
  if (map_category) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.map_category)
}
void EventGroup::clear_map_category() {
  if (GetArenaNoVirtual() == NULL && map_category_ != NULL) {
    delete map_category_;
  }
  map_category_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventGroup::kEnvelopeFieldNumber;
const int EventGroup::kLocalizationCategoryFieldNumber;
const int EventGroup::kObjectDetectionCategoryFieldNumber;
const int EventGroup::kWeatherCategoryFieldNumber;
const int EventGroup::kDrivingBehaviorCategoryFieldNumber;
const int EventGroup::kIntersectionAttributionCategoryFieldNumber;
const int EventGroup::kRoadAttributionCategoryFieldNumber;
const int EventGroup::kTrafficRegulationCategoryFieldNumber;
const int EventGroup::kTrafficEventsCategoryFieldNumber;
const int EventGroup::kTrafficManeuverCategoryFieldNumber;
const int EventGroup::kBrakeCategoryFieldNumber;
const int EventGroup::kPowertrainCategoryFieldNumber;
const int EventGroup::kMapCategoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventGroup::EventGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_EventGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.messages.data.EventGroup)
}
EventGroup::EventGroup(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_EventGroup.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.messages.data.EventGroup)
}
EventGroup::EventGroup(const EventGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_envelope()) {
    envelope_ = new ::sensoris::protobuf::messages::data::EventGroup_Envelope(*from.envelope_);
  } else {
    envelope_ = NULL;
  }
  if (from.has_localization_category()) {
    localization_category_ = new ::sensoris::protobuf::categories::localization::LocalizationCategory(*from.localization_category_);
  } else {
    localization_category_ = NULL;
  }
  if (from.has_object_detection_category()) {
    object_detection_category_ = new ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory(*from.object_detection_category_);
  } else {
    object_detection_category_ = NULL;
  }
  if (from.has_weather_category()) {
    weather_category_ = new ::sensoris::protobuf::categories::weather::WeatherCategory(*from.weather_category_);
  } else {
    weather_category_ = NULL;
  }
  if (from.has_driving_behavior_category()) {
    driving_behavior_category_ = new ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory(*from.driving_behavior_category_);
  } else {
    driving_behavior_category_ = NULL;
  }
  if (from.has_intersection_attribution_category()) {
    intersection_attribution_category_ = new ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory(*from.intersection_attribution_category_);
  } else {
    intersection_attribution_category_ = NULL;
  }
  if (from.has_road_attribution_category()) {
    road_attribution_category_ = new ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory(*from.road_attribution_category_);
  } else {
    road_attribution_category_ = NULL;
  }
  if (from.has_traffic_regulation_category()) {
    traffic_regulation_category_ = new ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory(*from.traffic_regulation_category_);
  } else {
    traffic_regulation_category_ = NULL;
  }
  if (from.has_traffic_events_category()) {
    traffic_events_category_ = new ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory(*from.traffic_events_category_);
  } else {
    traffic_events_category_ = NULL;
  }
  if (from.has_traffic_maneuver_category()) {
    traffic_maneuver_category_ = new ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory(*from.traffic_maneuver_category_);
  } else {
    traffic_maneuver_category_ = NULL;
  }
  if (from.has_brake_category()) {
    brake_category_ = new ::sensoris::protobuf::categories::brake::BrakeCategory(*from.brake_category_);
  } else {
    brake_category_ = NULL;
  }
  if (from.has_powertrain_category()) {
    powertrain_category_ = new ::sensoris::protobuf::categories::powertrain::PowertrainCategory(*from.powertrain_category_);
  } else {
    powertrain_category_ = NULL;
  }
  if (from.has_map_category()) {
    map_category_ = new ::sensoris::protobuf::categories::map::MapCategory(*from.map_category_);
  } else {
    map_category_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.messages.data.EventGroup)
}

void EventGroup::SharedCtor() {
  ::memset(&envelope_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&map_category_) -
      reinterpret_cast<char*>(&envelope_)) + sizeof(map_category_));
}

EventGroup::~EventGroup() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.messages.data.EventGroup)
  SharedDtor();
}

void EventGroup::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete envelope_;
  if (this != internal_default_instance()) delete localization_category_;
  if (this != internal_default_instance()) delete object_detection_category_;
  if (this != internal_default_instance()) delete weather_category_;
  if (this != internal_default_instance()) delete driving_behavior_category_;
  if (this != internal_default_instance()) delete intersection_attribution_category_;
  if (this != internal_default_instance()) delete road_attribution_category_;
  if (this != internal_default_instance()) delete traffic_regulation_category_;
  if (this != internal_default_instance()) delete traffic_events_category_;
  if (this != internal_default_instance()) delete traffic_maneuver_category_;
  if (this != internal_default_instance()) delete brake_category_;
  if (this != internal_default_instance()) delete powertrain_category_;
  if (this != internal_default_instance()) delete map_category_;
}

void EventGroup::ArenaDtor(void* object) {
  EventGroup* _this = reinterpret_cast< EventGroup* >(object);
  (void)_this;
}
void EventGroup::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EventGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EventGroup::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventGroup& EventGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_EventGroup.base);
  return *internal_default_instance();
}


void EventGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.messages.data.EventGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && envelope_ != NULL) {
    delete envelope_;
  }
  envelope_ = NULL;
  if (GetArenaNoVirtual() == NULL && localization_category_ != NULL) {
    delete localization_category_;
  }
  localization_category_ = NULL;
  if (GetArenaNoVirtual() == NULL && object_detection_category_ != NULL) {
    delete object_detection_category_;
  }
  object_detection_category_ = NULL;
  if (GetArenaNoVirtual() == NULL && weather_category_ != NULL) {
    delete weather_category_;
  }
  weather_category_ = NULL;
  if (GetArenaNoVirtual() == NULL && driving_behavior_category_ != NULL) {
    delete driving_behavior_category_;
  }
  driving_behavior_category_ = NULL;
  if (GetArenaNoVirtual() == NULL && intersection_attribution_category_ != NULL) {
    delete intersection_attribution_category_;
  }
  intersection_attribution_category_ = NULL;
  if (GetArenaNoVirtual() == NULL && road_attribution_category_ != NULL) {
    delete road_attribution_category_;
  }
  road_attribution_category_ = NULL;
  if (GetArenaNoVirtual() == NULL && traffic_regulation_category_ != NULL) {
    delete traffic_regulation_category_;
  }
  traffic_regulation_category_ = NULL;
  if (GetArenaNoVirtual() == NULL && traffic_events_category_ != NULL) {
    delete traffic_events_category_;
  }
  traffic_events_category_ = NULL;
  if (GetArenaNoVirtual() == NULL && traffic_maneuver_category_ != NULL) {
    delete traffic_maneuver_category_;
  }
  traffic_maneuver_category_ = NULL;
  if (GetArenaNoVirtual() == NULL && brake_category_ != NULL) {
    delete brake_category_;
  }
  brake_category_ = NULL;
  if (GetArenaNoVirtual() == NULL && powertrain_category_ != NULL) {
    delete powertrain_category_;
  }
  powertrain_category_ = NULL;
  if (GetArenaNoVirtual() == NULL && map_category_ != NULL) {
    delete map_category_;
  }
  map_category_ = NULL;
  _internal_metadata_.Clear();
}

bool EventGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.messages.data.EventGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sensoris.protobuf.messages.data.EventGroup.Envelope envelope = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_envelope()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.categories.localization.LocalizationCategory localization_category = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_localization_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory object_detection_category = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_object_detection_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.categories.weather.WeatherCategory weather_category = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_weather_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory driving_behavior_category = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_driving_behavior_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory intersection_attribution_category = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_intersection_attribution_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.categories.roadattribution.RoadAttributionCategory road_attribution_category = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_road_attribution_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory traffic_regulation_category = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_traffic_regulation_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.categories.trafficevents.TrafficEventsCategory traffic_events_category = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_traffic_events_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.categories.trafficmaneuver.TrafficManeuverCategory traffic_maneuver_category = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_traffic_maneuver_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.categories.brake.BrakeCategory brake_category = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_brake_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.categories.powertrain.PowertrainCategory powertrain_category = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_powertrain_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.categories.map.MapCategory map_category = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_map_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.messages.data.EventGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.messages.data.EventGroup)
  return false;
#undef DO_
}

void EventGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.messages.data.EventGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.messages.data.EventGroup.Envelope envelope = 1;
  if (this->has_envelope()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_envelope(), output);
  }

  // .sensoris.protobuf.categories.localization.LocalizationCategory localization_category = 2;
  if (this->has_localization_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_localization_category(), output);
  }

  // .sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory object_detection_category = 3;
  if (this->has_object_detection_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_object_detection_category(), output);
  }

  // .sensoris.protobuf.categories.weather.WeatherCategory weather_category = 4;
  if (this->has_weather_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_weather_category(), output);
  }

  // .sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory driving_behavior_category = 5;
  if (this->has_driving_behavior_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_driving_behavior_category(), output);
  }

  // .sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory intersection_attribution_category = 6;
  if (this->has_intersection_attribution_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_intersection_attribution_category(), output);
  }

  // .sensoris.protobuf.categories.roadattribution.RoadAttributionCategory road_attribution_category = 7;
  if (this->has_road_attribution_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_road_attribution_category(), output);
  }

  // .sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory traffic_regulation_category = 8;
  if (this->has_traffic_regulation_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_traffic_regulation_category(), output);
  }

  // .sensoris.protobuf.categories.trafficevents.TrafficEventsCategory traffic_events_category = 9;
  if (this->has_traffic_events_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_traffic_events_category(), output);
  }

  // .sensoris.protobuf.categories.trafficmaneuver.TrafficManeuverCategory traffic_maneuver_category = 10;
  if (this->has_traffic_maneuver_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_traffic_maneuver_category(), output);
  }

  // .sensoris.protobuf.categories.brake.BrakeCategory brake_category = 11;
  if (this->has_brake_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_brake_category(), output);
  }

  // .sensoris.protobuf.categories.powertrain.PowertrainCategory powertrain_category = 12;
  if (this->has_powertrain_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_powertrain_category(), output);
  }

  // .sensoris.protobuf.categories.map.MapCategory map_category = 13;
  if (this->has_map_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_map_category(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.messages.data.EventGroup)
}

::google::protobuf::uint8* EventGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.messages.data.EventGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.messages.data.EventGroup.Envelope envelope = 1;
  if (this->has_envelope()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_envelope(), deterministic, target);
  }

  // .sensoris.protobuf.categories.localization.LocalizationCategory localization_category = 2;
  if (this->has_localization_category()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_localization_category(), deterministic, target);
  }

  // .sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory object_detection_category = 3;
  if (this->has_object_detection_category()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_object_detection_category(), deterministic, target);
  }

  // .sensoris.protobuf.categories.weather.WeatherCategory weather_category = 4;
  if (this->has_weather_category()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_weather_category(), deterministic, target);
  }

  // .sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory driving_behavior_category = 5;
  if (this->has_driving_behavior_category()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_driving_behavior_category(), deterministic, target);
  }

  // .sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory intersection_attribution_category = 6;
  if (this->has_intersection_attribution_category()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_intersection_attribution_category(), deterministic, target);
  }

  // .sensoris.protobuf.categories.roadattribution.RoadAttributionCategory road_attribution_category = 7;
  if (this->has_road_attribution_category()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_road_attribution_category(), deterministic, target);
  }

  // .sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory traffic_regulation_category = 8;
  if (this->has_traffic_regulation_category()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_traffic_regulation_category(), deterministic, target);
  }

  // .sensoris.protobuf.categories.trafficevents.TrafficEventsCategory traffic_events_category = 9;
  if (this->has_traffic_events_category()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_traffic_events_category(), deterministic, target);
  }

  // .sensoris.protobuf.categories.trafficmaneuver.TrafficManeuverCategory traffic_maneuver_category = 10;
  if (this->has_traffic_maneuver_category()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_traffic_maneuver_category(), deterministic, target);
  }

  // .sensoris.protobuf.categories.brake.BrakeCategory brake_category = 11;
  if (this->has_brake_category()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_brake_category(), deterministic, target);
  }

  // .sensoris.protobuf.categories.powertrain.PowertrainCategory powertrain_category = 12;
  if (this->has_powertrain_category()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_powertrain_category(), deterministic, target);
  }

  // .sensoris.protobuf.categories.map.MapCategory map_category = 13;
  if (this->has_map_category()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_map_category(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.messages.data.EventGroup)
  return target;
}

size_t EventGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.messages.data.EventGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .sensoris.protobuf.messages.data.EventGroup.Envelope envelope = 1;
  if (this->has_envelope()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *envelope_);
  }

  // .sensoris.protobuf.categories.localization.LocalizationCategory localization_category = 2;
  if (this->has_localization_category()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *localization_category_);
  }

  // .sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory object_detection_category = 3;
  if (this->has_object_detection_category()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *object_detection_category_);
  }

  // .sensoris.protobuf.categories.weather.WeatherCategory weather_category = 4;
  if (this->has_weather_category()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *weather_category_);
  }

  // .sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory driving_behavior_category = 5;
  if (this->has_driving_behavior_category()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *driving_behavior_category_);
  }

  // .sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory intersection_attribution_category = 6;
  if (this->has_intersection_attribution_category()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *intersection_attribution_category_);
  }

  // .sensoris.protobuf.categories.roadattribution.RoadAttributionCategory road_attribution_category = 7;
  if (this->has_road_attribution_category()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *road_attribution_category_);
  }

  // .sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory traffic_regulation_category = 8;
  if (this->has_traffic_regulation_category()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *traffic_regulation_category_);
  }

  // .sensoris.protobuf.categories.trafficevents.TrafficEventsCategory traffic_events_category = 9;
  if (this->has_traffic_events_category()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *traffic_events_category_);
  }

  // .sensoris.protobuf.categories.trafficmaneuver.TrafficManeuverCategory traffic_maneuver_category = 10;
  if (this->has_traffic_maneuver_category()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *traffic_maneuver_category_);
  }

  // .sensoris.protobuf.categories.brake.BrakeCategory brake_category = 11;
  if (this->has_brake_category()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *brake_category_);
  }

  // .sensoris.protobuf.categories.powertrain.PowertrainCategory powertrain_category = 12;
  if (this->has_powertrain_category()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *powertrain_category_);
  }

  // .sensoris.protobuf.categories.map.MapCategory map_category = 13;
  if (this->has_map_category()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *map_category_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.messages.data.EventGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const EventGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.messages.data.EventGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.messages.data.EventGroup)
    MergeFrom(*source);
  }
}

void EventGroup::MergeFrom(const EventGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.messages.data.EventGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_envelope()) {
    mutable_envelope()->::sensoris::protobuf::messages::data::EventGroup_Envelope::MergeFrom(from.envelope());
  }
  if (from.has_localization_category()) {
    mutable_localization_category()->::sensoris::protobuf::categories::localization::LocalizationCategory::MergeFrom(from.localization_category());
  }
  if (from.has_object_detection_category()) {
    mutable_object_detection_category()->::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory::MergeFrom(from.object_detection_category());
  }
  if (from.has_weather_category()) {
    mutable_weather_category()->::sensoris::protobuf::categories::weather::WeatherCategory::MergeFrom(from.weather_category());
  }
  if (from.has_driving_behavior_category()) {
    mutable_driving_behavior_category()->::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory::MergeFrom(from.driving_behavior_category());
  }
  if (from.has_intersection_attribution_category()) {
    mutable_intersection_attribution_category()->::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory::MergeFrom(from.intersection_attribution_category());
  }
  if (from.has_road_attribution_category()) {
    mutable_road_attribution_category()->::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory::MergeFrom(from.road_attribution_category());
  }
  if (from.has_traffic_regulation_category()) {
    mutable_traffic_regulation_category()->::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory::MergeFrom(from.traffic_regulation_category());
  }
  if (from.has_traffic_events_category()) {
    mutable_traffic_events_category()->::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory::MergeFrom(from.traffic_events_category());
  }
  if (from.has_traffic_maneuver_category()) {
    mutable_traffic_maneuver_category()->::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory::MergeFrom(from.traffic_maneuver_category());
  }
  if (from.has_brake_category()) {
    mutable_brake_category()->::sensoris::protobuf::categories::brake::BrakeCategory::MergeFrom(from.brake_category());
  }
  if (from.has_powertrain_category()) {
    mutable_powertrain_category()->::sensoris::protobuf::categories::powertrain::PowertrainCategory::MergeFrom(from.powertrain_category());
  }
  if (from.has_map_category()) {
    mutable_map_category()->::sensoris::protobuf::categories::map::MapCategory::MergeFrom(from.map_category());
  }
}

void EventGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.messages.data.EventGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventGroup::CopyFrom(const EventGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.messages.data.EventGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventGroup::IsInitialized() const {
  return true;
}

void EventGroup::Swap(EventGroup* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EventGroup* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EventGroup::UnsafeArenaSwap(EventGroup* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EventGroup::InternalSwap(EventGroup* other) {
  using std::swap;
  swap(envelope_, other->envelope_);
  swap(localization_category_, other->localization_category_);
  swap(object_detection_category_, other->object_detection_category_);
  swap(weather_category_, other->weather_category_);
  swap(driving_behavior_category_, other->driving_behavior_category_);
  swap(intersection_attribution_category_, other->intersection_attribution_category_);
  swap(road_attribution_category_, other->road_attribution_category_);
  swap(traffic_regulation_category_, other->traffic_regulation_category_);
  swap(traffic_events_category_, other->traffic_events_category_);
  swap(traffic_maneuver_category_, other->traffic_maneuver_category_);
  swap(brake_category_, other->brake_category_);
  swap(powertrain_category_, other->powertrain_category_);
  swap(map_category_, other->map_category_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EventGroup::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataMessage_AbsolutePaths_Path::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataMessage_AbsolutePaths_Path::kFieldNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataMessage_AbsolutePaths_Path::DataMessage_AbsolutePaths_Path()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_AbsolutePaths_Path.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
}
DataMessage_AbsolutePaths_Path::DataMessage_AbsolutePaths_Path(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  field_number_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_AbsolutePaths_Path.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
}
DataMessage_AbsolutePaths_Path::DataMessage_AbsolutePaths_Path(const DataMessage_AbsolutePaths_Path& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      field_number_(from.field_number_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
}

void DataMessage_AbsolutePaths_Path::SharedCtor() {
}

DataMessage_AbsolutePaths_Path::~DataMessage_AbsolutePaths_Path() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
  SharedDtor();
}

void DataMessage_AbsolutePaths_Path::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DataMessage_AbsolutePaths_Path::ArenaDtor(void* object) {
  DataMessage_AbsolutePaths_Path* _this = reinterpret_cast< DataMessage_AbsolutePaths_Path* >(object);
  (void)_this;
}
void DataMessage_AbsolutePaths_Path::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DataMessage_AbsolutePaths_Path::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataMessage_AbsolutePaths_Path::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataMessage_AbsolutePaths_Path& DataMessage_AbsolutePaths_Path::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_AbsolutePaths_Path.base);
  return *internal_default_instance();
}


void DataMessage_AbsolutePaths_Path::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_number_.Clear();
  _internal_metadata_.Clear();
}

bool DataMessage_AbsolutePaths_Path::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 field_number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_field_number())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_field_number())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
  return false;
#undef DO_
}

void DataMessage_AbsolutePaths_Path::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 field_number = 1;
  if (this->field_number_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _field_number_cached_byte_size_));
  }
  for (int i = 0, n = this->field_number_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->field_number(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
}

::google::protobuf::uint8* DataMessage_AbsolutePaths_Path::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 field_number = 1;
  if (this->field_number_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _field_number_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->field_number_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
  return target;
}

size_t DataMessage_AbsolutePaths_Path::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 field_number = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->field_number_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _field_number_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataMessage_AbsolutePaths_Path::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
  GOOGLE_DCHECK_NE(&from, this);
  const DataMessage_AbsolutePaths_Path* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataMessage_AbsolutePaths_Path>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
    MergeFrom(*source);
  }
}

void DataMessage_AbsolutePaths_Path::MergeFrom(const DataMessage_AbsolutePaths_Path& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  field_number_.MergeFrom(from.field_number_);
}

void DataMessage_AbsolutePaths_Path::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMessage_AbsolutePaths_Path::CopyFrom(const DataMessage_AbsolutePaths_Path& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMessage_AbsolutePaths_Path::IsInitialized() const {
  return true;
}

void DataMessage_AbsolutePaths_Path::Swap(DataMessage_AbsolutePaths_Path* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DataMessage_AbsolutePaths_Path* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DataMessage_AbsolutePaths_Path::UnsafeArenaSwap(DataMessage_AbsolutePaths_Path* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DataMessage_AbsolutePaths_Path::InternalSwap(DataMessage_AbsolutePaths_Path* other) {
  using std::swap;
  field_number_.InternalSwap(&other->field_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataMessage_AbsolutePaths_Path::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataMessage_AbsolutePaths::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataMessage_AbsolutePaths::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataMessage_AbsolutePaths::DataMessage_AbsolutePaths()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_AbsolutePaths.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
}
DataMessage_AbsolutePaths::DataMessage_AbsolutePaths(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  path_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_AbsolutePaths.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
}
DataMessage_AbsolutePaths::DataMessage_AbsolutePaths(const DataMessage_AbsolutePaths& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      path_(from.path_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
}

void DataMessage_AbsolutePaths::SharedCtor() {
}

DataMessage_AbsolutePaths::~DataMessage_AbsolutePaths() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
  SharedDtor();
}

void DataMessage_AbsolutePaths::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DataMessage_AbsolutePaths::ArenaDtor(void* object) {
  DataMessage_AbsolutePaths* _this = reinterpret_cast< DataMessage_AbsolutePaths* >(object);
  (void)_this;
}
void DataMessage_AbsolutePaths::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DataMessage_AbsolutePaths::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataMessage_AbsolutePaths::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataMessage_AbsolutePaths& DataMessage_AbsolutePaths::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_AbsolutePaths.base);
  return *internal_default_instance();
}


void DataMessage_AbsolutePaths::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.Clear();
  _internal_metadata_.Clear();
}

bool DataMessage_AbsolutePaths::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
  return false;
#undef DO_
}

void DataMessage_AbsolutePaths::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path path = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->path(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
}

::google::protobuf::uint8* DataMessage_AbsolutePaths::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path path = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->path(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
  return target;
}

size_t DataMessage_AbsolutePaths::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path path = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->path_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->path(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataMessage_AbsolutePaths::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
  GOOGLE_DCHECK_NE(&from, this);
  const DataMessage_AbsolutePaths* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataMessage_AbsolutePaths>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
    MergeFrom(*source);
  }
}

void DataMessage_AbsolutePaths::MergeFrom(const DataMessage_AbsolutePaths& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  path_.MergeFrom(from.path_);
}

void DataMessage_AbsolutePaths::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMessage_AbsolutePaths::CopyFrom(const DataMessage_AbsolutePaths& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMessage_AbsolutePaths::IsInitialized() const {
  return true;
}

void DataMessage_AbsolutePaths::Swap(DataMessage_AbsolutePaths* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DataMessage_AbsolutePaths* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DataMessage_AbsolutePaths::UnsafeArenaSwap(DataMessage_AbsolutePaths* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DataMessage_AbsolutePaths::InternalSwap(DataMessage_AbsolutePaths* other) {
  using std::swap;
  CastToBase(&path_)->InternalSwap(CastToBase(&other->path_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataMessage_AbsolutePaths::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataMessage_Paths::InitAsDefaultInstance() {
  ::sensoris::protobuf::messages::data::_DataMessage_Paths_default_instance_.absolute_paths_ = const_cast< ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths*>(
      ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths::internal_default_instance());
}
void DataMessage_Paths::set_allocated_absolute_paths(::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* absolute_paths) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (absolute_paths) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(absolute_paths);
    if (message_arena != submessage_arena) {
      absolute_paths = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, absolute_paths, submessage_arena);
    }
    set_has_absolute_paths();
    type_.absolute_paths_ = absolute_paths;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Paths.absolute_paths)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataMessage_Paths::kAbsolutePathsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataMessage_Paths::DataMessage_Paths()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Paths.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.messages.data.DataMessage.Paths)
}
DataMessage_Paths::DataMessage_Paths(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Paths.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.messages.data.DataMessage.Paths)
}
DataMessage_Paths::DataMessage_Paths(const DataMessage_Paths& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kAbsolutePaths: {
      mutable_absolute_paths()->::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths::MergeFrom(from.absolute_paths());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.messages.data.DataMessage.Paths)
}

void DataMessage_Paths::SharedCtor() {
  clear_has_type();
}

DataMessage_Paths::~DataMessage_Paths() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.messages.data.DataMessage.Paths)
  SharedDtor();
}

void DataMessage_Paths::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_type()) {
    clear_type();
  }
}

void DataMessage_Paths::ArenaDtor(void* object) {
  DataMessage_Paths* _this = reinterpret_cast< DataMessage_Paths* >(object);
  (void)_this;
}
void DataMessage_Paths::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DataMessage_Paths::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataMessage_Paths::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataMessage_Paths& DataMessage_Paths::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Paths.base);
  return *internal_default_instance();
}


void DataMessage_Paths::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:sensoris.protobuf.messages.data.DataMessage.Paths)
  switch (type_case()) {
    case kAbsolutePaths: {
      if (GetArenaNoVirtual() == NULL) {
        delete type_.absolute_paths_;
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void DataMessage_Paths::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.messages.data.DataMessage.Paths)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear();
}

bool DataMessage_Paths::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.messages.data.DataMessage.Paths)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sensoris.protobuf.messages.data.DataMessage.AbsolutePaths absolute_paths = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_absolute_paths()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.messages.data.DataMessage.Paths)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.messages.data.DataMessage.Paths)
  return false;
#undef DO_
}

void DataMessage_Paths::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.messages.data.DataMessage.Paths)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.messages.data.DataMessage.AbsolutePaths absolute_paths = 1;
  if (has_absolute_paths()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_absolute_paths(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.messages.data.DataMessage.Paths)
}

::google::protobuf::uint8* DataMessage_Paths::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.messages.data.DataMessage.Paths)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.messages.data.DataMessage.AbsolutePaths absolute_paths = 1;
  if (has_absolute_paths()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_absolute_paths(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.messages.data.DataMessage.Paths)
  return target;
}

size_t DataMessage_Paths::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.messages.data.DataMessage.Paths)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (type_case()) {
    // .sensoris.protobuf.messages.data.DataMessage.AbsolutePaths absolute_paths = 1;
    case kAbsolutePaths: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.absolute_paths_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataMessage_Paths::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.messages.data.DataMessage.Paths)
  GOOGLE_DCHECK_NE(&from, this);
  const DataMessage_Paths* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataMessage_Paths>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.messages.data.DataMessage.Paths)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.messages.data.DataMessage.Paths)
    MergeFrom(*source);
  }
}

void DataMessage_Paths::MergeFrom(const DataMessage_Paths& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.messages.data.DataMessage.Paths)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kAbsolutePaths: {
      mutable_absolute_paths()->::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths::MergeFrom(from.absolute_paths());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void DataMessage_Paths::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.messages.data.DataMessage.Paths)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMessage_Paths::CopyFrom(const DataMessage_Paths& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.messages.data.DataMessage.Paths)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMessage_Paths::IsInitialized() const {
  return true;
}

void DataMessage_Paths::Swap(DataMessage_Paths* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DataMessage_Paths* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DataMessage_Paths::UnsafeArenaSwap(DataMessage_Paths* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DataMessage_Paths::InternalSwap(DataMessage_Paths* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataMessage_Paths::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataMessage_Envelope_Ids::InitAsDefaultInstance() {
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_Ids_default_instance_._instance.get_mutable()->session_id_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_Ids_default_instance_._instance.get_mutable()->message_id_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_Ids_default_instance_._instance.get_mutable()->last_message_of_session_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_Ids_default_instance_._instance.get_mutable()->vehicle_fleet_id_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_Ids_default_instance_._instance.get_mutable()->vehicle_id_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_Ids_default_instance_._instance.get_mutable()->driver_id_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
}
void DataMessage_Envelope_Ids::unsafe_arena_set_allocated_session_id(
    ::google::protobuf::StringValue* session_id) {
  if (GetArenaNoVirtual() == NULL) {
    delete session_id_;
  }
  session_id_ = session_id;
  if (session_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.session_id)
}
void DataMessage_Envelope_Ids::clear_session_id() {
  if (GetArenaNoVirtual() == NULL && session_id_ != NULL) {
    delete session_id_;
  }
  session_id_ = NULL;
}
void DataMessage_Envelope_Ids::unsafe_arena_set_allocated_message_id(
    ::google::protobuf::Int64Value* message_id) {
  if (GetArenaNoVirtual() == NULL) {
    delete message_id_;
  }
  message_id_ = message_id;
  if (message_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.message_id)
}
void DataMessage_Envelope_Ids::clear_message_id() {
  if (GetArenaNoVirtual() == NULL && message_id_ != NULL) {
    delete message_id_;
  }
  message_id_ = NULL;
}
void DataMessage_Envelope_Ids::unsafe_arena_set_allocated_last_message_of_session(
    ::google::protobuf::BoolValue* last_message_of_session) {
  if (GetArenaNoVirtual() == NULL) {
    delete last_message_of_session_;
  }
  last_message_of_session_ = last_message_of_session;
  if (last_message_of_session) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.last_message_of_session)
}
void DataMessage_Envelope_Ids::clear_last_message_of_session() {
  if (GetArenaNoVirtual() == NULL && last_message_of_session_ != NULL) {
    delete last_message_of_session_;
  }
  last_message_of_session_ = NULL;
}
void DataMessage_Envelope_Ids::unsafe_arena_set_allocated_vehicle_fleet_id(
    ::google::protobuf::StringValue* vehicle_fleet_id) {
  if (GetArenaNoVirtual() == NULL) {
    delete vehicle_fleet_id_;
  }
  vehicle_fleet_id_ = vehicle_fleet_id;
  if (vehicle_fleet_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_fleet_id)
}
void DataMessage_Envelope_Ids::clear_vehicle_fleet_id() {
  if (GetArenaNoVirtual() == NULL && vehicle_fleet_id_ != NULL) {
    delete vehicle_fleet_id_;
  }
  vehicle_fleet_id_ = NULL;
}
void DataMessage_Envelope_Ids::unsafe_arena_set_allocated_vehicle_id(
    ::google::protobuf::StringValue* vehicle_id) {
  if (GetArenaNoVirtual() == NULL) {
    delete vehicle_id_;
  }
  vehicle_id_ = vehicle_id;
  if (vehicle_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_id)
}
void DataMessage_Envelope_Ids::clear_vehicle_id() {
  if (GetArenaNoVirtual() == NULL && vehicle_id_ != NULL) {
    delete vehicle_id_;
  }
  vehicle_id_ = NULL;
}
void DataMessage_Envelope_Ids::unsafe_arena_set_allocated_driver_id(
    ::google::protobuf::StringValue* driver_id) {
  if (GetArenaNoVirtual() == NULL) {
    delete driver_id_;
  }
  driver_id_ = driver_id;
  if (driver_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.driver_id)
}
void DataMessage_Envelope_Ids::clear_driver_id() {
  if (GetArenaNoVirtual() == NULL && driver_id_ != NULL) {
    delete driver_id_;
  }
  driver_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataMessage_Envelope_Ids::kSessionIdFieldNumber;
const int DataMessage_Envelope_Ids::kMessageIdFieldNumber;
const int DataMessage_Envelope_Ids::kLastMessageOfSessionFieldNumber;
const int DataMessage_Envelope_Ids::kVehicleFleetIdFieldNumber;
const int DataMessage_Envelope_Ids::kVehicleIdFieldNumber;
const int DataMessage_Envelope_Ids::kDriverIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataMessage_Envelope_Ids::DataMessage_Envelope_Ids()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope_Ids.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
}
DataMessage_Envelope_Ids::DataMessage_Envelope_Ids(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope_Ids.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
}
DataMessage_Envelope_Ids::DataMessage_Envelope_Ids(const DataMessage_Envelope_Ids& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_session_id()) {
    session_id_ = new ::google::protobuf::StringValue(*from.session_id_);
  } else {
    session_id_ = NULL;
  }
  if (from.has_message_id()) {
    message_id_ = new ::google::protobuf::Int64Value(*from.message_id_);
  } else {
    message_id_ = NULL;
  }
  if (from.has_last_message_of_session()) {
    last_message_of_session_ = new ::google::protobuf::BoolValue(*from.last_message_of_session_);
  } else {
    last_message_of_session_ = NULL;
  }
  if (from.has_vehicle_fleet_id()) {
    vehicle_fleet_id_ = new ::google::protobuf::StringValue(*from.vehicle_fleet_id_);
  } else {
    vehicle_fleet_id_ = NULL;
  }
  if (from.has_vehicle_id()) {
    vehicle_id_ = new ::google::protobuf::StringValue(*from.vehicle_id_);
  } else {
    vehicle_id_ = NULL;
  }
  if (from.has_driver_id()) {
    driver_id_ = new ::google::protobuf::StringValue(*from.driver_id_);
  } else {
    driver_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
}

void DataMessage_Envelope_Ids::SharedCtor() {
  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&driver_id_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(driver_id_));
}

DataMessage_Envelope_Ids::~DataMessage_Envelope_Ids() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
  SharedDtor();
}

void DataMessage_Envelope_Ids::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete session_id_;
  if (this != internal_default_instance()) delete message_id_;
  if (this != internal_default_instance()) delete last_message_of_session_;
  if (this != internal_default_instance()) delete vehicle_fleet_id_;
  if (this != internal_default_instance()) delete vehicle_id_;
  if (this != internal_default_instance()) delete driver_id_;
}

void DataMessage_Envelope_Ids::ArenaDtor(void* object) {
  DataMessage_Envelope_Ids* _this = reinterpret_cast< DataMessage_Envelope_Ids* >(object);
  (void)_this;
}
void DataMessage_Envelope_Ids::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DataMessage_Envelope_Ids::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataMessage_Envelope_Ids::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataMessage_Envelope_Ids& DataMessage_Envelope_Ids::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope_Ids.base);
  return *internal_default_instance();
}


void DataMessage_Envelope_Ids::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && session_id_ != NULL) {
    delete session_id_;
  }
  session_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && message_id_ != NULL) {
    delete message_id_;
  }
  message_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_message_of_session_ != NULL) {
    delete last_message_of_session_;
  }
  last_message_of_session_ = NULL;
  if (GetArenaNoVirtual() == NULL && vehicle_fleet_id_ != NULL) {
    delete vehicle_fleet_id_;
  }
  vehicle_fleet_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && vehicle_id_ != NULL) {
    delete vehicle_id_;
  }
  vehicle_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && driver_id_ != NULL) {
    delete driver_id_;
  }
  driver_id_ = NULL;
  _internal_metadata_.Clear();
}

bool DataMessage_Envelope_Ids::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.StringValue session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_session_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value message_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue last_message_of_session = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_message_of_session()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue vehicle_fleet_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehicle_fleet_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue vehicle_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehicle_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue driver_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_driver_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
  return false;
#undef DO_
}

void DataMessage_Envelope_Ids::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue session_id = 1;
  if (this->has_session_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_session_id(), output);
  }

  // .google.protobuf.Int64Value message_id = 2;
  if (this->has_message_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_message_id(), output);
  }

  // .google.protobuf.BoolValue last_message_of_session = 3;
  if (this->has_last_message_of_session()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_last_message_of_session(), output);
  }

  // .google.protobuf.StringValue vehicle_fleet_id = 4;
  if (this->has_vehicle_fleet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_vehicle_fleet_id(), output);
  }

  // .google.protobuf.StringValue vehicle_id = 5;
  if (this->has_vehicle_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_vehicle_id(), output);
  }

  // .google.protobuf.StringValue driver_id = 6;
  if (this->has_driver_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_driver_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
}

::google::protobuf::uint8* DataMessage_Envelope_Ids::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue session_id = 1;
  if (this->has_session_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_session_id(), deterministic, target);
  }

  // .google.protobuf.Int64Value message_id = 2;
  if (this->has_message_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_message_id(), deterministic, target);
  }

  // .google.protobuf.BoolValue last_message_of_session = 3;
  if (this->has_last_message_of_session()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_last_message_of_session(), deterministic, target);
  }

  // .google.protobuf.StringValue vehicle_fleet_id = 4;
  if (this->has_vehicle_fleet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_vehicle_fleet_id(), deterministic, target);
  }

  // .google.protobuf.StringValue vehicle_id = 5;
  if (this->has_vehicle_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_vehicle_id(), deterministic, target);
  }

  // .google.protobuf.StringValue driver_id = 6;
  if (this->has_driver_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_driver_id(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
  return target;
}

size_t DataMessage_Envelope_Ids::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.StringValue session_id = 1;
  if (this->has_session_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *session_id_);
  }

  // .google.protobuf.Int64Value message_id = 2;
  if (this->has_message_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *message_id_);
  }

  // .google.protobuf.BoolValue last_message_of_session = 3;
  if (this->has_last_message_of_session()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *last_message_of_session_);
  }

  // .google.protobuf.StringValue vehicle_fleet_id = 4;
  if (this->has_vehicle_fleet_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vehicle_fleet_id_);
  }

  // .google.protobuf.StringValue vehicle_id = 5;
  if (this->has_vehicle_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vehicle_id_);
  }

  // .google.protobuf.StringValue driver_id = 6;
  if (this->has_driver_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *driver_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataMessage_Envelope_Ids::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
  GOOGLE_DCHECK_NE(&from, this);
  const DataMessage_Envelope_Ids* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataMessage_Envelope_Ids>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
    MergeFrom(*source);
  }
}

void DataMessage_Envelope_Ids::MergeFrom(const DataMessage_Envelope_Ids& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_session_id()) {
    mutable_session_id()->::google::protobuf::StringValue::MergeFrom(from.session_id());
  }
  if (from.has_message_id()) {
    mutable_message_id()->::google::protobuf::Int64Value::MergeFrom(from.message_id());
  }
  if (from.has_last_message_of_session()) {
    mutable_last_message_of_session()->::google::protobuf::BoolValue::MergeFrom(from.last_message_of_session());
  }
  if (from.has_vehicle_fleet_id()) {
    mutable_vehicle_fleet_id()->::google::protobuf::StringValue::MergeFrom(from.vehicle_fleet_id());
  }
  if (from.has_vehicle_id()) {
    mutable_vehicle_id()->::google::protobuf::StringValue::MergeFrom(from.vehicle_id());
  }
  if (from.has_driver_id()) {
    mutable_driver_id()->::google::protobuf::StringValue::MergeFrom(from.driver_id());
  }
}

void DataMessage_Envelope_Ids::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMessage_Envelope_Ids::CopyFrom(const DataMessage_Envelope_Ids& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMessage_Envelope_Ids::IsInitialized() const {
  return true;
}

void DataMessage_Envelope_Ids::Swap(DataMessage_Envelope_Ids* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DataMessage_Envelope_Ids* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DataMessage_Envelope_Ids::UnsafeArenaSwap(DataMessage_Envelope_Ids* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DataMessage_Envelope_Ids::InternalSwap(DataMessage_Envelope_Ids* other) {
  using std::swap;
  swap(session_id_, other->session_id_);
  swap(message_id_, other->message_id_);
  swap(last_message_of_session_, other->last_message_of_session_);
  swap(vehicle_fleet_id_, other->vehicle_fleet_id_);
  swap(vehicle_id_, other->vehicle_id_);
  swap(driver_id_, other->driver_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataMessage_Envelope_Ids::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataMessage_Envelope_FieldResolutionOverride::InitAsDefaultInstance() {
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_FieldResolutionOverride_default_instance_._instance.get_mutable()->paths_ = const_cast< ::sensoris::protobuf::messages::data::DataMessage_Paths*>(
      ::sensoris::protobuf::messages::data::DataMessage_Paths::internal_default_instance());
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_FieldResolutionOverride_default_instance_._instance.get_mutable()->exponent_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
void DataMessage_Envelope_FieldResolutionOverride::unsafe_arena_set_allocated_paths(
    ::sensoris::protobuf::messages::data::DataMessage_Paths* paths) {
  if (GetArenaNoVirtual() == NULL) {
    delete paths_;
  }
  paths_ = paths;
  if (paths) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.paths)
}
void DataMessage_Envelope_FieldResolutionOverride::unsafe_arena_set_allocated_exponent(
    ::google::protobuf::Int64Value* exponent) {
  if (GetArenaNoVirtual() == NULL) {
    delete exponent_;
  }
  exponent_ = exponent;
  if (exponent) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.exponent)
}
void DataMessage_Envelope_FieldResolutionOverride::clear_exponent() {
  if (GetArenaNoVirtual() == NULL && exponent_ != NULL) {
    delete exponent_;
  }
  exponent_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataMessage_Envelope_FieldResolutionOverride::kPathsFieldNumber;
const int DataMessage_Envelope_FieldResolutionOverride::kExponentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataMessage_Envelope_FieldResolutionOverride::DataMessage_Envelope_FieldResolutionOverride()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope_FieldResolutionOverride.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
}
DataMessage_Envelope_FieldResolutionOverride::DataMessage_Envelope_FieldResolutionOverride(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope_FieldResolutionOverride.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
}
DataMessage_Envelope_FieldResolutionOverride::DataMessage_Envelope_FieldResolutionOverride(const DataMessage_Envelope_FieldResolutionOverride& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_paths()) {
    paths_ = new ::sensoris::protobuf::messages::data::DataMessage_Paths(*from.paths_);
  } else {
    paths_ = NULL;
  }
  if (from.has_exponent()) {
    exponent_ = new ::google::protobuf::Int64Value(*from.exponent_);
  } else {
    exponent_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
}

void DataMessage_Envelope_FieldResolutionOverride::SharedCtor() {
  ::memset(&paths_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exponent_) -
      reinterpret_cast<char*>(&paths_)) + sizeof(exponent_));
}

DataMessage_Envelope_FieldResolutionOverride::~DataMessage_Envelope_FieldResolutionOverride() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
  SharedDtor();
}

void DataMessage_Envelope_FieldResolutionOverride::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete paths_;
  if (this != internal_default_instance()) delete exponent_;
}

void DataMessage_Envelope_FieldResolutionOverride::ArenaDtor(void* object) {
  DataMessage_Envelope_FieldResolutionOverride* _this = reinterpret_cast< DataMessage_Envelope_FieldResolutionOverride* >(object);
  (void)_this;
}
void DataMessage_Envelope_FieldResolutionOverride::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DataMessage_Envelope_FieldResolutionOverride::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataMessage_Envelope_FieldResolutionOverride::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataMessage_Envelope_FieldResolutionOverride& DataMessage_Envelope_FieldResolutionOverride::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope_FieldResolutionOverride.base);
  return *internal_default_instance();
}


void DataMessage_Envelope_FieldResolutionOverride::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && paths_ != NULL) {
    delete paths_;
  }
  paths_ = NULL;
  if (GetArenaNoVirtual() == NULL && exponent_ != NULL) {
    delete exponent_;
  }
  exponent_ = NULL;
  _internal_metadata_.Clear();
}

bool DataMessage_Envelope_FieldResolutionOverride::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sensoris.protobuf.messages.data.DataMessage.Paths paths = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_paths()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value exponent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exponent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
  return false;
#undef DO_
}

void DataMessage_Envelope_FieldResolutionOverride::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.messages.data.DataMessage.Paths paths = 1;
  if (this->has_paths()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_paths(), output);
  }

  // .google.protobuf.Int64Value exponent = 2;
  if (this->has_exponent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_exponent(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
}

::google::protobuf::uint8* DataMessage_Envelope_FieldResolutionOverride::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.messages.data.DataMessage.Paths paths = 1;
  if (this->has_paths()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_paths(), deterministic, target);
  }

  // .google.protobuf.Int64Value exponent = 2;
  if (this->has_exponent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_exponent(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
  return target;
}

size_t DataMessage_Envelope_FieldResolutionOverride::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .sensoris.protobuf.messages.data.DataMessage.Paths paths = 1;
  if (this->has_paths()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *paths_);
  }

  // .google.protobuf.Int64Value exponent = 2;
  if (this->has_exponent()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *exponent_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataMessage_Envelope_FieldResolutionOverride::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
  GOOGLE_DCHECK_NE(&from, this);
  const DataMessage_Envelope_FieldResolutionOverride* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataMessage_Envelope_FieldResolutionOverride>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
    MergeFrom(*source);
  }
}

void DataMessage_Envelope_FieldResolutionOverride::MergeFrom(const DataMessage_Envelope_FieldResolutionOverride& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_paths()) {
    mutable_paths()->::sensoris::protobuf::messages::data::DataMessage_Paths::MergeFrom(from.paths());
  }
  if (from.has_exponent()) {
    mutable_exponent()->::google::protobuf::Int64Value::MergeFrom(from.exponent());
  }
}

void DataMessage_Envelope_FieldResolutionOverride::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMessage_Envelope_FieldResolutionOverride::CopyFrom(const DataMessage_Envelope_FieldResolutionOverride& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMessage_Envelope_FieldResolutionOverride::IsInitialized() const {
  return true;
}

void DataMessage_Envelope_FieldResolutionOverride::Swap(DataMessage_Envelope_FieldResolutionOverride* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DataMessage_Envelope_FieldResolutionOverride* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DataMessage_Envelope_FieldResolutionOverride::UnsafeArenaSwap(DataMessage_Envelope_FieldResolutionOverride* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DataMessage_Envelope_FieldResolutionOverride::InternalSwap(DataMessage_Envelope_FieldResolutionOverride* other) {
  using std::swap;
  swap(paths_, other->paths_);
  swap(exponent_, other->exponent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataMessage_Envelope_FieldResolutionOverride::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataMessage_Envelope_VehicleDimensions::InitAsDefaultInstance() {
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_VehicleDimensions_default_instance_._instance.get_mutable()->distance_to_front_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_VehicleDimensions_default_instance_._instance.get_mutable()->distance_to_back_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_VehicleDimensions_default_instance_._instance.get_mutable()->distance_to_left_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_VehicleDimensions_default_instance_._instance.get_mutable()->distance_to_right_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_VehicleDimensions_default_instance_._instance.get_mutable()->distance_to_top_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_VehicleDimensions_default_instance_._instance.get_mutable()->distance_to_ground_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
void DataMessage_Envelope_VehicleDimensions::unsafe_arena_set_allocated_distance_to_front(
    ::google::protobuf::Int64Value* distance_to_front) {
  if (GetArenaNoVirtual() == NULL) {
    delete distance_to_front_;
  }
  distance_to_front_ = distance_to_front;
  if (distance_to_front) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_front)
}
void DataMessage_Envelope_VehicleDimensions::clear_distance_to_front() {
  if (GetArenaNoVirtual() == NULL && distance_to_front_ != NULL) {
    delete distance_to_front_;
  }
  distance_to_front_ = NULL;
}
void DataMessage_Envelope_VehicleDimensions::unsafe_arena_set_allocated_distance_to_back(
    ::google::protobuf::Int64Value* distance_to_back) {
  if (GetArenaNoVirtual() == NULL) {
    delete distance_to_back_;
  }
  distance_to_back_ = distance_to_back;
  if (distance_to_back) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_back)
}
void DataMessage_Envelope_VehicleDimensions::clear_distance_to_back() {
  if (GetArenaNoVirtual() == NULL && distance_to_back_ != NULL) {
    delete distance_to_back_;
  }
  distance_to_back_ = NULL;
}
void DataMessage_Envelope_VehicleDimensions::unsafe_arena_set_allocated_distance_to_left(
    ::google::protobuf::Int64Value* distance_to_left) {
  if (GetArenaNoVirtual() == NULL) {
    delete distance_to_left_;
  }
  distance_to_left_ = distance_to_left;
  if (distance_to_left) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_left)
}
void DataMessage_Envelope_VehicleDimensions::clear_distance_to_left() {
  if (GetArenaNoVirtual() == NULL && distance_to_left_ != NULL) {
    delete distance_to_left_;
  }
  distance_to_left_ = NULL;
}
void DataMessage_Envelope_VehicleDimensions::unsafe_arena_set_allocated_distance_to_right(
    ::google::protobuf::Int64Value* distance_to_right) {
  if (GetArenaNoVirtual() == NULL) {
    delete distance_to_right_;
  }
  distance_to_right_ = distance_to_right;
  if (distance_to_right) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_right)
}
void DataMessage_Envelope_VehicleDimensions::clear_distance_to_right() {
  if (GetArenaNoVirtual() == NULL && distance_to_right_ != NULL) {
    delete distance_to_right_;
  }
  distance_to_right_ = NULL;
}
void DataMessage_Envelope_VehicleDimensions::unsafe_arena_set_allocated_distance_to_top(
    ::google::protobuf::Int64Value* distance_to_top) {
  if (GetArenaNoVirtual() == NULL) {
    delete distance_to_top_;
  }
  distance_to_top_ = distance_to_top;
  if (distance_to_top) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_top)
}
void DataMessage_Envelope_VehicleDimensions::clear_distance_to_top() {
  if (GetArenaNoVirtual() == NULL && distance_to_top_ != NULL) {
    delete distance_to_top_;
  }
  distance_to_top_ = NULL;
}
void DataMessage_Envelope_VehicleDimensions::unsafe_arena_set_allocated_distance_to_ground(
    ::google::protobuf::Int64Value* distance_to_ground) {
  if (GetArenaNoVirtual() == NULL) {
    delete distance_to_ground_;
  }
  distance_to_ground_ = distance_to_ground;
  if (distance_to_ground) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_ground)
}
void DataMessage_Envelope_VehicleDimensions::clear_distance_to_ground() {
  if (GetArenaNoVirtual() == NULL && distance_to_ground_ != NULL) {
    delete distance_to_ground_;
  }
  distance_to_ground_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataMessage_Envelope_VehicleDimensions::kDistanceToFrontFieldNumber;
const int DataMessage_Envelope_VehicleDimensions::kDistanceToBackFieldNumber;
const int DataMessage_Envelope_VehicleDimensions::kDistanceToLeftFieldNumber;
const int DataMessage_Envelope_VehicleDimensions::kDistanceToRightFieldNumber;
const int DataMessage_Envelope_VehicleDimensions::kDistanceToTopFieldNumber;
const int DataMessage_Envelope_VehicleDimensions::kDistanceToGroundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataMessage_Envelope_VehicleDimensions::DataMessage_Envelope_VehicleDimensions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope_VehicleDimensions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
}
DataMessage_Envelope_VehicleDimensions::DataMessage_Envelope_VehicleDimensions(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope_VehicleDimensions.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
}
DataMessage_Envelope_VehicleDimensions::DataMessage_Envelope_VehicleDimensions(const DataMessage_Envelope_VehicleDimensions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_distance_to_front()) {
    distance_to_front_ = new ::google::protobuf::Int64Value(*from.distance_to_front_);
  } else {
    distance_to_front_ = NULL;
  }
  if (from.has_distance_to_back()) {
    distance_to_back_ = new ::google::protobuf::Int64Value(*from.distance_to_back_);
  } else {
    distance_to_back_ = NULL;
  }
  if (from.has_distance_to_left()) {
    distance_to_left_ = new ::google::protobuf::Int64Value(*from.distance_to_left_);
  } else {
    distance_to_left_ = NULL;
  }
  if (from.has_distance_to_right()) {
    distance_to_right_ = new ::google::protobuf::Int64Value(*from.distance_to_right_);
  } else {
    distance_to_right_ = NULL;
  }
  if (from.has_distance_to_top()) {
    distance_to_top_ = new ::google::protobuf::Int64Value(*from.distance_to_top_);
  } else {
    distance_to_top_ = NULL;
  }
  if (from.has_distance_to_ground()) {
    distance_to_ground_ = new ::google::protobuf::Int64Value(*from.distance_to_ground_);
  } else {
    distance_to_ground_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
}

void DataMessage_Envelope_VehicleDimensions::SharedCtor() {
  ::memset(&distance_to_front_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&distance_to_ground_) -
      reinterpret_cast<char*>(&distance_to_front_)) + sizeof(distance_to_ground_));
}

DataMessage_Envelope_VehicleDimensions::~DataMessage_Envelope_VehicleDimensions() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
  SharedDtor();
}

void DataMessage_Envelope_VehicleDimensions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete distance_to_front_;
  if (this != internal_default_instance()) delete distance_to_back_;
  if (this != internal_default_instance()) delete distance_to_left_;
  if (this != internal_default_instance()) delete distance_to_right_;
  if (this != internal_default_instance()) delete distance_to_top_;
  if (this != internal_default_instance()) delete distance_to_ground_;
}

void DataMessage_Envelope_VehicleDimensions::ArenaDtor(void* object) {
  DataMessage_Envelope_VehicleDimensions* _this = reinterpret_cast< DataMessage_Envelope_VehicleDimensions* >(object);
  (void)_this;
}
void DataMessage_Envelope_VehicleDimensions::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DataMessage_Envelope_VehicleDimensions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataMessage_Envelope_VehicleDimensions::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataMessage_Envelope_VehicleDimensions& DataMessage_Envelope_VehicleDimensions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope_VehicleDimensions.base);
  return *internal_default_instance();
}


void DataMessage_Envelope_VehicleDimensions::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && distance_to_front_ != NULL) {
    delete distance_to_front_;
  }
  distance_to_front_ = NULL;
  if (GetArenaNoVirtual() == NULL && distance_to_back_ != NULL) {
    delete distance_to_back_;
  }
  distance_to_back_ = NULL;
  if (GetArenaNoVirtual() == NULL && distance_to_left_ != NULL) {
    delete distance_to_left_;
  }
  distance_to_left_ = NULL;
  if (GetArenaNoVirtual() == NULL && distance_to_right_ != NULL) {
    delete distance_to_right_;
  }
  distance_to_right_ = NULL;
  if (GetArenaNoVirtual() == NULL && distance_to_top_ != NULL) {
    delete distance_to_top_;
  }
  distance_to_top_ = NULL;
  if (GetArenaNoVirtual() == NULL && distance_to_ground_ != NULL) {
    delete distance_to_ground_;
  }
  distance_to_ground_ = NULL;
  _internal_metadata_.Clear();
}

bool DataMessage_Envelope_VehicleDimensions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Int64Value distance_to_front = 1 [(.sensoris.protobuf.types.base.exponent) = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_distance_to_front()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value distance_to_back = 2 [(.sensoris.protobuf.types.base.exponent) = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_distance_to_back()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value distance_to_left = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_distance_to_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value distance_to_right = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_distance_to_right()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value distance_to_top = 5 [(.sensoris.protobuf.types.base.exponent) = 0];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_distance_to_top()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value distance_to_ground = 6 [(.sensoris.protobuf.types.base.exponent) = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_distance_to_ground()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
  return false;
#undef DO_
}

void DataMessage_Envelope_VehicleDimensions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value distance_to_front = 1 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_distance_to_front()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_distance_to_front(), output);
  }

  // .google.protobuf.Int64Value distance_to_back = 2 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_distance_to_back()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_distance_to_back(), output);
  }

  // .google.protobuf.Int64Value distance_to_left = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_distance_to_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_distance_to_left(), output);
  }

  // .google.protobuf.Int64Value distance_to_right = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_distance_to_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_distance_to_right(), output);
  }

  // .google.protobuf.Int64Value distance_to_top = 5 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_distance_to_top()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_distance_to_top(), output);
  }

  // .google.protobuf.Int64Value distance_to_ground = 6 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_distance_to_ground()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_distance_to_ground(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
}

::google::protobuf::uint8* DataMessage_Envelope_VehicleDimensions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value distance_to_front = 1 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_distance_to_front()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_distance_to_front(), deterministic, target);
  }

  // .google.protobuf.Int64Value distance_to_back = 2 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_distance_to_back()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_distance_to_back(), deterministic, target);
  }

  // .google.protobuf.Int64Value distance_to_left = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_distance_to_left()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_distance_to_left(), deterministic, target);
  }

  // .google.protobuf.Int64Value distance_to_right = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_distance_to_right()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_distance_to_right(), deterministic, target);
  }

  // .google.protobuf.Int64Value distance_to_top = 5 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_distance_to_top()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_distance_to_top(), deterministic, target);
  }

  // .google.protobuf.Int64Value distance_to_ground = 6 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_distance_to_ground()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_distance_to_ground(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
  return target;
}

size_t DataMessage_Envelope_VehicleDimensions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Int64Value distance_to_front = 1 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_distance_to_front()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *distance_to_front_);
  }

  // .google.protobuf.Int64Value distance_to_back = 2 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_distance_to_back()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *distance_to_back_);
  }

  // .google.protobuf.Int64Value distance_to_left = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_distance_to_left()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *distance_to_left_);
  }

  // .google.protobuf.Int64Value distance_to_right = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_distance_to_right()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *distance_to_right_);
  }

  // .google.protobuf.Int64Value distance_to_top = 5 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_distance_to_top()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *distance_to_top_);
  }

  // .google.protobuf.Int64Value distance_to_ground = 6 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (this->has_distance_to_ground()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *distance_to_ground_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataMessage_Envelope_VehicleDimensions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
  GOOGLE_DCHECK_NE(&from, this);
  const DataMessage_Envelope_VehicleDimensions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataMessage_Envelope_VehicleDimensions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
    MergeFrom(*source);
  }
}

void DataMessage_Envelope_VehicleDimensions::MergeFrom(const DataMessage_Envelope_VehicleDimensions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_distance_to_front()) {
    mutable_distance_to_front()->::google::protobuf::Int64Value::MergeFrom(from.distance_to_front());
  }
  if (from.has_distance_to_back()) {
    mutable_distance_to_back()->::google::protobuf::Int64Value::MergeFrom(from.distance_to_back());
  }
  if (from.has_distance_to_left()) {
    mutable_distance_to_left()->::google::protobuf::Int64Value::MergeFrom(from.distance_to_left());
  }
  if (from.has_distance_to_right()) {
    mutable_distance_to_right()->::google::protobuf::Int64Value::MergeFrom(from.distance_to_right());
  }
  if (from.has_distance_to_top()) {
    mutable_distance_to_top()->::google::protobuf::Int64Value::MergeFrom(from.distance_to_top());
  }
  if (from.has_distance_to_ground()) {
    mutable_distance_to_ground()->::google::protobuf::Int64Value::MergeFrom(from.distance_to_ground());
  }
}

void DataMessage_Envelope_VehicleDimensions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMessage_Envelope_VehicleDimensions::CopyFrom(const DataMessage_Envelope_VehicleDimensions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMessage_Envelope_VehicleDimensions::IsInitialized() const {
  return true;
}

void DataMessage_Envelope_VehicleDimensions::Swap(DataMessage_Envelope_VehicleDimensions* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DataMessage_Envelope_VehicleDimensions* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DataMessage_Envelope_VehicleDimensions::UnsafeArenaSwap(DataMessage_Envelope_VehicleDimensions* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DataMessage_Envelope_VehicleDimensions::InternalSwap(DataMessage_Envelope_VehicleDimensions* other) {
  using std::swap;
  swap(distance_to_front_, other->distance_to_front_);
  swap(distance_to_back_, other->distance_to_back_);
  swap(distance_to_left_, other->distance_to_left_);
  swap(distance_to_right_, other->distance_to_right_);
  swap(distance_to_top_, other->distance_to_top_);
  swap(distance_to_ground_, other->distance_to_ground_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataMessage_Envelope_VehicleDimensions::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataMessage_Envelope_MapIdentification_MapVersion::InitAsDefaultInstance() {
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_MapIdentification_MapVersion_default_instance_._instance.get_mutable()->source_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_MapIdentification_MapVersion_default_instance_._instance.get_mutable()->version_ = const_cast< ::sensoris::protobuf::types::base::Version*>(
      ::sensoris::protobuf::types::base::Version::internal_default_instance());
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_MapIdentification_MapVersion_default_instance_._instance.get_mutable()->extraction_timestamp_ = const_cast< ::sensoris::protobuf::types::base::Timestamp*>(
      ::sensoris::protobuf::types::base::Timestamp::internal_default_instance());
}
void DataMessage_Envelope_MapIdentification_MapVersion::unsafe_arena_set_allocated_source(
    ::google::protobuf::StringValue* source) {
  if (GetArenaNoVirtual() == NULL) {
    delete source_;
  }
  source_ = source;
  if (source) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.source)
}
void DataMessage_Envelope_MapIdentification_MapVersion::clear_source() {
  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
}
void DataMessage_Envelope_MapIdentification_MapVersion::unsafe_arena_set_allocated_version(
    ::sensoris::protobuf::types::base::Version* version) {
  if (GetArenaNoVirtual() == NULL) {
    delete version_;
  }
  version_ = version;
  if (version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.version)
}
void DataMessage_Envelope_MapIdentification_MapVersion::clear_version() {
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
}
void DataMessage_Envelope_MapIdentification_MapVersion::unsafe_arena_set_allocated_extraction_timestamp(
    ::sensoris::protobuf::types::base::Timestamp* extraction_timestamp) {
  if (GetArenaNoVirtual() == NULL) {
    delete extraction_timestamp_;
  }
  extraction_timestamp_ = extraction_timestamp;
  if (extraction_timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.extraction_timestamp)
}
void DataMessage_Envelope_MapIdentification_MapVersion::clear_extraction_timestamp() {
  if (GetArenaNoVirtual() == NULL && extraction_timestamp_ != NULL) {
    delete extraction_timestamp_;
  }
  extraction_timestamp_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataMessage_Envelope_MapIdentification_MapVersion::kSourceFieldNumber;
const int DataMessage_Envelope_MapIdentification_MapVersion::kVersionFieldNumber;
const int DataMessage_Envelope_MapIdentification_MapVersion::kExtractionTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataMessage_Envelope_MapIdentification_MapVersion::DataMessage_Envelope_MapIdentification_MapVersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope_MapIdentification_MapVersion.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
}
DataMessage_Envelope_MapIdentification_MapVersion::DataMessage_Envelope_MapIdentification_MapVersion(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope_MapIdentification_MapVersion.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
}
DataMessage_Envelope_MapIdentification_MapVersion::DataMessage_Envelope_MapIdentification_MapVersion(const DataMessage_Envelope_MapIdentification_MapVersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_source()) {
    source_ = new ::google::protobuf::StringValue(*from.source_);
  } else {
    source_ = NULL;
  }
  if (from.has_version()) {
    version_ = new ::sensoris::protobuf::types::base::Version(*from.version_);
  } else {
    version_ = NULL;
  }
  if (from.has_extraction_timestamp()) {
    extraction_timestamp_ = new ::sensoris::protobuf::types::base::Timestamp(*from.extraction_timestamp_);
  } else {
    extraction_timestamp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
}

void DataMessage_Envelope_MapIdentification_MapVersion::SharedCtor() {
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&extraction_timestamp_) -
      reinterpret_cast<char*>(&source_)) + sizeof(extraction_timestamp_));
}

DataMessage_Envelope_MapIdentification_MapVersion::~DataMessage_Envelope_MapIdentification_MapVersion() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
  SharedDtor();
}

void DataMessage_Envelope_MapIdentification_MapVersion::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete source_;
  if (this != internal_default_instance()) delete version_;
  if (this != internal_default_instance()) delete extraction_timestamp_;
}

void DataMessage_Envelope_MapIdentification_MapVersion::ArenaDtor(void* object) {
  DataMessage_Envelope_MapIdentification_MapVersion* _this = reinterpret_cast< DataMessage_Envelope_MapIdentification_MapVersion* >(object);
  (void)_this;
}
void DataMessage_Envelope_MapIdentification_MapVersion::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DataMessage_Envelope_MapIdentification_MapVersion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataMessage_Envelope_MapIdentification_MapVersion::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataMessage_Envelope_MapIdentification_MapVersion& DataMessage_Envelope_MapIdentification_MapVersion::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope_MapIdentification_MapVersion.base);
  return *internal_default_instance();
}


void DataMessage_Envelope_MapIdentification_MapVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
  if (GetArenaNoVirtual() == NULL && extraction_timestamp_ != NULL) {
    delete extraction_timestamp_;
  }
  extraction_timestamp_ = NULL;
  _internal_metadata_.Clear();
}

bool DataMessage_Envelope_MapIdentification_MapVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.StringValue source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.types.base.Version version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.types.base.Timestamp extraction_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_extraction_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
  return false;
#undef DO_
}

void DataMessage_Envelope_MapIdentification_MapVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue source = 1;
  if (this->has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_source(), output);
  }

  // .sensoris.protobuf.types.base.Version version = 2;
  if (this->has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_version(), output);
  }

  // .sensoris.protobuf.types.base.Timestamp extraction_timestamp = 3;
  if (this->has_extraction_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_extraction_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
}

::google::protobuf::uint8* DataMessage_Envelope_MapIdentification_MapVersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue source = 1;
  if (this->has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_source(), deterministic, target);
  }

  // .sensoris.protobuf.types.base.Version version = 2;
  if (this->has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_version(), deterministic, target);
  }

  // .sensoris.protobuf.types.base.Timestamp extraction_timestamp = 3;
  if (this->has_extraction_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_extraction_timestamp(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
  return target;
}

size_t DataMessage_Envelope_MapIdentification_MapVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.StringValue source = 1;
  if (this->has_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_);
  }

  // .sensoris.protobuf.types.base.Version version = 2;
  if (this->has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *version_);
  }

  // .sensoris.protobuf.types.base.Timestamp extraction_timestamp = 3;
  if (this->has_extraction_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *extraction_timestamp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataMessage_Envelope_MapIdentification_MapVersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const DataMessage_Envelope_MapIdentification_MapVersion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataMessage_Envelope_MapIdentification_MapVersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
    MergeFrom(*source);
  }
}

void DataMessage_Envelope_MapIdentification_MapVersion::MergeFrom(const DataMessage_Envelope_MapIdentification_MapVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source()) {
    mutable_source()->::google::protobuf::StringValue::MergeFrom(from.source());
  }
  if (from.has_version()) {
    mutable_version()->::sensoris::protobuf::types::base::Version::MergeFrom(from.version());
  }
  if (from.has_extraction_timestamp()) {
    mutable_extraction_timestamp()->::sensoris::protobuf::types::base::Timestamp::MergeFrom(from.extraction_timestamp());
  }
}

void DataMessage_Envelope_MapIdentification_MapVersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMessage_Envelope_MapIdentification_MapVersion::CopyFrom(const DataMessage_Envelope_MapIdentification_MapVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMessage_Envelope_MapIdentification_MapVersion::IsInitialized() const {
  return true;
}

void DataMessage_Envelope_MapIdentification_MapVersion::Swap(DataMessage_Envelope_MapIdentification_MapVersion* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DataMessage_Envelope_MapIdentification_MapVersion* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DataMessage_Envelope_MapIdentification_MapVersion::UnsafeArenaSwap(DataMessage_Envelope_MapIdentification_MapVersion* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DataMessage_Envelope_MapIdentification_MapVersion::InternalSwap(DataMessage_Envelope_MapIdentification_MapVersion* other) {
  using std::swap;
  swap(source_, other->source_);
  swap(version_, other->version_);
  swap(extraction_timestamp_, other->extraction_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataMessage_Envelope_MapIdentification_MapVersion::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataMessage_Envelope_MapIdentification::InitAsDefaultInstance() {
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_MapIdentification_default_instance_._instance.get_mutable()->provider_version_ = const_cast< ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion*>(
      ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion::internal_default_instance());
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_MapIdentification_default_instance_._instance.get_mutable()->compiler_version_ = const_cast< ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion*>(
      ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion::internal_default_instance());
}
void DataMessage_Envelope_MapIdentification::unsafe_arena_set_allocated_provider_version(
    ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* provider_version) {
  if (GetArenaNoVirtual() == NULL) {
    delete provider_version_;
  }
  provider_version_ = provider_version;
  if (provider_version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.provider_version)
}
void DataMessage_Envelope_MapIdentification::unsafe_arena_set_allocated_compiler_version(
    ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* compiler_version) {
  if (GetArenaNoVirtual() == NULL) {
    delete compiler_version_;
  }
  compiler_version_ = compiler_version;
  if (compiler_version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.compiler_version)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataMessage_Envelope_MapIdentification::kProviderVersionFieldNumber;
const int DataMessage_Envelope_MapIdentification::kCompilerVersionFieldNumber;
const int DataMessage_Envelope_MapIdentification::kFormatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataMessage_Envelope_MapIdentification::DataMessage_Envelope_MapIdentification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope_MapIdentification.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
}
DataMessage_Envelope_MapIdentification::DataMessage_Envelope_MapIdentification(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope_MapIdentification.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
}
DataMessage_Envelope_MapIdentification::DataMessage_Envelope_MapIdentification(const DataMessage_Envelope_MapIdentification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_provider_version()) {
    provider_version_ = new ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion(*from.provider_version_);
  } else {
    provider_version_ = NULL;
  }
  if (from.has_compiler_version()) {
    compiler_version_ = new ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion(*from.compiler_version_);
  } else {
    compiler_version_ = NULL;
  }
  format_ = from.format_;
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
}

void DataMessage_Envelope_MapIdentification::SharedCtor() {
  ::memset(&provider_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&format_) -
      reinterpret_cast<char*>(&provider_version_)) + sizeof(format_));
}

DataMessage_Envelope_MapIdentification::~DataMessage_Envelope_MapIdentification() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
  SharedDtor();
}

void DataMessage_Envelope_MapIdentification::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete provider_version_;
  if (this != internal_default_instance()) delete compiler_version_;
}

void DataMessage_Envelope_MapIdentification::ArenaDtor(void* object) {
  DataMessage_Envelope_MapIdentification* _this = reinterpret_cast< DataMessage_Envelope_MapIdentification* >(object);
  (void)_this;
}
void DataMessage_Envelope_MapIdentification::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DataMessage_Envelope_MapIdentification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataMessage_Envelope_MapIdentification::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataMessage_Envelope_MapIdentification& DataMessage_Envelope_MapIdentification::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope_MapIdentification.base);
  return *internal_default_instance();
}


void DataMessage_Envelope_MapIdentification::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && provider_version_ != NULL) {
    delete provider_version_;
  }
  provider_version_ = NULL;
  if (GetArenaNoVirtual() == NULL && compiler_version_ != NULL) {
    delete compiler_version_;
  }
  compiler_version_ = NULL;
  format_ = 0;
  _internal_metadata_.Clear();
}

bool DataMessage_Envelope_MapIdentification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion provider_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_provider_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion compiler_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_compiler_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.Format format = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_format(static_cast< ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
  return false;
#undef DO_
}

void DataMessage_Envelope_MapIdentification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion provider_version = 1;
  if (this->has_provider_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_provider_version(), output);
  }

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion compiler_version = 2;
  if (this->has_compiler_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_compiler_version(), output);
  }

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.Format format = 3;
  if (this->format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->format(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
}

::google::protobuf::uint8* DataMessage_Envelope_MapIdentification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion provider_version = 1;
  if (this->has_provider_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_provider_version(), deterministic, target);
  }

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion compiler_version = 2;
  if (this->has_compiler_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_compiler_version(), deterministic, target);
  }

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.Format format = 3;
  if (this->format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->format(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
  return target;
}

size_t DataMessage_Envelope_MapIdentification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion provider_version = 1;
  if (this->has_provider_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *provider_version_);
  }

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion compiler_version = 2;
  if (this->has_compiler_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *compiler_version_);
  }

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.Format format = 3;
  if (this->format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->format());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataMessage_Envelope_MapIdentification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
  GOOGLE_DCHECK_NE(&from, this);
  const DataMessage_Envelope_MapIdentification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataMessage_Envelope_MapIdentification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
    MergeFrom(*source);
  }
}

void DataMessage_Envelope_MapIdentification::MergeFrom(const DataMessage_Envelope_MapIdentification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_provider_version()) {
    mutable_provider_version()->::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion::MergeFrom(from.provider_version());
  }
  if (from.has_compiler_version()) {
    mutable_compiler_version()->::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion::MergeFrom(from.compiler_version());
  }
  if (from.format() != 0) {
    set_format(from.format());
  }
}

void DataMessage_Envelope_MapIdentification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMessage_Envelope_MapIdentification::CopyFrom(const DataMessage_Envelope_MapIdentification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMessage_Envelope_MapIdentification::IsInitialized() const {
  return true;
}

void DataMessage_Envelope_MapIdentification::Swap(DataMessage_Envelope_MapIdentification* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DataMessage_Envelope_MapIdentification* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DataMessage_Envelope_MapIdentification::UnsafeArenaSwap(DataMessage_Envelope_MapIdentification* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DataMessage_Envelope_MapIdentification::InternalSwap(DataMessage_Envelope_MapIdentification* other) {
  using std::swap;
  swap(provider_version_, other->provider_version_);
  swap(compiler_version_, other->compiler_version_);
  swap(format_, other->format_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataMessage_Envelope_MapIdentification::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataMessage_Envelope::InitAsDefaultInstance() {
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_default_instance_._instance.get_mutable()->ids_ = const_cast< ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids*>(
      ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids::internal_default_instance());
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_default_instance_._instance.get_mutable()->vehicle_dimensions_ = const_cast< ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions*>(
      ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions::internal_default_instance());
  ::sensoris::protobuf::messages::data::_DataMessage_Envelope_default_instance_._instance.get_mutable()->map_identification_ = const_cast< ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification*>(
      ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification::internal_default_instance());
}
void DataMessage_Envelope::unsafe_arena_set_allocated_ids(
    ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* ids) {
  if (GetArenaNoVirtual() == NULL) {
    delete ids_;
  }
  ids_ = ids;
  if (ids) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.ids)
}
void DataMessage_Envelope::unsafe_arena_set_allocated_vehicle_dimensions(
    ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* vehicle_dimensions) {
  if (GetArenaNoVirtual() == NULL) {
    delete vehicle_dimensions_;
  }
  vehicle_dimensions_ = vehicle_dimensions;
  if (vehicle_dimensions) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.vehicle_dimensions)
}
void DataMessage_Envelope::unsafe_arena_set_allocated_map_identification(
    ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* map_identification) {
  if (GetArenaNoVirtual() == NULL) {
    delete map_identification_;
  }
  map_identification_ = map_identification;
  if (map_identification) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.map_identification)
}
void DataMessage_Envelope::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataMessage_Envelope::kIdsFieldNumber;
const int DataMessage_Envelope::kFieldResolutionOverrideFieldNumber;
const int DataMessage_Envelope::kVehicleDimensionsFieldNumber;
const int DataMessage_Envelope::kMapIdentificationFieldNumber;
const int DataMessage_Envelope::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataMessage_Envelope::DataMessage_Envelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.messages.data.DataMessage.Envelope)
}
DataMessage_Envelope::DataMessage_Envelope(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  field_resolution_override_(arena),
  extension_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.messages.data.DataMessage.Envelope)
}
DataMessage_Envelope::DataMessage_Envelope(const DataMessage_Envelope& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      field_resolution_override_(from.field_resolution_override_),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ids()) {
    ids_ = new ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids(*from.ids_);
  } else {
    ids_ = NULL;
  }
  if (from.has_vehicle_dimensions()) {
    vehicle_dimensions_ = new ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions(*from.vehicle_dimensions_);
  } else {
    vehicle_dimensions_ = NULL;
  }
  if (from.has_map_identification()) {
    map_identification_ = new ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification(*from.map_identification_);
  } else {
    map_identification_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.messages.data.DataMessage.Envelope)
}

void DataMessage_Envelope::SharedCtor() {
  ::memset(&ids_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&map_identification_) -
      reinterpret_cast<char*>(&ids_)) + sizeof(map_identification_));
}

DataMessage_Envelope::~DataMessage_Envelope() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.messages.data.DataMessage.Envelope)
  SharedDtor();
}

void DataMessage_Envelope::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete ids_;
  if (this != internal_default_instance()) delete vehicle_dimensions_;
  if (this != internal_default_instance()) delete map_identification_;
}

void DataMessage_Envelope::ArenaDtor(void* object) {
  DataMessage_Envelope* _this = reinterpret_cast< DataMessage_Envelope* >(object);
  (void)_this;
}
void DataMessage_Envelope::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DataMessage_Envelope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataMessage_Envelope::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataMessage_Envelope& DataMessage_Envelope::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_Envelope.base);
  return *internal_default_instance();
}


void DataMessage_Envelope::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.messages.data.DataMessage.Envelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_resolution_override_.Clear();
  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && ids_ != NULL) {
    delete ids_;
  }
  ids_ = NULL;
  if (GetArenaNoVirtual() == NULL && vehicle_dimensions_ != NULL) {
    delete vehicle_dimensions_;
  }
  vehicle_dimensions_ = NULL;
  if (GetArenaNoVirtual() == NULL && map_identification_ != NULL) {
    delete map_identification_;
  }
  map_identification_ = NULL;
  _internal_metadata_.Clear();
}

bool DataMessage_Envelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.messages.data.DataMessage.Envelope)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sensoris.protobuf.messages.data.DataMessage.Envelope.Ids ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride field_resolution_override = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_field_resolution_override()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions vehicle_dimensions = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehicle_dimensions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification map_identification = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_map_identification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.messages.data.DataMessage.Envelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.messages.data.DataMessage.Envelope)
  return false;
#undef DO_
}

void DataMessage_Envelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.messages.data.DataMessage.Envelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.Ids ids = 1;
  if (this->has_ids()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_ids(), output);
  }

  // repeated .sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride field_resolution_override = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_resolution_override_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->field_resolution_override(static_cast<int>(i)),
      output);
  }

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions vehicle_dimensions = 4;
  if (this->has_vehicle_dimensions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_vehicle_dimensions(), output);
  }

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification map_identification = 5;
  if (this->has_map_identification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_map_identification(), output);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.messages.data.DataMessage.Envelope)
}

::google::protobuf::uint8* DataMessage_Envelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.messages.data.DataMessage.Envelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.Ids ids = 1;
  if (this->has_ids()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_ids(), deterministic, target);
  }

  // repeated .sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride field_resolution_override = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_resolution_override_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->field_resolution_override(static_cast<int>(i)), deterministic, target);
  }

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions vehicle_dimensions = 4;
  if (this->has_vehicle_dimensions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_vehicle_dimensions(), deterministic, target);
  }

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification map_identification = 5;
  if (this->has_map_identification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_map_identification(), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.messages.data.DataMessage.Envelope)
  return target;
}

size_t DataMessage_Envelope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.messages.data.DataMessage.Envelope)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride field_resolution_override = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->field_resolution_override_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->field_resolution_override(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.Ids ids = 1;
  if (this->has_ids()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ids_);
  }

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions vehicle_dimensions = 4;
  if (this->has_vehicle_dimensions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vehicle_dimensions_);
  }

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification map_identification = 5;
  if (this->has_map_identification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *map_identification_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataMessage_Envelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope)
  GOOGLE_DCHECK_NE(&from, this);
  const DataMessage_Envelope* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataMessage_Envelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.messages.data.DataMessage.Envelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.messages.data.DataMessage.Envelope)
    MergeFrom(*source);
  }
}

void DataMessage_Envelope::MergeFrom(const DataMessage_Envelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  field_resolution_override_.MergeFrom(from.field_resolution_override_);
  extension_.MergeFrom(from.extension_);
  if (from.has_ids()) {
    mutable_ids()->::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids::MergeFrom(from.ids());
  }
  if (from.has_vehicle_dimensions()) {
    mutable_vehicle_dimensions()->::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions::MergeFrom(from.vehicle_dimensions());
  }
  if (from.has_map_identification()) {
    mutable_map_identification()->::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification::MergeFrom(from.map_identification());
  }
}

void DataMessage_Envelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMessage_Envelope::CopyFrom(const DataMessage_Envelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.messages.data.DataMessage.Envelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMessage_Envelope::IsInitialized() const {
  return true;
}

void DataMessage_Envelope::Swap(DataMessage_Envelope* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DataMessage_Envelope* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DataMessage_Envelope::UnsafeArenaSwap(DataMessage_Envelope* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DataMessage_Envelope::InternalSwap(DataMessage_Envelope* other) {
  using std::swap;
  CastToBase(&field_resolution_override_)->InternalSwap(CastToBase(&other->field_resolution_override_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(ids_, other->ids_);
  swap(vehicle_dimensions_, other->vehicle_dimensions_);
  swap(map_identification_, other->map_identification_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataMessage_Envelope::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataMessage_EventRelation::InitAsDefaultInstance() {
}
void DataMessage_EventRelation::clear_from_id() {
  from_id_.Clear();
}
void DataMessage_EventRelation::clear_to_id() {
  to_id_.Clear();
}
void DataMessage_EventRelation::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataMessage_EventRelation::kFromIdFieldNumber;
const int DataMessage_EventRelation::kTypeFieldNumber;
const int DataMessage_EventRelation::kToIdFieldNumber;
const int DataMessage_EventRelation::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataMessage_EventRelation::DataMessage_EventRelation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_EventRelation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.messages.data.DataMessage.EventRelation)
}
DataMessage_EventRelation::DataMessage_EventRelation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  from_id_(arena),
  to_id_(arena),
  extension_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_EventRelation.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.messages.data.DataMessage.EventRelation)
}
DataMessage_EventRelation::DataMessage_EventRelation(const DataMessage_EventRelation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      from_id_(from.from_id_),
      to_id_(from.to_id_),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.messages.data.DataMessage.EventRelation)
}

void DataMessage_EventRelation::SharedCtor() {
  type_ = 0;
}

DataMessage_EventRelation::~DataMessage_EventRelation() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.messages.data.DataMessage.EventRelation)
  SharedDtor();
}

void DataMessage_EventRelation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DataMessage_EventRelation::ArenaDtor(void* object) {
  DataMessage_EventRelation* _this = reinterpret_cast< DataMessage_EventRelation* >(object);
  (void)_this;
}
void DataMessage_EventRelation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DataMessage_EventRelation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataMessage_EventRelation::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataMessage_EventRelation& DataMessage_EventRelation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_EventRelation.base);
  return *internal_default_instance();
}


void DataMessage_EventRelation::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.messages.data.DataMessage.EventRelation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_id_.Clear();
  to_id_.Clear();
  extension_.Clear();
  type_ = 0;
  _internal_metadata_.Clear();
}

bool DataMessage_EventRelation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.messages.data.DataMessage.EventRelation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.protobuf.Int64Value from_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_from_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.messages.data.DataMessage.EventRelation.Type type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Int64Value to_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_to_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.messages.data.DataMessage.EventRelation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.messages.data.DataMessage.EventRelation)
  return false;
#undef DO_
}

void DataMessage_EventRelation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.messages.data.DataMessage.EventRelation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.Int64Value from_id = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->from_id_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->from_id(static_cast<int>(i)),
      output);
  }

  // .sensoris.protobuf.messages.data.DataMessage.EventRelation.Type type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // repeated .google.protobuf.Int64Value to_id = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->to_id_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->to_id(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.messages.data.DataMessage.EventRelation)
}

::google::protobuf::uint8* DataMessage_EventRelation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.messages.data.DataMessage.EventRelation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.Int64Value from_id = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->from_id_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->from_id(static_cast<int>(i)), deterministic, target);
  }

  // .sensoris.protobuf.messages.data.DataMessage.EventRelation.Type type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // repeated .google.protobuf.Int64Value to_id = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->to_id_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->to_id(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.messages.data.DataMessage.EventRelation)
  return target;
}

size_t DataMessage_EventRelation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.messages.data.DataMessage.EventRelation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Int64Value from_id = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->from_id_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->from_id(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Int64Value to_id = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->to_id_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->to_id(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .sensoris.protobuf.messages.data.DataMessage.EventRelation.Type type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataMessage_EventRelation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.messages.data.DataMessage.EventRelation)
  GOOGLE_DCHECK_NE(&from, this);
  const DataMessage_EventRelation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataMessage_EventRelation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.messages.data.DataMessage.EventRelation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.messages.data.DataMessage.EventRelation)
    MergeFrom(*source);
  }
}

void DataMessage_EventRelation::MergeFrom(const DataMessage_EventRelation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.messages.data.DataMessage.EventRelation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  from_id_.MergeFrom(from.from_id_);
  to_id_.MergeFrom(from.to_id_);
  extension_.MergeFrom(from.extension_);
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void DataMessage_EventRelation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.messages.data.DataMessage.EventRelation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMessage_EventRelation::CopyFrom(const DataMessage_EventRelation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.messages.data.DataMessage.EventRelation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMessage_EventRelation::IsInitialized() const {
  return true;
}

void DataMessage_EventRelation::Swap(DataMessage_EventRelation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DataMessage_EventRelation* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DataMessage_EventRelation::UnsafeArenaSwap(DataMessage_EventRelation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DataMessage_EventRelation::InternalSwap(DataMessage_EventRelation* other) {
  using std::swap;
  CastToBase(&from_id_)->InternalSwap(CastToBase(&other->from_id_));
  CastToBase(&to_id_)->InternalSwap(CastToBase(&other->to_id_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataMessage_EventRelation::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataMessage_EventSource_EventEnvelopeIds::InitAsDefaultInstance() {
}
void DataMessage_EventSource_EventEnvelopeIds::clear_id() {
  id_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataMessage_EventSource_EventEnvelopeIds::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataMessage_EventSource_EventEnvelopeIds::DataMessage_EventSource_EventEnvelopeIds()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_EventSource_EventEnvelopeIds.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
}
DataMessage_EventSource_EventEnvelopeIds::DataMessage_EventSource_EventEnvelopeIds(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  id_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_EventSource_EventEnvelopeIds.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
}
DataMessage_EventSource_EventEnvelopeIds::DataMessage_EventSource_EventEnvelopeIds(const DataMessage_EventSource_EventEnvelopeIds& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_(from.id_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
}

void DataMessage_EventSource_EventEnvelopeIds::SharedCtor() {
}

DataMessage_EventSource_EventEnvelopeIds::~DataMessage_EventSource_EventEnvelopeIds() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
  SharedDtor();
}

void DataMessage_EventSource_EventEnvelopeIds::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DataMessage_EventSource_EventEnvelopeIds::ArenaDtor(void* object) {
  DataMessage_EventSource_EventEnvelopeIds* _this = reinterpret_cast< DataMessage_EventSource_EventEnvelopeIds* >(object);
  (void)_this;
}
void DataMessage_EventSource_EventEnvelopeIds::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DataMessage_EventSource_EventEnvelopeIds::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataMessage_EventSource_EventEnvelopeIds::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataMessage_EventSource_EventEnvelopeIds& DataMessage_EventSource_EventEnvelopeIds::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_EventSource_EventEnvelopeIds.base);
  return *internal_default_instance();
}


void DataMessage_EventSource_EventEnvelopeIds::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.Clear();
  _internal_metadata_.Clear();
}

bool DataMessage_EventSource_EventEnvelopeIds::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.protobuf.Int64Value id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
  return false;
#undef DO_
}

void DataMessage_EventSource_EventEnvelopeIds::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.Int64Value id = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->id_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->id(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
}

::google::protobuf::uint8* DataMessage_EventSource_EventEnvelopeIds::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.Int64Value id = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->id_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->id(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
  return target;
}

size_t DataMessage_EventSource_EventEnvelopeIds::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Int64Value id = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->id_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->id(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataMessage_EventSource_EventEnvelopeIds::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
  GOOGLE_DCHECK_NE(&from, this);
  const DataMessage_EventSource_EventEnvelopeIds* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataMessage_EventSource_EventEnvelopeIds>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
    MergeFrom(*source);
  }
}

void DataMessage_EventSource_EventEnvelopeIds::MergeFrom(const DataMessage_EventSource_EventEnvelopeIds& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  id_.MergeFrom(from.id_);
}

void DataMessage_EventSource_EventEnvelopeIds::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMessage_EventSource_EventEnvelopeIds::CopyFrom(const DataMessage_EventSource_EventEnvelopeIds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMessage_EventSource_EventEnvelopeIds::IsInitialized() const {
  return true;
}

void DataMessage_EventSource_EventEnvelopeIds::Swap(DataMessage_EventSource_EventEnvelopeIds* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DataMessage_EventSource_EventEnvelopeIds* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DataMessage_EventSource_EventEnvelopeIds::UnsafeArenaSwap(DataMessage_EventSource_EventEnvelopeIds* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DataMessage_EventSource_EventEnvelopeIds::InternalSwap(DataMessage_EventSource_EventEnvelopeIds* other) {
  using std::swap;
  CastToBase(&id_)->InternalSwap(CastToBase(&other->id_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataMessage_EventSource_EventEnvelopeIds::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataMessage_EventSource::InitAsDefaultInstance() {
  ::sensoris::protobuf::messages::data::_DataMessage_EventSource_default_instance_._instance.get_mutable()->source_ = const_cast< ::sensoris::protobuf::types::source::Source*>(
      ::sensoris::protobuf::types::source::Source::internal_default_instance());
  ::sensoris::protobuf::messages::data::_DataMessage_EventSource_default_instance_.ids_ = const_cast< ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds*>(
      ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds::internal_default_instance());
  ::sensoris::protobuf::messages::data::_DataMessage_EventSource_default_instance_.paths_ = const_cast< ::sensoris::protobuf::messages::data::DataMessage_Paths*>(
      ::sensoris::protobuf::messages::data::DataMessage_Paths::internal_default_instance());
}
void DataMessage_EventSource::unsafe_arena_set_allocated_source(
    ::sensoris::protobuf::types::source::Source* source) {
  if (GetArenaNoVirtual() == NULL) {
    delete source_;
  }
  source_ = source;
  if (source) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.EventSource.source)
}
void DataMessage_EventSource::clear_source() {
  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
}
void DataMessage_EventSource::set_allocated_ids(::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* ids) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_event_reference();
  if (ids) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(ids);
    if (message_arena != submessage_arena) {
      ids = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ids, submessage_arena);
    }
    set_has_ids();
    event_reference_.ids_ = ids;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.EventSource.ids)
}
void DataMessage_EventSource::set_allocated_paths(::sensoris::protobuf::messages::data::DataMessage_Paths* paths) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_event_reference();
  if (paths) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(paths);
    if (message_arena != submessage_arena) {
      paths = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, paths, submessage_arena);
    }
    set_has_paths();
    event_reference_.paths_ = paths;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.EventSource.paths)
}
void DataMessage_EventSource::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataMessage_EventSource::kSourceFieldNumber;
const int DataMessage_EventSource::kIdsFieldNumber;
const int DataMessage_EventSource::kPathsFieldNumber;
const int DataMessage_EventSource::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataMessage_EventSource::DataMessage_EventSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_EventSource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.messages.data.DataMessage.EventSource)
}
DataMessage_EventSource::DataMessage_EventSource(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  extension_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_EventSource.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.messages.data.DataMessage.EventSource)
}
DataMessage_EventSource::DataMessage_EventSource(const DataMessage_EventSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_source()) {
    source_ = new ::sensoris::protobuf::types::source::Source(*from.source_);
  } else {
    source_ = NULL;
  }
  clear_has_event_reference();
  switch (from.event_reference_case()) {
    case kIds: {
      mutable_ids()->::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds::MergeFrom(from.ids());
      break;
    }
    case kPaths: {
      mutable_paths()->::sensoris::protobuf::messages::data::DataMessage_Paths::MergeFrom(from.paths());
      break;
    }
    case EVENT_REFERENCE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.messages.data.DataMessage.EventSource)
}

void DataMessage_EventSource::SharedCtor() {
  source_ = NULL;
  clear_has_event_reference();
}

DataMessage_EventSource::~DataMessage_EventSource() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.messages.data.DataMessage.EventSource)
  SharedDtor();
}

void DataMessage_EventSource::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete source_;
  if (has_event_reference()) {
    clear_event_reference();
  }
}

void DataMessage_EventSource::ArenaDtor(void* object) {
  DataMessage_EventSource* _this = reinterpret_cast< DataMessage_EventSource* >(object);
  (void)_this;
}
void DataMessage_EventSource::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DataMessage_EventSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataMessage_EventSource::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataMessage_EventSource& DataMessage_EventSource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage_EventSource.base);
  return *internal_default_instance();
}


void DataMessage_EventSource::clear_event_reference() {
// @@protoc_insertion_point(one_of_clear_start:sensoris.protobuf.messages.data.DataMessage.EventSource)
  switch (event_reference_case()) {
    case kIds: {
      if (GetArenaNoVirtual() == NULL) {
        delete event_reference_.ids_;
      }
      break;
    }
    case kPaths: {
      if (GetArenaNoVirtual() == NULL) {
        delete event_reference_.paths_;
      }
      break;
    }
    case EVENT_REFERENCE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_REFERENCE_NOT_SET;
}


void DataMessage_EventSource::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.messages.data.DataMessage.EventSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
  clear_event_reference();
  _internal_metadata_.Clear();
}

bool DataMessage_EventSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.messages.data.DataMessage.EventSource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sensoris.protobuf.types.source.Source source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sensoris.protobuf.messages.data.DataMessage.Paths paths = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_paths()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.messages.data.DataMessage.EventSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.messages.data.DataMessage.EventSource)
  return false;
#undef DO_
}

void DataMessage_EventSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.messages.data.DataMessage.EventSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.source.Source source = 1;
  if (this->has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_source(), output);
  }

  // .sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds ids = 2;
  if (has_ids()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_ids(), output);
  }

  // .sensoris.protobuf.messages.data.DataMessage.Paths paths = 3;
  if (has_paths()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_paths(), output);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.messages.data.DataMessage.EventSource)
}

::google::protobuf::uint8* DataMessage_EventSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.messages.data.DataMessage.EventSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.source.Source source = 1;
  if (this->has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_source(), deterministic, target);
  }

  // .sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds ids = 2;
  if (has_ids()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_ids(), deterministic, target);
  }

  // .sensoris.protobuf.messages.data.DataMessage.Paths paths = 3;
  if (has_paths()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_paths(), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.messages.data.DataMessage.EventSource)
  return target;
}

size_t DataMessage_EventSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.messages.data.DataMessage.EventSource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .sensoris.protobuf.types.source.Source source = 1;
  if (this->has_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_);
  }

  switch (event_reference_case()) {
    // .sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds ids = 2;
    case kIds: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *event_reference_.ids_);
      break;
    }
    // .sensoris.protobuf.messages.data.DataMessage.Paths paths = 3;
    case kPaths: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *event_reference_.paths_);
      break;
    }
    case EVENT_REFERENCE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataMessage_EventSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.messages.data.DataMessage.EventSource)
  GOOGLE_DCHECK_NE(&from, this);
  const DataMessage_EventSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataMessage_EventSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.messages.data.DataMessage.EventSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.messages.data.DataMessage.EventSource)
    MergeFrom(*source);
  }
}

void DataMessage_EventSource::MergeFrom(const DataMessage_EventSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.messages.data.DataMessage.EventSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_source()) {
    mutable_source()->::sensoris::protobuf::types::source::Source::MergeFrom(from.source());
  }
  switch (from.event_reference_case()) {
    case kIds: {
      mutable_ids()->::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds::MergeFrom(from.ids());
      break;
    }
    case kPaths: {
      mutable_paths()->::sensoris::protobuf::messages::data::DataMessage_Paths::MergeFrom(from.paths());
      break;
    }
    case EVENT_REFERENCE_NOT_SET: {
      break;
    }
  }
}

void DataMessage_EventSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.messages.data.DataMessage.EventSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMessage_EventSource::CopyFrom(const DataMessage_EventSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.messages.data.DataMessage.EventSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMessage_EventSource::IsInitialized() const {
  return true;
}

void DataMessage_EventSource::Swap(DataMessage_EventSource* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DataMessage_EventSource* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DataMessage_EventSource::UnsafeArenaSwap(DataMessage_EventSource* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DataMessage_EventSource::InternalSwap(DataMessage_EventSource* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(source_, other->source_);
  swap(event_reference_, other->event_reference_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataMessage_EventSource::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataMessage::InitAsDefaultInstance() {
  ::sensoris::protobuf::messages::data::_DataMessage_default_instance_._instance.get_mutable()->envelope_ = const_cast< ::sensoris::protobuf::messages::data::DataMessage_Envelope*>(
      ::sensoris::protobuf::messages::data::DataMessage_Envelope::internal_default_instance());
}
void DataMessage::unsafe_arena_set_allocated_envelope(
    ::sensoris::protobuf::messages::data::DataMessage_Envelope* envelope) {
  if (GetArenaNoVirtual() == NULL) {
    delete envelope_;
  }
  envelope_ = envelope;
  if (envelope) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.envelope)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataMessage::kEnvelopeFieldNumber;
const int DataMessage::kEventGroupFieldNumber;
const int DataMessage::kEventRelationFieldNumber;
const int DataMessage::kEventSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataMessage::DataMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.messages.data.DataMessage)
}
DataMessage::DataMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  event_group_(arena),
  event_relation_(arena),
  event_source_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.messages.data.DataMessage)
}
DataMessage::DataMessage(const DataMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      event_group_(from.event_group_),
      event_relation_(from.event_relation_),
      event_source_(from.event_source_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_envelope()) {
    envelope_ = new ::sensoris::protobuf::messages::data::DataMessage_Envelope(*from.envelope_);
  } else {
    envelope_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.messages.data.DataMessage)
}

void DataMessage::SharedCtor() {
  envelope_ = NULL;
}

DataMessage::~DataMessage() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.messages.data.DataMessage)
  SharedDtor();
}

void DataMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete envelope_;
}

void DataMessage::ArenaDtor(void* object) {
  DataMessage* _this = reinterpret_cast< DataMessage* >(object);
  (void)_this;
}
void DataMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DataMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataMessage::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataMessage& DataMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessage.base);
  return *internal_default_instance();
}


void DataMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.messages.data.DataMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_group_.Clear();
  event_relation_.Clear();
  event_source_.Clear();
  if (GetArenaNoVirtual() == NULL && envelope_ != NULL) {
    delete envelope_;
  }
  envelope_ = NULL;
  _internal_metadata_.Clear();
}

bool DataMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.messages.data.DataMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sensoris.protobuf.messages.data.DataMessage.Envelope envelope = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_envelope()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sensoris.protobuf.messages.data.EventGroup event_group = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_event_group()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sensoris.protobuf.messages.data.DataMessage.EventRelation event_relation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_event_relation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sensoris.protobuf.messages.data.DataMessage.EventSource event_source = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_event_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.messages.data.DataMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.messages.data.DataMessage)
  return false;
#undef DO_
}

void DataMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.messages.data.DataMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.messages.data.DataMessage.Envelope envelope = 1;
  if (this->has_envelope()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_envelope(), output);
  }

  // repeated .sensoris.protobuf.messages.data.EventGroup event_group = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_group_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->event_group(static_cast<int>(i)),
      output);
  }

  // repeated .sensoris.protobuf.messages.data.DataMessage.EventRelation event_relation = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_relation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->event_relation(static_cast<int>(i)),
      output);
  }

  // repeated .sensoris.protobuf.messages.data.DataMessage.EventSource event_source = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_source_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->event_source(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.messages.data.DataMessage)
}

::google::protobuf::uint8* DataMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.messages.data.DataMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.messages.data.DataMessage.Envelope envelope = 1;
  if (this->has_envelope()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_envelope(), deterministic, target);
  }

  // repeated .sensoris.protobuf.messages.data.EventGroup event_group = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_group_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->event_group(static_cast<int>(i)), deterministic, target);
  }

  // repeated .sensoris.protobuf.messages.data.DataMessage.EventRelation event_relation = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_relation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->event_relation(static_cast<int>(i)), deterministic, target);
  }

  // repeated .sensoris.protobuf.messages.data.DataMessage.EventSource event_source = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_source_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->event_source(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.messages.data.DataMessage)
  return target;
}

size_t DataMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.messages.data.DataMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .sensoris.protobuf.messages.data.EventGroup event_group = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->event_group_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->event_group(static_cast<int>(i)));
    }
  }

  // repeated .sensoris.protobuf.messages.data.DataMessage.EventRelation event_relation = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->event_relation_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->event_relation(static_cast<int>(i)));
    }
  }

  // repeated .sensoris.protobuf.messages.data.DataMessage.EventSource event_source = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->event_source_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->event_source(static_cast<int>(i)));
    }
  }

  // .sensoris.protobuf.messages.data.DataMessage.Envelope envelope = 1;
  if (this->has_envelope()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *envelope_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.messages.data.DataMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const DataMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.messages.data.DataMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.messages.data.DataMessage)
    MergeFrom(*source);
  }
}

void DataMessage::MergeFrom(const DataMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.messages.data.DataMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  event_group_.MergeFrom(from.event_group_);
  event_relation_.MergeFrom(from.event_relation_);
  event_source_.MergeFrom(from.event_source_);
  if (from.has_envelope()) {
    mutable_envelope()->::sensoris::protobuf::messages::data::DataMessage_Envelope::MergeFrom(from.envelope());
  }
}

void DataMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.messages.data.DataMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMessage::CopyFrom(const DataMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.messages.data.DataMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMessage::IsInitialized() const {
  return true;
}

void DataMessage::Swap(DataMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DataMessage* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DataMessage::UnsafeArenaSwap(DataMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DataMessage::InternalSwap(DataMessage* other) {
  using std::swap;
  CastToBase(&event_group_)->InternalSwap(CastToBase(&other->event_group_));
  CastToBase(&event_relation_)->InternalSwap(CastToBase(&other->event_relation_));
  CastToBase(&event_source_)->InternalSwap(CastToBase(&other->event_source_));
  swap(envelope_, other->envelope_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataMessage::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataMessages_Envelope::InitAsDefaultInstance() {
  ::sensoris::protobuf::messages::data::_DataMessages_Envelope_default_instance_._instance.get_mutable()->version_ = const_cast< ::sensoris::protobuf::types::base::Version*>(
      ::sensoris::protobuf::types::base::Version::internal_default_instance());
}
void DataMessages_Envelope::unsafe_arena_set_allocated_version(
    ::sensoris::protobuf::types::base::Version* version) {
  if (GetArenaNoVirtual() == NULL) {
    delete version_;
  }
  version_ = version;
  if (version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessages.Envelope.version)
}
void DataMessages_Envelope::clear_version() {
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
}
void DataMessages_Envelope::clear_submitter() {
  submitter_.Clear();
}
void DataMessages_Envelope::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataMessages_Envelope::kVersionFieldNumber;
const int DataMessages_Envelope::kSubmitterFieldNumber;
const int DataMessages_Envelope::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataMessages_Envelope::DataMessages_Envelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessages_Envelope.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.messages.data.DataMessages.Envelope)
}
DataMessages_Envelope::DataMessages_Envelope(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  submitter_(arena),
  extension_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessages_Envelope.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.messages.data.DataMessages.Envelope)
}
DataMessages_Envelope::DataMessages_Envelope(const DataMessages_Envelope& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      submitter_(from.submitter_),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_version()) {
    version_ = new ::sensoris::protobuf::types::base::Version(*from.version_);
  } else {
    version_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.messages.data.DataMessages.Envelope)
}

void DataMessages_Envelope::SharedCtor() {
  version_ = NULL;
}

DataMessages_Envelope::~DataMessages_Envelope() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.messages.data.DataMessages.Envelope)
  SharedDtor();
}

void DataMessages_Envelope::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete version_;
}

void DataMessages_Envelope::ArenaDtor(void* object) {
  DataMessages_Envelope* _this = reinterpret_cast< DataMessages_Envelope* >(object);
  (void)_this;
}
void DataMessages_Envelope::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DataMessages_Envelope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataMessages_Envelope::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataMessages_Envelope& DataMessages_Envelope::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessages_Envelope.base);
  return *internal_default_instance();
}


void DataMessages_Envelope::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.messages.data.DataMessages.Envelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  submitter_.Clear();
  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
  _internal_metadata_.Clear();
}

bool DataMessages_Envelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.messages.data.DataMessages.Envelope)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sensoris.protobuf.types.base.Version version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sensoris.protobuf.types.base.Entity submitter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_submitter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.messages.data.DataMessages.Envelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.messages.data.DataMessages.Envelope)
  return false;
#undef DO_
}

void DataMessages_Envelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.messages.data.DataMessages.Envelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.Version version = 1;
  if (this->has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_version(), output);
  }

  // repeated .sensoris.protobuf.types.base.Entity submitter = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->submitter_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->submitter(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.messages.data.DataMessages.Envelope)
}

::google::protobuf::uint8* DataMessages_Envelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.messages.data.DataMessages.Envelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.Version version = 1;
  if (this->has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_version(), deterministic, target);
  }

  // repeated .sensoris.protobuf.types.base.Entity submitter = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->submitter_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->submitter(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.messages.data.DataMessages.Envelope)
  return target;
}

size_t DataMessages_Envelope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.messages.data.DataMessages.Envelope)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .sensoris.protobuf.types.base.Entity submitter = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->submitter_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->submitter(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .sensoris.protobuf.types.base.Version version = 1;
  if (this->has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *version_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataMessages_Envelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.messages.data.DataMessages.Envelope)
  GOOGLE_DCHECK_NE(&from, this);
  const DataMessages_Envelope* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataMessages_Envelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.messages.data.DataMessages.Envelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.messages.data.DataMessages.Envelope)
    MergeFrom(*source);
  }
}

void DataMessages_Envelope::MergeFrom(const DataMessages_Envelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.messages.data.DataMessages.Envelope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  submitter_.MergeFrom(from.submitter_);
  extension_.MergeFrom(from.extension_);
  if (from.has_version()) {
    mutable_version()->::sensoris::protobuf::types::base::Version::MergeFrom(from.version());
  }
}

void DataMessages_Envelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.messages.data.DataMessages.Envelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMessages_Envelope::CopyFrom(const DataMessages_Envelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.messages.data.DataMessages.Envelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMessages_Envelope::IsInitialized() const {
  return true;
}

void DataMessages_Envelope::Swap(DataMessages_Envelope* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DataMessages_Envelope* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DataMessages_Envelope::UnsafeArenaSwap(DataMessages_Envelope* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DataMessages_Envelope::InternalSwap(DataMessages_Envelope* other) {
  using std::swap;
  CastToBase(&submitter_)->InternalSwap(CastToBase(&other->submitter_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataMessages_Envelope::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataMessages::InitAsDefaultInstance() {
  ::sensoris::protobuf::messages::data::_DataMessages_default_instance_._instance.get_mutable()->envelope_ = const_cast< ::sensoris::protobuf::messages::data::DataMessages_Envelope*>(
      ::sensoris::protobuf::messages::data::DataMessages_Envelope::internal_default_instance());
}
void DataMessages::unsafe_arena_set_allocated_envelope(
    ::sensoris::protobuf::messages::data::DataMessages_Envelope* envelope) {
  if (GetArenaNoVirtual() == NULL) {
    delete envelope_;
  }
  envelope_ = envelope;
  if (envelope) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessages.envelope)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataMessages::kEnvelopeFieldNumber;
const int DataMessages::kDataMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataMessages::DataMessages()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessages.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sensoris.protobuf.messages.data.DataMessages)
}
DataMessages::DataMessages(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  data_message_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessages.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.messages.data.DataMessages)
}
DataMessages::DataMessages(const DataMessages& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_message_(from.data_message_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_envelope()) {
    envelope_ = new ::sensoris::protobuf::messages::data::DataMessages_Envelope(*from.envelope_);
  } else {
    envelope_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.messages.data.DataMessages)
}

void DataMessages::SharedCtor() {
  envelope_ = NULL;
}

DataMessages::~DataMessages() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.messages.data.DataMessages)
  SharedDtor();
}

void DataMessages::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete envelope_;
}

void DataMessages::ArenaDtor(void* object) {
  DataMessages* _this = reinterpret_cast< DataMessages* >(object);
  (void)_this;
}
void DataMessages::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DataMessages::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataMessages::descriptor() {
  ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataMessages& DataMessages::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::scc_info_DataMessages.base);
  return *internal_default_instance();
}


void DataMessages::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.messages.data.DataMessages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_message_.Clear();
  if (GetArenaNoVirtual() == NULL && envelope_ != NULL) {
    delete envelope_;
  }
  envelope_ = NULL;
  _internal_metadata_.Clear();
}

bool DataMessages::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sensoris.protobuf.messages.data.DataMessages)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sensoris.protobuf.messages.data.DataMessages.Envelope envelope = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_envelope()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sensoris.protobuf.messages.data.DataMessage data_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_data_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sensoris.protobuf.messages.data.DataMessages)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sensoris.protobuf.messages.data.DataMessages)
  return false;
#undef DO_
}

void DataMessages::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sensoris.protobuf.messages.data.DataMessages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.messages.data.DataMessages.Envelope envelope = 1;
  if (this->has_envelope()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_envelope(), output);
  }

  // repeated .sensoris.protobuf.messages.data.DataMessage data_message = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_message_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->data_message(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sensoris.protobuf.messages.data.DataMessages)
}

::google::protobuf::uint8* DataMessages::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.messages.data.DataMessages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sensoris.protobuf.messages.data.DataMessages.Envelope envelope = 1;
  if (this->has_envelope()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_envelope(), deterministic, target);
  }

  // repeated .sensoris.protobuf.messages.data.DataMessage data_message = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_message_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->data_message(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.messages.data.DataMessages)
  return target;
}

size_t DataMessages::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.messages.data.DataMessages)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .sensoris.protobuf.messages.data.DataMessage data_message = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->data_message_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data_message(static_cast<int>(i)));
    }
  }

  // .sensoris.protobuf.messages.data.DataMessages.Envelope envelope = 1;
  if (this->has_envelope()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *envelope_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataMessages::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sensoris.protobuf.messages.data.DataMessages)
  GOOGLE_DCHECK_NE(&from, this);
  const DataMessages* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataMessages>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sensoris.protobuf.messages.data.DataMessages)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sensoris.protobuf.messages.data.DataMessages)
    MergeFrom(*source);
  }
}

void DataMessages::MergeFrom(const DataMessages& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.messages.data.DataMessages)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_message_.MergeFrom(from.data_message_);
  if (from.has_envelope()) {
    mutable_envelope()->::sensoris::protobuf::messages::data::DataMessages_Envelope::MergeFrom(from.envelope());
  }
}

void DataMessages::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sensoris.protobuf.messages.data.DataMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMessages::CopyFrom(const DataMessages& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.messages.data.DataMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMessages::IsInitialized() const {
  return true;
}

void DataMessages::Swap(DataMessages* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DataMessages* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DataMessages::UnsafeArenaSwap(DataMessages* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DataMessages::InternalSwap(DataMessages* other) {
  using std::swap;
  CastToBase(&data_message_)->InternalSwap(CastToBase(&other->data_message_));
  swap(envelope_, other->envelope_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataMessages::GetMetadata() const {
  protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace data
}  // namespace messages
}  // namespace protobuf
}  // namespace sensoris
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* Arena::CreateMaybeMessage< ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::messages::data::EventGroup_Envelope* Arena::CreateMaybeMessage< ::sensoris::protobuf::messages::data::EventGroup_Envelope >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::messages::data::EventGroup_Envelope >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::messages::data::EventGroup* Arena::CreateMaybeMessage< ::sensoris::protobuf::messages::data::EventGroup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::messages::data::EventGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path* Arena::CreateMaybeMessage< ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* Arena::CreateMaybeMessage< ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::messages::data::DataMessage_Paths* Arena::CreateMaybeMessage< ::sensoris::protobuf::messages::data::DataMessage_Paths >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::messages::data::DataMessage_Paths >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* Arena::CreateMaybeMessage< ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride* Arena::CreateMaybeMessage< ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* Arena::CreateMaybeMessage< ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* Arena::CreateMaybeMessage< ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* Arena::CreateMaybeMessage< ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::messages::data::DataMessage_Envelope* Arena::CreateMaybeMessage< ::sensoris::protobuf::messages::data::DataMessage_Envelope >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::messages::data::DataMessage_Envelope >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::messages::data::DataMessage_EventRelation* Arena::CreateMaybeMessage< ::sensoris::protobuf::messages::data::DataMessage_EventRelation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::messages::data::DataMessage_EventRelation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* Arena::CreateMaybeMessage< ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::messages::data::DataMessage_EventSource* Arena::CreateMaybeMessage< ::sensoris::protobuf::messages::data::DataMessage_EventSource >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::messages::data::DataMessage_EventSource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::messages::data::DataMessage* Arena::CreateMaybeMessage< ::sensoris::protobuf::messages::data::DataMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::messages::data::DataMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::messages::data::DataMessages_Envelope* Arena::CreateMaybeMessage< ::sensoris::protobuf::messages::data::DataMessages_Envelope >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::messages::data::DataMessages_Envelope >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sensoris::protobuf::messages::data::DataMessages* Arena::CreateMaybeMessage< ::sensoris::protobuf::messages::data::DataMessages >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sensoris::protobuf::messages::data::DataMessages >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
