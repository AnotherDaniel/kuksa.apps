// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/messages/data.proto

#ifndef PROTOBUF_INCLUDED_sensoris_2fprotobuf_2fmessages_2fdata_2eproto
#define PROTOBUF_INCLUDED_sensoris_2fprotobuf_2fmessages_2fdata_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include <google/protobuf/wrappers.pb.h>
#include "sensoris/protobuf/types/base.pb.h"
#include "sensoris/protobuf/types/source.pb.h"
#include "sensoris/protobuf/types/spatial.pb.h"
#include "sensoris/protobuf/categories/localization.pb.h"
#include "sensoris/protobuf/categories/object_detection.pb.h"
#include "sensoris/protobuf/categories/weather.pb.h"
#include "sensoris/protobuf/categories/driving_behavior.pb.h"
#include "sensoris/protobuf/categories/intersection_attribution.pb.h"
#include "sensoris/protobuf/categories/road_attribution.pb.h"
#include "sensoris/protobuf/categories/traffic_regulation.pb.h"
#include "sensoris/protobuf/categories/traffic_events.pb.h"
#include "sensoris/protobuf/categories/traffic_maneuver.pb.h"
#include "sensoris/protobuf/categories/brake.pb.h"
#include "sensoris/protobuf/categories/powertrain.pb.h"
#include "sensoris/protobuf/categories/map.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto 

namespace protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[18];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto
namespace sensoris {
namespace protobuf {
namespace messages {
namespace data {
class DataMessage;
class DataMessageDefaultTypeInternal;
extern DataMessageDefaultTypeInternal _DataMessage_default_instance_;
class DataMessage_AbsolutePaths;
class DataMessage_AbsolutePathsDefaultTypeInternal;
extern DataMessage_AbsolutePathsDefaultTypeInternal _DataMessage_AbsolutePaths_default_instance_;
class DataMessage_AbsolutePaths_Path;
class DataMessage_AbsolutePaths_PathDefaultTypeInternal;
extern DataMessage_AbsolutePaths_PathDefaultTypeInternal _DataMessage_AbsolutePaths_Path_default_instance_;
class DataMessage_Envelope;
class DataMessage_EnvelopeDefaultTypeInternal;
extern DataMessage_EnvelopeDefaultTypeInternal _DataMessage_Envelope_default_instance_;
class DataMessage_Envelope_FieldResolutionOverride;
class DataMessage_Envelope_FieldResolutionOverrideDefaultTypeInternal;
extern DataMessage_Envelope_FieldResolutionOverrideDefaultTypeInternal _DataMessage_Envelope_FieldResolutionOverride_default_instance_;
class DataMessage_Envelope_Ids;
class DataMessage_Envelope_IdsDefaultTypeInternal;
extern DataMessage_Envelope_IdsDefaultTypeInternal _DataMessage_Envelope_Ids_default_instance_;
class DataMessage_Envelope_MapIdentification;
class DataMessage_Envelope_MapIdentificationDefaultTypeInternal;
extern DataMessage_Envelope_MapIdentificationDefaultTypeInternal _DataMessage_Envelope_MapIdentification_default_instance_;
class DataMessage_Envelope_MapIdentification_MapVersion;
class DataMessage_Envelope_MapIdentification_MapVersionDefaultTypeInternal;
extern DataMessage_Envelope_MapIdentification_MapVersionDefaultTypeInternal _DataMessage_Envelope_MapIdentification_MapVersion_default_instance_;
class DataMessage_Envelope_VehicleDimensions;
class DataMessage_Envelope_VehicleDimensionsDefaultTypeInternal;
extern DataMessage_Envelope_VehicleDimensionsDefaultTypeInternal _DataMessage_Envelope_VehicleDimensions_default_instance_;
class DataMessage_EventRelation;
class DataMessage_EventRelationDefaultTypeInternal;
extern DataMessage_EventRelationDefaultTypeInternal _DataMessage_EventRelation_default_instance_;
class DataMessage_EventSource;
class DataMessage_EventSourceDefaultTypeInternal;
extern DataMessage_EventSourceDefaultTypeInternal _DataMessage_EventSource_default_instance_;
class DataMessage_EventSource_EventEnvelopeIds;
class DataMessage_EventSource_EventEnvelopeIdsDefaultTypeInternal;
extern DataMessage_EventSource_EventEnvelopeIdsDefaultTypeInternal _DataMessage_EventSource_EventEnvelopeIds_default_instance_;
class DataMessage_Paths;
class DataMessage_PathsDefaultTypeInternal;
extern DataMessage_PathsDefaultTypeInternal _DataMessage_Paths_default_instance_;
class DataMessages;
class DataMessagesDefaultTypeInternal;
extern DataMessagesDefaultTypeInternal _DataMessages_default_instance_;
class DataMessages_Envelope;
class DataMessages_EnvelopeDefaultTypeInternal;
extern DataMessages_EnvelopeDefaultTypeInternal _DataMessages_Envelope_default_instance_;
class EventGroup;
class EventGroupDefaultTypeInternal;
extern EventGroupDefaultTypeInternal _EventGroup_default_instance_;
class EventGroup_Envelope;
class EventGroup_EnvelopeDefaultTypeInternal;
extern EventGroup_EnvelopeDefaultTypeInternal _EventGroup_Envelope_default_instance_;
class EventGroup_Envelope_Origin;
class EventGroup_Envelope_OriginDefaultTypeInternal;
extern EventGroup_Envelope_OriginDefaultTypeInternal _EventGroup_Envelope_Origin_default_instance_;
}  // namespace data
}  // namespace messages
}  // namespace protobuf
}  // namespace sensoris
namespace google {
namespace protobuf {
template<> ::sensoris::protobuf::messages::data::DataMessage* Arena::CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage>(Arena*);
template<> ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* Arena::CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths>(Arena*);
template<> ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path* Arena::CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path>(Arena*);
template<> ::sensoris::protobuf::messages::data::DataMessage_Envelope* Arena::CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Envelope>(Arena*);
template<> ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride* Arena::CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride>(Arena*);
template<> ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* Arena::CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids>(Arena*);
template<> ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* Arena::CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification>(Arena*);
template<> ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* Arena::CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion>(Arena*);
template<> ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* Arena::CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions>(Arena*);
template<> ::sensoris::protobuf::messages::data::DataMessage_EventRelation* Arena::CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_EventRelation>(Arena*);
template<> ::sensoris::protobuf::messages::data::DataMessage_EventSource* Arena::CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_EventSource>(Arena*);
template<> ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* Arena::CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds>(Arena*);
template<> ::sensoris::protobuf::messages::data::DataMessage_Paths* Arena::CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Paths>(Arena*);
template<> ::sensoris::protobuf::messages::data::DataMessages* Arena::CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessages>(Arena*);
template<> ::sensoris::protobuf::messages::data::DataMessages_Envelope* Arena::CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessages_Envelope>(Arena*);
template<> ::sensoris::protobuf::messages::data::EventGroup* Arena::CreateMaybeMessage<::sensoris::protobuf::messages::data::EventGroup>(Arena*);
template<> ::sensoris::protobuf::messages::data::EventGroup_Envelope* Arena::CreateMaybeMessage<::sensoris::protobuf::messages::data::EventGroup_Envelope>(Arena*);
template<> ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* Arena::CreateMaybeMessage<::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace sensoris {
namespace protobuf {
namespace messages {
namespace data {

enum DataMessage_Envelope_MapIdentification_Format {
  DataMessage_Envelope_MapIdentification_Format_UNKNOWN_FORMAT = 0,
  DataMessage_Envelope_MapIdentification_Format_OTHER = 1,
  DataMessage_Envelope_MapIdentification_Format_NDS = 2,
  DataMessage_Envelope_MapIdentification_Format_DataMessage_Envelope_MapIdentification_Format_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DataMessage_Envelope_MapIdentification_Format_DataMessage_Envelope_MapIdentification_Format_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DataMessage_Envelope_MapIdentification_Format_IsValid(int value);
const DataMessage_Envelope_MapIdentification_Format DataMessage_Envelope_MapIdentification_Format_Format_MIN = DataMessage_Envelope_MapIdentification_Format_UNKNOWN_FORMAT;
const DataMessage_Envelope_MapIdentification_Format DataMessage_Envelope_MapIdentification_Format_Format_MAX = DataMessage_Envelope_MapIdentification_Format_NDS;
const int DataMessage_Envelope_MapIdentification_Format_Format_ARRAYSIZE = DataMessage_Envelope_MapIdentification_Format_Format_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataMessage_Envelope_MapIdentification_Format_descriptor();
inline const ::std::string& DataMessage_Envelope_MapIdentification_Format_Name(DataMessage_Envelope_MapIdentification_Format value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataMessage_Envelope_MapIdentification_Format_descriptor(), value);
}
inline bool DataMessage_Envelope_MapIdentification_Format_Parse(
    const ::std::string& name, DataMessage_Envelope_MapIdentification_Format* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataMessage_Envelope_MapIdentification_Format>(
    DataMessage_Envelope_MapIdentification_Format_descriptor(), name, value);
}
enum DataMessage_EventRelation_Type {
  DataMessage_EventRelation_Type_UNKNOWN_TYPE = 0,
  DataMessage_EventRelation_Type_EQUAL = 1,
  DataMessage_EventRelation_Type_GROUP = 2,
  DataMessage_EventRelation_Type_CONTAIN = 3,
  DataMessage_EventRelation_Type_IMPACT = 4,
  DataMessage_EventRelation_Type_START_AT = 5,
  DataMessage_EventRelation_Type_END_AT = 6,
  DataMessage_EventRelation_Type_LEFT_OF = 7,
  DataMessage_EventRelation_Type_RIGHT_OF = 8,
  DataMessage_EventRelation_Type_TRIGGERED_BY = 9,
  DataMessage_EventRelation_Type_DERIVED_FROM = 11,
  DataMessage_EventRelation_Type_MAP_REFERENCE = 12,
  DataMessage_EventRelation_Type_DataMessage_EventRelation_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DataMessage_EventRelation_Type_DataMessage_EventRelation_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DataMessage_EventRelation_Type_IsValid(int value);
const DataMessage_EventRelation_Type DataMessage_EventRelation_Type_Type_MIN = DataMessage_EventRelation_Type_UNKNOWN_TYPE;
const DataMessage_EventRelation_Type DataMessage_EventRelation_Type_Type_MAX = DataMessage_EventRelation_Type_MAP_REFERENCE;
const int DataMessage_EventRelation_Type_Type_ARRAYSIZE = DataMessage_EventRelation_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataMessage_EventRelation_Type_descriptor();
inline const ::std::string& DataMessage_EventRelation_Type_Name(DataMessage_EventRelation_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataMessage_EventRelation_Type_descriptor(), value);
}
inline bool DataMessage_EventRelation_Type_Parse(
    const ::std::string& name, DataMessage_EventRelation_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataMessage_EventRelation_Type>(
    DataMessage_EventRelation_Type_descriptor(), name, value);
}
// ===================================================================

class EventGroup_Envelope_Origin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin) */ {
 public:
  EventGroup_Envelope_Origin();
  virtual ~EventGroup_Envelope_Origin();

  EventGroup_Envelope_Origin(const EventGroup_Envelope_Origin& from);

  inline EventGroup_Envelope_Origin& operator=(const EventGroup_Envelope_Origin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EventGroup_Envelope_Origin(EventGroup_Envelope_Origin&& from) noexcept
    : EventGroup_Envelope_Origin() {
    *this = ::std::move(from);
  }

  inline EventGroup_Envelope_Origin& operator=(EventGroup_Envelope_Origin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const EventGroup_Envelope_Origin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EventGroup_Envelope_Origin* internal_default_instance() {
    return reinterpret_cast<const EventGroup_Envelope_Origin*>(
               &_EventGroup_Envelope_Origin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(EventGroup_Envelope_Origin* other);
  void Swap(EventGroup_Envelope_Origin* other);
  friend void swap(EventGroup_Envelope_Origin& a, EventGroup_Envelope_Origin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EventGroup_Envelope_Origin* New() const final {
    return CreateMaybeMessage<EventGroup_Envelope_Origin>(NULL);
  }

  EventGroup_Envelope_Origin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EventGroup_Envelope_Origin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EventGroup_Envelope_Origin& from);
  void MergeFrom(const EventGroup_Envelope_Origin& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventGroup_Envelope_Origin* other);
  protected:
  explicit EventGroup_Envelope_Origin(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .sensoris.protobuf.types.base.Timestamp timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  private:
  const ::sensoris::protobuf::types::base::Timestamp& _internal_timestamp() const;
  public:
  const ::sensoris::protobuf::types::base::Timestamp& timestamp() const;
  ::sensoris::protobuf::types::base::Timestamp* release_timestamp();
  ::sensoris::protobuf::types::base::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::sensoris::protobuf::types::base::Timestamp* timestamp);
  void unsafe_arena_set_allocated_timestamp(
      ::sensoris::protobuf::types::base::Timestamp* timestamp);
  ::sensoris::protobuf::types::base::Timestamp* unsafe_arena_release_timestamp();

  // .sensoris.protobuf.types.spatial.PositionAndAccuracy position_and_accuracy = 2;
  bool has_position_and_accuracy() const;
  void clear_position_and_accuracy();
  static const int kPositionAndAccuracyFieldNumber = 2;
  private:
  const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& _internal_position_and_accuracy() const;
  public:
  const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& position_and_accuracy() const;
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* release_position_and_accuracy();
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* mutable_position_and_accuracy();
  void set_allocated_position_and_accuracy(::sensoris::protobuf::types::spatial::PositionAndAccuracy* position_and_accuracy);
  void unsafe_arena_set_allocated_position_and_accuracy(
      ::sensoris::protobuf::types::spatial::PositionAndAccuracy* position_and_accuracy);
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* unsafe_arena_release_position_and_accuracy();

  // .sensoris.protobuf.types.spatial.RotationAndAccuracy orientation_and_accuracy = 3;
  bool has_orientation_and_accuracy() const;
  void clear_orientation_and_accuracy();
  static const int kOrientationAndAccuracyFieldNumber = 3;
  private:
  const ::sensoris::protobuf::types::spatial::RotationAndAccuracy& _internal_orientation_and_accuracy() const;
  public:
  const ::sensoris::protobuf::types::spatial::RotationAndAccuracy& orientation_and_accuracy() const;
  ::sensoris::protobuf::types::spatial::RotationAndAccuracy* release_orientation_and_accuracy();
  ::sensoris::protobuf::types::spatial::RotationAndAccuracy* mutable_orientation_and_accuracy();
  void set_allocated_orientation_and_accuracy(::sensoris::protobuf::types::spatial::RotationAndAccuracy* orientation_and_accuracy);
  void unsafe_arena_set_allocated_orientation_and_accuracy(
      ::sensoris::protobuf::types::spatial::RotationAndAccuracy* orientation_and_accuracy);
  ::sensoris::protobuf::types::spatial::RotationAndAccuracy* unsafe_arena_release_orientation_and_accuracy();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::sensoris::protobuf::types::base::Timestamp* timestamp_;
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* position_and_accuracy_;
  ::sensoris::protobuf::types::spatial::RotationAndAccuracy* orientation_and_accuracy_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EventGroup_Envelope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.EventGroup.Envelope) */ {
 public:
  EventGroup_Envelope();
  virtual ~EventGroup_Envelope();

  EventGroup_Envelope(const EventGroup_Envelope& from);

  inline EventGroup_Envelope& operator=(const EventGroup_Envelope& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EventGroup_Envelope(EventGroup_Envelope&& from) noexcept
    : EventGroup_Envelope() {
    *this = ::std::move(from);
  }

  inline EventGroup_Envelope& operator=(EventGroup_Envelope&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const EventGroup_Envelope& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EventGroup_Envelope* internal_default_instance() {
    return reinterpret_cast<const EventGroup_Envelope*>(
               &_EventGroup_Envelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(EventGroup_Envelope* other);
  void Swap(EventGroup_Envelope* other);
  friend void swap(EventGroup_Envelope& a, EventGroup_Envelope& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EventGroup_Envelope* New() const final {
    return CreateMaybeMessage<EventGroup_Envelope>(NULL);
  }

  EventGroup_Envelope* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EventGroup_Envelope>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EventGroup_Envelope& from);
  void MergeFrom(const EventGroup_Envelope& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventGroup_Envelope* other);
  protected:
  explicit EventGroup_Envelope(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EventGroup_Envelope_Origin Origin;

  // accessors -------------------------------------------------------

  // repeated .google.protobuf.Any extension = 15;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 15;
  ::google::protobuf::Any* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_extension();
  const ::google::protobuf::Any& extension(int index) const;
  ::google::protobuf::Any* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      extension() const;

  // .sensoris.protobuf.messages.data.EventGroup.Envelope.Origin origin = 1;
  bool has_origin() const;
  void clear_origin();
  static const int kOriginFieldNumber = 1;
  private:
  const ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin& _internal_origin() const;
  public:
  const ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin& origin() const;
  ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* release_origin();
  ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* mutable_origin();
  void set_allocated_origin(::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* origin);
  void unsafe_arena_set_allocated_origin(
      ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* origin);
  ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* unsafe_arena_release_origin();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.EventGroup.Envelope)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > extension_;
  ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* origin_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EventGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.EventGroup) */ {
 public:
  EventGroup();
  virtual ~EventGroup();

  EventGroup(const EventGroup& from);

  inline EventGroup& operator=(const EventGroup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EventGroup(EventGroup&& from) noexcept
    : EventGroup() {
    *this = ::std::move(from);
  }

  inline EventGroup& operator=(EventGroup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const EventGroup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EventGroup* internal_default_instance() {
    return reinterpret_cast<const EventGroup*>(
               &_EventGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(EventGroup* other);
  void Swap(EventGroup* other);
  friend void swap(EventGroup& a, EventGroup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EventGroup* New() const final {
    return CreateMaybeMessage<EventGroup>(NULL);
  }

  EventGroup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EventGroup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EventGroup& from);
  void MergeFrom(const EventGroup& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventGroup* other);
  protected:
  explicit EventGroup(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EventGroup_Envelope Envelope;

  // accessors -------------------------------------------------------

  // .sensoris.protobuf.messages.data.EventGroup.Envelope envelope = 1;
  bool has_envelope() const;
  void clear_envelope();
  static const int kEnvelopeFieldNumber = 1;
  private:
  const ::sensoris::protobuf::messages::data::EventGroup_Envelope& _internal_envelope() const;
  public:
  const ::sensoris::protobuf::messages::data::EventGroup_Envelope& envelope() const;
  ::sensoris::protobuf::messages::data::EventGroup_Envelope* release_envelope();
  ::sensoris::protobuf::messages::data::EventGroup_Envelope* mutable_envelope();
  void set_allocated_envelope(::sensoris::protobuf::messages::data::EventGroup_Envelope* envelope);
  void unsafe_arena_set_allocated_envelope(
      ::sensoris::protobuf::messages::data::EventGroup_Envelope* envelope);
  ::sensoris::protobuf::messages::data::EventGroup_Envelope* unsafe_arena_release_envelope();

  // .sensoris.protobuf.categories.localization.LocalizationCategory localization_category = 2;
  bool has_localization_category() const;
  void clear_localization_category();
  static const int kLocalizationCategoryFieldNumber = 2;
  private:
  const ::sensoris::protobuf::categories::localization::LocalizationCategory& _internal_localization_category() const;
  public:
  const ::sensoris::protobuf::categories::localization::LocalizationCategory& localization_category() const;
  ::sensoris::protobuf::categories::localization::LocalizationCategory* release_localization_category();
  ::sensoris::protobuf::categories::localization::LocalizationCategory* mutable_localization_category();
  void set_allocated_localization_category(::sensoris::protobuf::categories::localization::LocalizationCategory* localization_category);
  void unsafe_arena_set_allocated_localization_category(
      ::sensoris::protobuf::categories::localization::LocalizationCategory* localization_category);
  ::sensoris::protobuf::categories::localization::LocalizationCategory* unsafe_arena_release_localization_category();

  // .sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory object_detection_category = 3;
  bool has_object_detection_category() const;
  void clear_object_detection_category();
  static const int kObjectDetectionCategoryFieldNumber = 3;
  private:
  const ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory& _internal_object_detection_category() const;
  public:
  const ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory& object_detection_category() const;
  ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* release_object_detection_category();
  ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* mutable_object_detection_category();
  void set_allocated_object_detection_category(::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* object_detection_category);
  void unsafe_arena_set_allocated_object_detection_category(
      ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* object_detection_category);
  ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* unsafe_arena_release_object_detection_category();

  // .sensoris.protobuf.categories.weather.WeatherCategory weather_category = 4;
  bool has_weather_category() const;
  void clear_weather_category();
  static const int kWeatherCategoryFieldNumber = 4;
  private:
  const ::sensoris::protobuf::categories::weather::WeatherCategory& _internal_weather_category() const;
  public:
  const ::sensoris::protobuf::categories::weather::WeatherCategory& weather_category() const;
  ::sensoris::protobuf::categories::weather::WeatherCategory* release_weather_category();
  ::sensoris::protobuf::categories::weather::WeatherCategory* mutable_weather_category();
  void set_allocated_weather_category(::sensoris::protobuf::categories::weather::WeatherCategory* weather_category);
  void unsafe_arena_set_allocated_weather_category(
      ::sensoris::protobuf::categories::weather::WeatherCategory* weather_category);
  ::sensoris::protobuf::categories::weather::WeatherCategory* unsafe_arena_release_weather_category();

  // .sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory driving_behavior_category = 5;
  bool has_driving_behavior_category() const;
  void clear_driving_behavior_category();
  static const int kDrivingBehaviorCategoryFieldNumber = 5;
  private:
  const ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory& _internal_driving_behavior_category() const;
  public:
  const ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory& driving_behavior_category() const;
  ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* release_driving_behavior_category();
  ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* mutable_driving_behavior_category();
  void set_allocated_driving_behavior_category(::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* driving_behavior_category);
  void unsafe_arena_set_allocated_driving_behavior_category(
      ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* driving_behavior_category);
  ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* unsafe_arena_release_driving_behavior_category();

  // .sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory intersection_attribution_category = 6;
  bool has_intersection_attribution_category() const;
  void clear_intersection_attribution_category();
  static const int kIntersectionAttributionCategoryFieldNumber = 6;
  private:
  const ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory& _internal_intersection_attribution_category() const;
  public:
  const ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory& intersection_attribution_category() const;
  ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* release_intersection_attribution_category();
  ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* mutable_intersection_attribution_category();
  void set_allocated_intersection_attribution_category(::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* intersection_attribution_category);
  void unsafe_arena_set_allocated_intersection_attribution_category(
      ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* intersection_attribution_category);
  ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* unsafe_arena_release_intersection_attribution_category();

  // .sensoris.protobuf.categories.roadattribution.RoadAttributionCategory road_attribution_category = 7;
  bool has_road_attribution_category() const;
  void clear_road_attribution_category();
  static const int kRoadAttributionCategoryFieldNumber = 7;
  private:
  const ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory& _internal_road_attribution_category() const;
  public:
  const ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory& road_attribution_category() const;
  ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* release_road_attribution_category();
  ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* mutable_road_attribution_category();
  void set_allocated_road_attribution_category(::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* road_attribution_category);
  void unsafe_arena_set_allocated_road_attribution_category(
      ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* road_attribution_category);
  ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* unsafe_arena_release_road_attribution_category();

  // .sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory traffic_regulation_category = 8;
  bool has_traffic_regulation_category() const;
  void clear_traffic_regulation_category();
  static const int kTrafficRegulationCategoryFieldNumber = 8;
  private:
  const ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory& _internal_traffic_regulation_category() const;
  public:
  const ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory& traffic_regulation_category() const;
  ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* release_traffic_regulation_category();
  ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* mutable_traffic_regulation_category();
  void set_allocated_traffic_regulation_category(::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* traffic_regulation_category);
  void unsafe_arena_set_allocated_traffic_regulation_category(
      ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* traffic_regulation_category);
  ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* unsafe_arena_release_traffic_regulation_category();

  // .sensoris.protobuf.categories.trafficevents.TrafficEventsCategory traffic_events_category = 9;
  bool has_traffic_events_category() const;
  void clear_traffic_events_category();
  static const int kTrafficEventsCategoryFieldNumber = 9;
  private:
  const ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory& _internal_traffic_events_category() const;
  public:
  const ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory& traffic_events_category() const;
  ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* release_traffic_events_category();
  ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* mutable_traffic_events_category();
  void set_allocated_traffic_events_category(::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* traffic_events_category);
  void unsafe_arena_set_allocated_traffic_events_category(
      ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* traffic_events_category);
  ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* unsafe_arena_release_traffic_events_category();

  // .sensoris.protobuf.categories.trafficmaneuver.TrafficManeuverCategory traffic_maneuver_category = 10;
  bool has_traffic_maneuver_category() const;
  void clear_traffic_maneuver_category();
  static const int kTrafficManeuverCategoryFieldNumber = 10;
  private:
  const ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory& _internal_traffic_maneuver_category() const;
  public:
  const ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory& traffic_maneuver_category() const;
  ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* release_traffic_maneuver_category();
  ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* mutable_traffic_maneuver_category();
  void set_allocated_traffic_maneuver_category(::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* traffic_maneuver_category);
  void unsafe_arena_set_allocated_traffic_maneuver_category(
      ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* traffic_maneuver_category);
  ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* unsafe_arena_release_traffic_maneuver_category();

  // .sensoris.protobuf.categories.brake.BrakeCategory brake_category = 11;
  bool has_brake_category() const;
  void clear_brake_category();
  static const int kBrakeCategoryFieldNumber = 11;
  private:
  const ::sensoris::protobuf::categories::brake::BrakeCategory& _internal_brake_category() const;
  public:
  const ::sensoris::protobuf::categories::brake::BrakeCategory& brake_category() const;
  ::sensoris::protobuf::categories::brake::BrakeCategory* release_brake_category();
  ::sensoris::protobuf::categories::brake::BrakeCategory* mutable_brake_category();
  void set_allocated_brake_category(::sensoris::protobuf::categories::brake::BrakeCategory* brake_category);
  void unsafe_arena_set_allocated_brake_category(
      ::sensoris::protobuf::categories::brake::BrakeCategory* brake_category);
  ::sensoris::protobuf::categories::brake::BrakeCategory* unsafe_arena_release_brake_category();

  // .sensoris.protobuf.categories.powertrain.PowertrainCategory powertrain_category = 12;
  bool has_powertrain_category() const;
  void clear_powertrain_category();
  static const int kPowertrainCategoryFieldNumber = 12;
  private:
  const ::sensoris::protobuf::categories::powertrain::PowertrainCategory& _internal_powertrain_category() const;
  public:
  const ::sensoris::protobuf::categories::powertrain::PowertrainCategory& powertrain_category() const;
  ::sensoris::protobuf::categories::powertrain::PowertrainCategory* release_powertrain_category();
  ::sensoris::protobuf::categories::powertrain::PowertrainCategory* mutable_powertrain_category();
  void set_allocated_powertrain_category(::sensoris::protobuf::categories::powertrain::PowertrainCategory* powertrain_category);
  void unsafe_arena_set_allocated_powertrain_category(
      ::sensoris::protobuf::categories::powertrain::PowertrainCategory* powertrain_category);
  ::sensoris::protobuf::categories::powertrain::PowertrainCategory* unsafe_arena_release_powertrain_category();

  // .sensoris.protobuf.categories.map.MapCategory map_category = 13;
  bool has_map_category() const;
  void clear_map_category();
  static const int kMapCategoryFieldNumber = 13;
  private:
  const ::sensoris::protobuf::categories::map::MapCategory& _internal_map_category() const;
  public:
  const ::sensoris::protobuf::categories::map::MapCategory& map_category() const;
  ::sensoris::protobuf::categories::map::MapCategory* release_map_category();
  ::sensoris::protobuf::categories::map::MapCategory* mutable_map_category();
  void set_allocated_map_category(::sensoris::protobuf::categories::map::MapCategory* map_category);
  void unsafe_arena_set_allocated_map_category(
      ::sensoris::protobuf::categories::map::MapCategory* map_category);
  ::sensoris::protobuf::categories::map::MapCategory* unsafe_arena_release_map_category();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.EventGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::sensoris::protobuf::messages::data::EventGroup_Envelope* envelope_;
  ::sensoris::protobuf::categories::localization::LocalizationCategory* localization_category_;
  ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* object_detection_category_;
  ::sensoris::protobuf::categories::weather::WeatherCategory* weather_category_;
  ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* driving_behavior_category_;
  ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* intersection_attribution_category_;
  ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* road_attribution_category_;
  ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* traffic_regulation_category_;
  ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* traffic_events_category_;
  ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* traffic_maneuver_category_;
  ::sensoris::protobuf::categories::brake::BrakeCategory* brake_category_;
  ::sensoris::protobuf::categories::powertrain::PowertrainCategory* powertrain_category_;
  ::sensoris::protobuf::categories::map::MapCategory* map_category_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataMessage_AbsolutePaths_Path : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path) */ {
 public:
  DataMessage_AbsolutePaths_Path();
  virtual ~DataMessage_AbsolutePaths_Path();

  DataMessage_AbsolutePaths_Path(const DataMessage_AbsolutePaths_Path& from);

  inline DataMessage_AbsolutePaths_Path& operator=(const DataMessage_AbsolutePaths_Path& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataMessage_AbsolutePaths_Path(DataMessage_AbsolutePaths_Path&& from) noexcept
    : DataMessage_AbsolutePaths_Path() {
    *this = ::std::move(from);
  }

  inline DataMessage_AbsolutePaths_Path& operator=(DataMessage_AbsolutePaths_Path&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataMessage_AbsolutePaths_Path& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataMessage_AbsolutePaths_Path* internal_default_instance() {
    return reinterpret_cast<const DataMessage_AbsolutePaths_Path*>(
               &_DataMessage_AbsolutePaths_Path_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(DataMessage_AbsolutePaths_Path* other);
  void Swap(DataMessage_AbsolutePaths_Path* other);
  friend void swap(DataMessage_AbsolutePaths_Path& a, DataMessage_AbsolutePaths_Path& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataMessage_AbsolutePaths_Path* New() const final {
    return CreateMaybeMessage<DataMessage_AbsolutePaths_Path>(NULL);
  }

  DataMessage_AbsolutePaths_Path* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataMessage_AbsolutePaths_Path>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataMessage_AbsolutePaths_Path& from);
  void MergeFrom(const DataMessage_AbsolutePaths_Path& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataMessage_AbsolutePaths_Path* other);
  protected:
  explicit DataMessage_AbsolutePaths_Path(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 field_number = 1;
  int field_number_size() const;
  void clear_field_number();
  static const int kFieldNumberFieldNumber = 1;
  ::google::protobuf::int64 field_number(int index) const;
  void set_field_number(int index, ::google::protobuf::int64 value);
  void add_field_number(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      field_number() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_field_number();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > field_number_;
  mutable int _field_number_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataMessage_AbsolutePaths : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths) */ {
 public:
  DataMessage_AbsolutePaths();
  virtual ~DataMessage_AbsolutePaths();

  DataMessage_AbsolutePaths(const DataMessage_AbsolutePaths& from);

  inline DataMessage_AbsolutePaths& operator=(const DataMessage_AbsolutePaths& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataMessage_AbsolutePaths(DataMessage_AbsolutePaths&& from) noexcept
    : DataMessage_AbsolutePaths() {
    *this = ::std::move(from);
  }

  inline DataMessage_AbsolutePaths& operator=(DataMessage_AbsolutePaths&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataMessage_AbsolutePaths& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataMessage_AbsolutePaths* internal_default_instance() {
    return reinterpret_cast<const DataMessage_AbsolutePaths*>(
               &_DataMessage_AbsolutePaths_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(DataMessage_AbsolutePaths* other);
  void Swap(DataMessage_AbsolutePaths* other);
  friend void swap(DataMessage_AbsolutePaths& a, DataMessage_AbsolutePaths& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataMessage_AbsolutePaths* New() const final {
    return CreateMaybeMessage<DataMessage_AbsolutePaths>(NULL);
  }

  DataMessage_AbsolutePaths* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataMessage_AbsolutePaths>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataMessage_AbsolutePaths& from);
  void MergeFrom(const DataMessage_AbsolutePaths& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataMessage_AbsolutePaths* other);
  protected:
  explicit DataMessage_AbsolutePaths(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DataMessage_AbsolutePaths_Path Path;

  // accessors -------------------------------------------------------

  // repeated .sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path path = 1;
  int path_size() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path* mutable_path(int index);
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path >*
      mutable_path();
  const ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path& path(int index) const;
  ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path* add_path();
  const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path >&
      path() const;

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path > path_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataMessage_Paths : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.Paths) */ {
 public:
  DataMessage_Paths();
  virtual ~DataMessage_Paths();

  DataMessage_Paths(const DataMessage_Paths& from);

  inline DataMessage_Paths& operator=(const DataMessage_Paths& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataMessage_Paths(DataMessage_Paths&& from) noexcept
    : DataMessage_Paths() {
    *this = ::std::move(from);
  }

  inline DataMessage_Paths& operator=(DataMessage_Paths&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataMessage_Paths& default_instance();

  enum TypeCase {
    kAbsolutePaths = 1,
    TYPE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataMessage_Paths* internal_default_instance() {
    return reinterpret_cast<const DataMessage_Paths*>(
               &_DataMessage_Paths_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(DataMessage_Paths* other);
  void Swap(DataMessage_Paths* other);
  friend void swap(DataMessage_Paths& a, DataMessage_Paths& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataMessage_Paths* New() const final {
    return CreateMaybeMessage<DataMessage_Paths>(NULL);
  }

  DataMessage_Paths* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataMessage_Paths>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataMessage_Paths& from);
  void MergeFrom(const DataMessage_Paths& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataMessage_Paths* other);
  protected:
  explicit DataMessage_Paths(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .sensoris.protobuf.messages.data.DataMessage.AbsolutePaths absolute_paths = 1;
  bool has_absolute_paths() const;
  void clear_absolute_paths();
  static const int kAbsolutePathsFieldNumber = 1;
  private:
  const ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths& _internal_absolute_paths() const;
  public:
  const ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths& absolute_paths() const;
  ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* release_absolute_paths();
  ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* mutable_absolute_paths();
  void set_allocated_absolute_paths(::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* absolute_paths);
  void unsafe_arena_set_allocated_absolute_paths(
      ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* absolute_paths);
  ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* unsafe_arena_release_absolute_paths();

  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.Paths)
 private:
  void set_has_absolute_paths();

  inline bool has_type() const;
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union TypeUnion {
    TypeUnion() {}
    ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* absolute_paths_;
  } type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataMessage_Envelope_Ids : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids) */ {
 public:
  DataMessage_Envelope_Ids();
  virtual ~DataMessage_Envelope_Ids();

  DataMessage_Envelope_Ids(const DataMessage_Envelope_Ids& from);

  inline DataMessage_Envelope_Ids& operator=(const DataMessage_Envelope_Ids& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataMessage_Envelope_Ids(DataMessage_Envelope_Ids&& from) noexcept
    : DataMessage_Envelope_Ids() {
    *this = ::std::move(from);
  }

  inline DataMessage_Envelope_Ids& operator=(DataMessage_Envelope_Ids&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataMessage_Envelope_Ids& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataMessage_Envelope_Ids* internal_default_instance() {
    return reinterpret_cast<const DataMessage_Envelope_Ids*>(
               &_DataMessage_Envelope_Ids_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(DataMessage_Envelope_Ids* other);
  void Swap(DataMessage_Envelope_Ids* other);
  friend void swap(DataMessage_Envelope_Ids& a, DataMessage_Envelope_Ids& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataMessage_Envelope_Ids* New() const final {
    return CreateMaybeMessage<DataMessage_Envelope_Ids>(NULL);
  }

  DataMessage_Envelope_Ids* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataMessage_Envelope_Ids>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataMessage_Envelope_Ids& from);
  void MergeFrom(const DataMessage_Envelope_Ids& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataMessage_Envelope_Ids* other);
  protected:
  explicit DataMessage_Envelope_Ids(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.StringValue session_id = 1;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  private:
  const ::google::protobuf::StringValue& _internal_session_id() const;
  public:
  const ::google::protobuf::StringValue& session_id() const;
  ::google::protobuf::StringValue* release_session_id();
  ::google::protobuf::StringValue* mutable_session_id();
  void set_allocated_session_id(::google::protobuf::StringValue* session_id);
  void unsafe_arena_set_allocated_session_id(
      ::google::protobuf::StringValue* session_id);
  ::google::protobuf::StringValue* unsafe_arena_release_session_id();

  // .google.protobuf.Int64Value message_id = 2;
  bool has_message_id() const;
  void clear_message_id();
  static const int kMessageIdFieldNumber = 2;
  private:
  const ::google::protobuf::Int64Value& _internal_message_id() const;
  public:
  const ::google::protobuf::Int64Value& message_id() const;
  ::google::protobuf::Int64Value* release_message_id();
  ::google::protobuf::Int64Value* mutable_message_id();
  void set_allocated_message_id(::google::protobuf::Int64Value* message_id);
  void unsafe_arena_set_allocated_message_id(
      ::google::protobuf::Int64Value* message_id);
  ::google::protobuf::Int64Value* unsafe_arena_release_message_id();

  // .google.protobuf.BoolValue last_message_of_session = 3;
  bool has_last_message_of_session() const;
  void clear_last_message_of_session();
  static const int kLastMessageOfSessionFieldNumber = 3;
  private:
  const ::google::protobuf::BoolValue& _internal_last_message_of_session() const;
  public:
  const ::google::protobuf::BoolValue& last_message_of_session() const;
  ::google::protobuf::BoolValue* release_last_message_of_session();
  ::google::protobuf::BoolValue* mutable_last_message_of_session();
  void set_allocated_last_message_of_session(::google::protobuf::BoolValue* last_message_of_session);
  void unsafe_arena_set_allocated_last_message_of_session(
      ::google::protobuf::BoolValue* last_message_of_session);
  ::google::protobuf::BoolValue* unsafe_arena_release_last_message_of_session();

  // .google.protobuf.StringValue vehicle_fleet_id = 4;
  bool has_vehicle_fleet_id() const;
  void clear_vehicle_fleet_id();
  static const int kVehicleFleetIdFieldNumber = 4;
  private:
  const ::google::protobuf::StringValue& _internal_vehicle_fleet_id() const;
  public:
  const ::google::protobuf::StringValue& vehicle_fleet_id() const;
  ::google::protobuf::StringValue* release_vehicle_fleet_id();
  ::google::protobuf::StringValue* mutable_vehicle_fleet_id();
  void set_allocated_vehicle_fleet_id(::google::protobuf::StringValue* vehicle_fleet_id);
  void unsafe_arena_set_allocated_vehicle_fleet_id(
      ::google::protobuf::StringValue* vehicle_fleet_id);
  ::google::protobuf::StringValue* unsafe_arena_release_vehicle_fleet_id();

  // .google.protobuf.StringValue vehicle_id = 5;
  bool has_vehicle_id() const;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 5;
  private:
  const ::google::protobuf::StringValue& _internal_vehicle_id() const;
  public:
  const ::google::protobuf::StringValue& vehicle_id() const;
  ::google::protobuf::StringValue* release_vehicle_id();
  ::google::protobuf::StringValue* mutable_vehicle_id();
  void set_allocated_vehicle_id(::google::protobuf::StringValue* vehicle_id);
  void unsafe_arena_set_allocated_vehicle_id(
      ::google::protobuf::StringValue* vehicle_id);
  ::google::protobuf::StringValue* unsafe_arena_release_vehicle_id();

  // .google.protobuf.StringValue driver_id = 6;
  bool has_driver_id() const;
  void clear_driver_id();
  static const int kDriverIdFieldNumber = 6;
  private:
  const ::google::protobuf::StringValue& _internal_driver_id() const;
  public:
  const ::google::protobuf::StringValue& driver_id() const;
  ::google::protobuf::StringValue* release_driver_id();
  ::google::protobuf::StringValue* mutable_driver_id();
  void set_allocated_driver_id(::google::protobuf::StringValue* driver_id);
  void unsafe_arena_set_allocated_driver_id(
      ::google::protobuf::StringValue* driver_id);
  ::google::protobuf::StringValue* unsafe_arena_release_driver_id();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::StringValue* session_id_;
  ::google::protobuf::Int64Value* message_id_;
  ::google::protobuf::BoolValue* last_message_of_session_;
  ::google::protobuf::StringValue* vehicle_fleet_id_;
  ::google::protobuf::StringValue* vehicle_id_;
  ::google::protobuf::StringValue* driver_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataMessage_Envelope_FieldResolutionOverride : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride) */ {
 public:
  DataMessage_Envelope_FieldResolutionOverride();
  virtual ~DataMessage_Envelope_FieldResolutionOverride();

  DataMessage_Envelope_FieldResolutionOverride(const DataMessage_Envelope_FieldResolutionOverride& from);

  inline DataMessage_Envelope_FieldResolutionOverride& operator=(const DataMessage_Envelope_FieldResolutionOverride& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataMessage_Envelope_FieldResolutionOverride(DataMessage_Envelope_FieldResolutionOverride&& from) noexcept
    : DataMessage_Envelope_FieldResolutionOverride() {
    *this = ::std::move(from);
  }

  inline DataMessage_Envelope_FieldResolutionOverride& operator=(DataMessage_Envelope_FieldResolutionOverride&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataMessage_Envelope_FieldResolutionOverride& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataMessage_Envelope_FieldResolutionOverride* internal_default_instance() {
    return reinterpret_cast<const DataMessage_Envelope_FieldResolutionOverride*>(
               &_DataMessage_Envelope_FieldResolutionOverride_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(DataMessage_Envelope_FieldResolutionOverride* other);
  void Swap(DataMessage_Envelope_FieldResolutionOverride* other);
  friend void swap(DataMessage_Envelope_FieldResolutionOverride& a, DataMessage_Envelope_FieldResolutionOverride& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataMessage_Envelope_FieldResolutionOverride* New() const final {
    return CreateMaybeMessage<DataMessage_Envelope_FieldResolutionOverride>(NULL);
  }

  DataMessage_Envelope_FieldResolutionOverride* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataMessage_Envelope_FieldResolutionOverride>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataMessage_Envelope_FieldResolutionOverride& from);
  void MergeFrom(const DataMessage_Envelope_FieldResolutionOverride& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataMessage_Envelope_FieldResolutionOverride* other);
  protected:
  explicit DataMessage_Envelope_FieldResolutionOverride(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .sensoris.protobuf.messages.data.DataMessage.Paths paths = 1;
  bool has_paths() const;
  void clear_paths();
  static const int kPathsFieldNumber = 1;
  private:
  const ::sensoris::protobuf::messages::data::DataMessage_Paths& _internal_paths() const;
  public:
  const ::sensoris::protobuf::messages::data::DataMessage_Paths& paths() const;
  ::sensoris::protobuf::messages::data::DataMessage_Paths* release_paths();
  ::sensoris::protobuf::messages::data::DataMessage_Paths* mutable_paths();
  void set_allocated_paths(::sensoris::protobuf::messages::data::DataMessage_Paths* paths);
  void unsafe_arena_set_allocated_paths(
      ::sensoris::protobuf::messages::data::DataMessage_Paths* paths);
  ::sensoris::protobuf::messages::data::DataMessage_Paths* unsafe_arena_release_paths();

  // .google.protobuf.Int64Value exponent = 2;
  bool has_exponent() const;
  void clear_exponent();
  static const int kExponentFieldNumber = 2;
  private:
  const ::google::protobuf::Int64Value& _internal_exponent() const;
  public:
  const ::google::protobuf::Int64Value& exponent() const;
  ::google::protobuf::Int64Value* release_exponent();
  ::google::protobuf::Int64Value* mutable_exponent();
  void set_allocated_exponent(::google::protobuf::Int64Value* exponent);
  void unsafe_arena_set_allocated_exponent(
      ::google::protobuf::Int64Value* exponent);
  ::google::protobuf::Int64Value* unsafe_arena_release_exponent();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::sensoris::protobuf::messages::data::DataMessage_Paths* paths_;
  ::google::protobuf::Int64Value* exponent_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataMessage_Envelope_VehicleDimensions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions) */ {
 public:
  DataMessage_Envelope_VehicleDimensions();
  virtual ~DataMessage_Envelope_VehicleDimensions();

  DataMessage_Envelope_VehicleDimensions(const DataMessage_Envelope_VehicleDimensions& from);

  inline DataMessage_Envelope_VehicleDimensions& operator=(const DataMessage_Envelope_VehicleDimensions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataMessage_Envelope_VehicleDimensions(DataMessage_Envelope_VehicleDimensions&& from) noexcept
    : DataMessage_Envelope_VehicleDimensions() {
    *this = ::std::move(from);
  }

  inline DataMessage_Envelope_VehicleDimensions& operator=(DataMessage_Envelope_VehicleDimensions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataMessage_Envelope_VehicleDimensions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataMessage_Envelope_VehicleDimensions* internal_default_instance() {
    return reinterpret_cast<const DataMessage_Envelope_VehicleDimensions*>(
               &_DataMessage_Envelope_VehicleDimensions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(DataMessage_Envelope_VehicleDimensions* other);
  void Swap(DataMessage_Envelope_VehicleDimensions* other);
  friend void swap(DataMessage_Envelope_VehicleDimensions& a, DataMessage_Envelope_VehicleDimensions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataMessage_Envelope_VehicleDimensions* New() const final {
    return CreateMaybeMessage<DataMessage_Envelope_VehicleDimensions>(NULL);
  }

  DataMessage_Envelope_VehicleDimensions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataMessage_Envelope_VehicleDimensions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataMessage_Envelope_VehicleDimensions& from);
  void MergeFrom(const DataMessage_Envelope_VehicleDimensions& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataMessage_Envelope_VehicleDimensions* other);
  protected:
  explicit DataMessage_Envelope_VehicleDimensions(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Int64Value distance_to_front = 1 [(.sensoris.protobuf.types.base.exponent) = 0];
  bool has_distance_to_front() const;
  void clear_distance_to_front();
  static const int kDistanceToFrontFieldNumber = 1;
  private:
  const ::google::protobuf::Int64Value& _internal_distance_to_front() const;
  public:
  const ::google::protobuf::Int64Value& distance_to_front() const;
  ::google::protobuf::Int64Value* release_distance_to_front();
  ::google::protobuf::Int64Value* mutable_distance_to_front();
  void set_allocated_distance_to_front(::google::protobuf::Int64Value* distance_to_front);
  void unsafe_arena_set_allocated_distance_to_front(
      ::google::protobuf::Int64Value* distance_to_front);
  ::google::protobuf::Int64Value* unsafe_arena_release_distance_to_front();

  // .google.protobuf.Int64Value distance_to_back = 2 [(.sensoris.protobuf.types.base.exponent) = 0];
  bool has_distance_to_back() const;
  void clear_distance_to_back();
  static const int kDistanceToBackFieldNumber = 2;
  private:
  const ::google::protobuf::Int64Value& _internal_distance_to_back() const;
  public:
  const ::google::protobuf::Int64Value& distance_to_back() const;
  ::google::protobuf::Int64Value* release_distance_to_back();
  ::google::protobuf::Int64Value* mutable_distance_to_back();
  void set_allocated_distance_to_back(::google::protobuf::Int64Value* distance_to_back);
  void unsafe_arena_set_allocated_distance_to_back(
      ::google::protobuf::Int64Value* distance_to_back);
  ::google::protobuf::Int64Value* unsafe_arena_release_distance_to_back();

  // .google.protobuf.Int64Value distance_to_left = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
  bool has_distance_to_left() const;
  void clear_distance_to_left();
  static const int kDistanceToLeftFieldNumber = 3;
  private:
  const ::google::protobuf::Int64Value& _internal_distance_to_left() const;
  public:
  const ::google::protobuf::Int64Value& distance_to_left() const;
  ::google::protobuf::Int64Value* release_distance_to_left();
  ::google::protobuf::Int64Value* mutable_distance_to_left();
  void set_allocated_distance_to_left(::google::protobuf::Int64Value* distance_to_left);
  void unsafe_arena_set_allocated_distance_to_left(
      ::google::protobuf::Int64Value* distance_to_left);
  ::google::protobuf::Int64Value* unsafe_arena_release_distance_to_left();

  // .google.protobuf.Int64Value distance_to_right = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
  bool has_distance_to_right() const;
  void clear_distance_to_right();
  static const int kDistanceToRightFieldNumber = 4;
  private:
  const ::google::protobuf::Int64Value& _internal_distance_to_right() const;
  public:
  const ::google::protobuf::Int64Value& distance_to_right() const;
  ::google::protobuf::Int64Value* release_distance_to_right();
  ::google::protobuf::Int64Value* mutable_distance_to_right();
  void set_allocated_distance_to_right(::google::protobuf::Int64Value* distance_to_right);
  void unsafe_arena_set_allocated_distance_to_right(
      ::google::protobuf::Int64Value* distance_to_right);
  ::google::protobuf::Int64Value* unsafe_arena_release_distance_to_right();

  // .google.protobuf.Int64Value distance_to_top = 5 [(.sensoris.protobuf.types.base.exponent) = 0];
  bool has_distance_to_top() const;
  void clear_distance_to_top();
  static const int kDistanceToTopFieldNumber = 5;
  private:
  const ::google::protobuf::Int64Value& _internal_distance_to_top() const;
  public:
  const ::google::protobuf::Int64Value& distance_to_top() const;
  ::google::protobuf::Int64Value* release_distance_to_top();
  ::google::protobuf::Int64Value* mutable_distance_to_top();
  void set_allocated_distance_to_top(::google::protobuf::Int64Value* distance_to_top);
  void unsafe_arena_set_allocated_distance_to_top(
      ::google::protobuf::Int64Value* distance_to_top);
  ::google::protobuf::Int64Value* unsafe_arena_release_distance_to_top();

  // .google.protobuf.Int64Value distance_to_ground = 6 [(.sensoris.protobuf.types.base.exponent) = 0];
  bool has_distance_to_ground() const;
  void clear_distance_to_ground();
  static const int kDistanceToGroundFieldNumber = 6;
  private:
  const ::google::protobuf::Int64Value& _internal_distance_to_ground() const;
  public:
  const ::google::protobuf::Int64Value& distance_to_ground() const;
  ::google::protobuf::Int64Value* release_distance_to_ground();
  ::google::protobuf::Int64Value* mutable_distance_to_ground();
  void set_allocated_distance_to_ground(::google::protobuf::Int64Value* distance_to_ground);
  void unsafe_arena_set_allocated_distance_to_ground(
      ::google::protobuf::Int64Value* distance_to_ground);
  ::google::protobuf::Int64Value* unsafe_arena_release_distance_to_ground();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::Int64Value* distance_to_front_;
  ::google::protobuf::Int64Value* distance_to_back_;
  ::google::protobuf::Int64Value* distance_to_left_;
  ::google::protobuf::Int64Value* distance_to_right_;
  ::google::protobuf::Int64Value* distance_to_top_;
  ::google::protobuf::Int64Value* distance_to_ground_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataMessage_Envelope_MapIdentification_MapVersion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion) */ {
 public:
  DataMessage_Envelope_MapIdentification_MapVersion();
  virtual ~DataMessage_Envelope_MapIdentification_MapVersion();

  DataMessage_Envelope_MapIdentification_MapVersion(const DataMessage_Envelope_MapIdentification_MapVersion& from);

  inline DataMessage_Envelope_MapIdentification_MapVersion& operator=(const DataMessage_Envelope_MapIdentification_MapVersion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataMessage_Envelope_MapIdentification_MapVersion(DataMessage_Envelope_MapIdentification_MapVersion&& from) noexcept
    : DataMessage_Envelope_MapIdentification_MapVersion() {
    *this = ::std::move(from);
  }

  inline DataMessage_Envelope_MapIdentification_MapVersion& operator=(DataMessage_Envelope_MapIdentification_MapVersion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataMessage_Envelope_MapIdentification_MapVersion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataMessage_Envelope_MapIdentification_MapVersion* internal_default_instance() {
    return reinterpret_cast<const DataMessage_Envelope_MapIdentification_MapVersion*>(
               &_DataMessage_Envelope_MapIdentification_MapVersion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(DataMessage_Envelope_MapIdentification_MapVersion* other);
  void Swap(DataMessage_Envelope_MapIdentification_MapVersion* other);
  friend void swap(DataMessage_Envelope_MapIdentification_MapVersion& a, DataMessage_Envelope_MapIdentification_MapVersion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataMessage_Envelope_MapIdentification_MapVersion* New() const final {
    return CreateMaybeMessage<DataMessage_Envelope_MapIdentification_MapVersion>(NULL);
  }

  DataMessage_Envelope_MapIdentification_MapVersion* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataMessage_Envelope_MapIdentification_MapVersion>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataMessage_Envelope_MapIdentification_MapVersion& from);
  void MergeFrom(const DataMessage_Envelope_MapIdentification_MapVersion& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataMessage_Envelope_MapIdentification_MapVersion* other);
  protected:
  explicit DataMessage_Envelope_MapIdentification_MapVersion(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.StringValue source = 1;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  private:
  const ::google::protobuf::StringValue& _internal_source() const;
  public:
  const ::google::protobuf::StringValue& source() const;
  ::google::protobuf::StringValue* release_source();
  ::google::protobuf::StringValue* mutable_source();
  void set_allocated_source(::google::protobuf::StringValue* source);
  void unsafe_arena_set_allocated_source(
      ::google::protobuf::StringValue* source);
  ::google::protobuf::StringValue* unsafe_arena_release_source();

  // .sensoris.protobuf.types.base.Version version = 2;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  private:
  const ::sensoris::protobuf::types::base::Version& _internal_version() const;
  public:
  const ::sensoris::protobuf::types::base::Version& version() const;
  ::sensoris::protobuf::types::base::Version* release_version();
  ::sensoris::protobuf::types::base::Version* mutable_version();
  void set_allocated_version(::sensoris::protobuf::types::base::Version* version);
  void unsafe_arena_set_allocated_version(
      ::sensoris::protobuf::types::base::Version* version);
  ::sensoris::protobuf::types::base::Version* unsafe_arena_release_version();

  // .sensoris.protobuf.types.base.Timestamp extraction_timestamp = 3;
  bool has_extraction_timestamp() const;
  void clear_extraction_timestamp();
  static const int kExtractionTimestampFieldNumber = 3;
  private:
  const ::sensoris::protobuf::types::base::Timestamp& _internal_extraction_timestamp() const;
  public:
  const ::sensoris::protobuf::types::base::Timestamp& extraction_timestamp() const;
  ::sensoris::protobuf::types::base::Timestamp* release_extraction_timestamp();
  ::sensoris::protobuf::types::base::Timestamp* mutable_extraction_timestamp();
  void set_allocated_extraction_timestamp(::sensoris::protobuf::types::base::Timestamp* extraction_timestamp);
  void unsafe_arena_set_allocated_extraction_timestamp(
      ::sensoris::protobuf::types::base::Timestamp* extraction_timestamp);
  ::sensoris::protobuf::types::base::Timestamp* unsafe_arena_release_extraction_timestamp();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::StringValue* source_;
  ::sensoris::protobuf::types::base::Version* version_;
  ::sensoris::protobuf::types::base::Timestamp* extraction_timestamp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataMessage_Envelope_MapIdentification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification) */ {
 public:
  DataMessage_Envelope_MapIdentification();
  virtual ~DataMessage_Envelope_MapIdentification();

  DataMessage_Envelope_MapIdentification(const DataMessage_Envelope_MapIdentification& from);

  inline DataMessage_Envelope_MapIdentification& operator=(const DataMessage_Envelope_MapIdentification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataMessage_Envelope_MapIdentification(DataMessage_Envelope_MapIdentification&& from) noexcept
    : DataMessage_Envelope_MapIdentification() {
    *this = ::std::move(from);
  }

  inline DataMessage_Envelope_MapIdentification& operator=(DataMessage_Envelope_MapIdentification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataMessage_Envelope_MapIdentification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataMessage_Envelope_MapIdentification* internal_default_instance() {
    return reinterpret_cast<const DataMessage_Envelope_MapIdentification*>(
               &_DataMessage_Envelope_MapIdentification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void UnsafeArenaSwap(DataMessage_Envelope_MapIdentification* other);
  void Swap(DataMessage_Envelope_MapIdentification* other);
  friend void swap(DataMessage_Envelope_MapIdentification& a, DataMessage_Envelope_MapIdentification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataMessage_Envelope_MapIdentification* New() const final {
    return CreateMaybeMessage<DataMessage_Envelope_MapIdentification>(NULL);
  }

  DataMessage_Envelope_MapIdentification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataMessage_Envelope_MapIdentification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataMessage_Envelope_MapIdentification& from);
  void MergeFrom(const DataMessage_Envelope_MapIdentification& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataMessage_Envelope_MapIdentification* other);
  protected:
  explicit DataMessage_Envelope_MapIdentification(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DataMessage_Envelope_MapIdentification_MapVersion MapVersion;

  typedef DataMessage_Envelope_MapIdentification_Format Format;
  static const Format UNKNOWN_FORMAT =
    DataMessage_Envelope_MapIdentification_Format_UNKNOWN_FORMAT;
  static const Format OTHER =
    DataMessage_Envelope_MapIdentification_Format_OTHER;
  static const Format NDS =
    DataMessage_Envelope_MapIdentification_Format_NDS;
  static inline bool Format_IsValid(int value) {
    return DataMessage_Envelope_MapIdentification_Format_IsValid(value);
  }
  static const Format Format_MIN =
    DataMessage_Envelope_MapIdentification_Format_Format_MIN;
  static const Format Format_MAX =
    DataMessage_Envelope_MapIdentification_Format_Format_MAX;
  static const int Format_ARRAYSIZE =
    DataMessage_Envelope_MapIdentification_Format_Format_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Format_descriptor() {
    return DataMessage_Envelope_MapIdentification_Format_descriptor();
  }
  static inline const ::std::string& Format_Name(Format value) {
    return DataMessage_Envelope_MapIdentification_Format_Name(value);
  }
  static inline bool Format_Parse(const ::std::string& name,
      Format* value) {
    return DataMessage_Envelope_MapIdentification_Format_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion provider_version = 1;
  bool has_provider_version() const;
  void clear_provider_version();
  static const int kProviderVersionFieldNumber = 1;
  private:
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion& _internal_provider_version() const;
  public:
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion& provider_version() const;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* release_provider_version();
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* mutable_provider_version();
  void set_allocated_provider_version(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* provider_version);
  void unsafe_arena_set_allocated_provider_version(
      ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* provider_version);
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* unsafe_arena_release_provider_version();

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion compiler_version = 2;
  bool has_compiler_version() const;
  void clear_compiler_version();
  static const int kCompilerVersionFieldNumber = 2;
  private:
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion& _internal_compiler_version() const;
  public:
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion& compiler_version() const;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* release_compiler_version();
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* mutable_compiler_version();
  void set_allocated_compiler_version(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* compiler_version);
  void unsafe_arena_set_allocated_compiler_version(
      ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* compiler_version);
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* unsafe_arena_release_compiler_version();

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.Format format = 3;
  void clear_format();
  static const int kFormatFieldNumber = 3;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format format() const;
  void set_format(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format value);

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* provider_version_;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* compiler_version_;
  int format_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataMessage_Envelope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.Envelope) */ {
 public:
  DataMessage_Envelope();
  virtual ~DataMessage_Envelope();

  DataMessage_Envelope(const DataMessage_Envelope& from);

  inline DataMessage_Envelope& operator=(const DataMessage_Envelope& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataMessage_Envelope(DataMessage_Envelope&& from) noexcept
    : DataMessage_Envelope() {
    *this = ::std::move(from);
  }

  inline DataMessage_Envelope& operator=(DataMessage_Envelope&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataMessage_Envelope& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataMessage_Envelope* internal_default_instance() {
    return reinterpret_cast<const DataMessage_Envelope*>(
               &_DataMessage_Envelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void UnsafeArenaSwap(DataMessage_Envelope* other);
  void Swap(DataMessage_Envelope* other);
  friend void swap(DataMessage_Envelope& a, DataMessage_Envelope& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataMessage_Envelope* New() const final {
    return CreateMaybeMessage<DataMessage_Envelope>(NULL);
  }

  DataMessage_Envelope* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataMessage_Envelope>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataMessage_Envelope& from);
  void MergeFrom(const DataMessage_Envelope& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataMessage_Envelope* other);
  protected:
  explicit DataMessage_Envelope(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DataMessage_Envelope_Ids Ids;
  typedef DataMessage_Envelope_FieldResolutionOverride FieldResolutionOverride;
  typedef DataMessage_Envelope_VehicleDimensions VehicleDimensions;
  typedef DataMessage_Envelope_MapIdentification MapIdentification;

  // accessors -------------------------------------------------------

  // repeated .sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride field_resolution_override = 3;
  int field_resolution_override_size() const;
  void clear_field_resolution_override();
  static const int kFieldResolutionOverrideFieldNumber = 3;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride* mutable_field_resolution_override(int index);
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride >*
      mutable_field_resolution_override();
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride& field_resolution_override(int index) const;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride* add_field_resolution_override();
  const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride >&
      field_resolution_override() const;

  // repeated .google.protobuf.Any extension = 15;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 15;
  ::google::protobuf::Any* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_extension();
  const ::google::protobuf::Any& extension(int index) const;
  ::google::protobuf::Any* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      extension() const;

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.Ids ids = 1;
  bool has_ids() const;
  void clear_ids();
  static const int kIdsFieldNumber = 1;
  private:
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids& _internal_ids() const;
  public:
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids& ids() const;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* release_ids();
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* mutable_ids();
  void set_allocated_ids(::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* ids);
  void unsafe_arena_set_allocated_ids(
      ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* ids);
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* unsafe_arena_release_ids();

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions vehicle_dimensions = 4;
  bool has_vehicle_dimensions() const;
  void clear_vehicle_dimensions();
  static const int kVehicleDimensionsFieldNumber = 4;
  private:
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions& _internal_vehicle_dimensions() const;
  public:
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions& vehicle_dimensions() const;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* release_vehicle_dimensions();
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* mutable_vehicle_dimensions();
  void set_allocated_vehicle_dimensions(::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* vehicle_dimensions);
  void unsafe_arena_set_allocated_vehicle_dimensions(
      ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* vehicle_dimensions);
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* unsafe_arena_release_vehicle_dimensions();

  // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification map_identification = 5;
  bool has_map_identification() const;
  void clear_map_identification();
  static const int kMapIdentificationFieldNumber = 5;
  private:
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification& _internal_map_identification() const;
  public:
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification& map_identification() const;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* release_map_identification();
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* mutable_map_identification();
  void set_allocated_map_identification(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* map_identification);
  void unsafe_arena_set_allocated_map_identification(
      ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* map_identification);
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* unsafe_arena_release_map_identification();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.Envelope)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride > field_resolution_override_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > extension_;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* ids_;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* vehicle_dimensions_;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* map_identification_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataMessage_EventRelation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.EventRelation) */ {
 public:
  DataMessage_EventRelation();
  virtual ~DataMessage_EventRelation();

  DataMessage_EventRelation(const DataMessage_EventRelation& from);

  inline DataMessage_EventRelation& operator=(const DataMessage_EventRelation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataMessage_EventRelation(DataMessage_EventRelation&& from) noexcept
    : DataMessage_EventRelation() {
    *this = ::std::move(from);
  }

  inline DataMessage_EventRelation& operator=(DataMessage_EventRelation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataMessage_EventRelation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataMessage_EventRelation* internal_default_instance() {
    return reinterpret_cast<const DataMessage_EventRelation*>(
               &_DataMessage_EventRelation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void UnsafeArenaSwap(DataMessage_EventRelation* other);
  void Swap(DataMessage_EventRelation* other);
  friend void swap(DataMessage_EventRelation& a, DataMessage_EventRelation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataMessage_EventRelation* New() const final {
    return CreateMaybeMessage<DataMessage_EventRelation>(NULL);
  }

  DataMessage_EventRelation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataMessage_EventRelation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataMessage_EventRelation& from);
  void MergeFrom(const DataMessage_EventRelation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataMessage_EventRelation* other);
  protected:
  explicit DataMessage_EventRelation(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DataMessage_EventRelation_Type Type;
  static const Type UNKNOWN_TYPE =
    DataMessage_EventRelation_Type_UNKNOWN_TYPE;
  static const Type EQUAL =
    DataMessage_EventRelation_Type_EQUAL;
  static const Type GROUP =
    DataMessage_EventRelation_Type_GROUP;
  static const Type CONTAIN =
    DataMessage_EventRelation_Type_CONTAIN;
  static const Type IMPACT =
    DataMessage_EventRelation_Type_IMPACT;
  static const Type START_AT =
    DataMessage_EventRelation_Type_START_AT;
  static const Type END_AT =
    DataMessage_EventRelation_Type_END_AT;
  static const Type LEFT_OF =
    DataMessage_EventRelation_Type_LEFT_OF;
  static const Type RIGHT_OF =
    DataMessage_EventRelation_Type_RIGHT_OF;
  static const Type TRIGGERED_BY =
    DataMessage_EventRelation_Type_TRIGGERED_BY;
  static const Type DERIVED_FROM =
    DataMessage_EventRelation_Type_DERIVED_FROM;
  static const Type MAP_REFERENCE =
    DataMessage_EventRelation_Type_MAP_REFERENCE;
  static inline bool Type_IsValid(int value) {
    return DataMessage_EventRelation_Type_IsValid(value);
  }
  static const Type Type_MIN =
    DataMessage_EventRelation_Type_Type_MIN;
  static const Type Type_MAX =
    DataMessage_EventRelation_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    DataMessage_EventRelation_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return DataMessage_EventRelation_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return DataMessage_EventRelation_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return DataMessage_EventRelation_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.protobuf.Int64Value from_id = 1;
  int from_id_size() const;
  void clear_from_id();
  static const int kFromIdFieldNumber = 1;
  ::google::protobuf::Int64Value* mutable_from_id(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value >*
      mutable_from_id();
  const ::google::protobuf::Int64Value& from_id(int index) const;
  ::google::protobuf::Int64Value* add_from_id();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value >&
      from_id() const;

  // repeated .google.protobuf.Int64Value to_id = 3;
  int to_id_size() const;
  void clear_to_id();
  static const int kToIdFieldNumber = 3;
  ::google::protobuf::Int64Value* mutable_to_id(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value >*
      mutable_to_id();
  const ::google::protobuf::Int64Value& to_id(int index) const;
  ::google::protobuf::Int64Value* add_to_id();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value >&
      to_id() const;

  // repeated .google.protobuf.Any extension = 15;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 15;
  ::google::protobuf::Any* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_extension();
  const ::google::protobuf::Any& extension(int index) const;
  ::google::protobuf::Any* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      extension() const;

  // .sensoris.protobuf.messages.data.DataMessage.EventRelation.Type type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type type() const;
  void set_type(::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type value);

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.EventRelation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value > from_id_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value > to_id_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > extension_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataMessage_EventSource_EventEnvelopeIds : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds) */ {
 public:
  DataMessage_EventSource_EventEnvelopeIds();
  virtual ~DataMessage_EventSource_EventEnvelopeIds();

  DataMessage_EventSource_EventEnvelopeIds(const DataMessage_EventSource_EventEnvelopeIds& from);

  inline DataMessage_EventSource_EventEnvelopeIds& operator=(const DataMessage_EventSource_EventEnvelopeIds& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataMessage_EventSource_EventEnvelopeIds(DataMessage_EventSource_EventEnvelopeIds&& from) noexcept
    : DataMessage_EventSource_EventEnvelopeIds() {
    *this = ::std::move(from);
  }

  inline DataMessage_EventSource_EventEnvelopeIds& operator=(DataMessage_EventSource_EventEnvelopeIds&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataMessage_EventSource_EventEnvelopeIds& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataMessage_EventSource_EventEnvelopeIds* internal_default_instance() {
    return reinterpret_cast<const DataMessage_EventSource_EventEnvelopeIds*>(
               &_DataMessage_EventSource_EventEnvelopeIds_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void UnsafeArenaSwap(DataMessage_EventSource_EventEnvelopeIds* other);
  void Swap(DataMessage_EventSource_EventEnvelopeIds* other);
  friend void swap(DataMessage_EventSource_EventEnvelopeIds& a, DataMessage_EventSource_EventEnvelopeIds& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataMessage_EventSource_EventEnvelopeIds* New() const final {
    return CreateMaybeMessage<DataMessage_EventSource_EventEnvelopeIds>(NULL);
  }

  DataMessage_EventSource_EventEnvelopeIds* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataMessage_EventSource_EventEnvelopeIds>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataMessage_EventSource_EventEnvelopeIds& from);
  void MergeFrom(const DataMessage_EventSource_EventEnvelopeIds& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataMessage_EventSource_EventEnvelopeIds* other);
  protected:
  explicit DataMessage_EventSource_EventEnvelopeIds(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.protobuf.Int64Value id = 2;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::Int64Value* mutable_id(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value >*
      mutable_id();
  const ::google::protobuf::Int64Value& id(int index) const;
  ::google::protobuf::Int64Value* add_id();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value >&
      id() const;

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value > id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataMessage_EventSource : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.EventSource) */ {
 public:
  DataMessage_EventSource();
  virtual ~DataMessage_EventSource();

  DataMessage_EventSource(const DataMessage_EventSource& from);

  inline DataMessage_EventSource& operator=(const DataMessage_EventSource& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataMessage_EventSource(DataMessage_EventSource&& from) noexcept
    : DataMessage_EventSource() {
    *this = ::std::move(from);
  }

  inline DataMessage_EventSource& operator=(DataMessage_EventSource&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataMessage_EventSource& default_instance();

  enum EventReferenceCase {
    kIds = 2,
    kPaths = 3,
    EVENT_REFERENCE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataMessage_EventSource* internal_default_instance() {
    return reinterpret_cast<const DataMessage_EventSource*>(
               &_DataMessage_EventSource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void UnsafeArenaSwap(DataMessage_EventSource* other);
  void Swap(DataMessage_EventSource* other);
  friend void swap(DataMessage_EventSource& a, DataMessage_EventSource& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataMessage_EventSource* New() const final {
    return CreateMaybeMessage<DataMessage_EventSource>(NULL);
  }

  DataMessage_EventSource* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataMessage_EventSource>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataMessage_EventSource& from);
  void MergeFrom(const DataMessage_EventSource& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataMessage_EventSource* other);
  protected:
  explicit DataMessage_EventSource(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DataMessage_EventSource_EventEnvelopeIds EventEnvelopeIds;

  // accessors -------------------------------------------------------

  // repeated .google.protobuf.Any extension = 15;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 15;
  ::google::protobuf::Any* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_extension();
  const ::google::protobuf::Any& extension(int index) const;
  ::google::protobuf::Any* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      extension() const;

  // .sensoris.protobuf.types.source.Source source = 1;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  private:
  const ::sensoris::protobuf::types::source::Source& _internal_source() const;
  public:
  const ::sensoris::protobuf::types::source::Source& source() const;
  ::sensoris::protobuf::types::source::Source* release_source();
  ::sensoris::protobuf::types::source::Source* mutable_source();
  void set_allocated_source(::sensoris::protobuf::types::source::Source* source);
  void unsafe_arena_set_allocated_source(
      ::sensoris::protobuf::types::source::Source* source);
  ::sensoris::protobuf::types::source::Source* unsafe_arena_release_source();

  // .sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds ids = 2;
  bool has_ids() const;
  void clear_ids();
  static const int kIdsFieldNumber = 2;
  private:
  const ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds& _internal_ids() const;
  public:
  const ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds& ids() const;
  ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* release_ids();
  ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* mutable_ids();
  void set_allocated_ids(::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* ids);
  void unsafe_arena_set_allocated_ids(
      ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* ids);
  ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* unsafe_arena_release_ids();

  // .sensoris.protobuf.messages.data.DataMessage.Paths paths = 3;
  bool has_paths() const;
  void clear_paths();
  static const int kPathsFieldNumber = 3;
  private:
  const ::sensoris::protobuf::messages::data::DataMessage_Paths& _internal_paths() const;
  public:
  const ::sensoris::protobuf::messages::data::DataMessage_Paths& paths() const;
  ::sensoris::protobuf::messages::data::DataMessage_Paths* release_paths();
  ::sensoris::protobuf::messages::data::DataMessage_Paths* mutable_paths();
  void set_allocated_paths(::sensoris::protobuf::messages::data::DataMessage_Paths* paths);
  void unsafe_arena_set_allocated_paths(
      ::sensoris::protobuf::messages::data::DataMessage_Paths* paths);
  ::sensoris::protobuf::messages::data::DataMessage_Paths* unsafe_arena_release_paths();

  void clear_event_reference();
  EventReferenceCase event_reference_case() const;
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.EventSource)
 private:
  void set_has_ids();
  void set_has_paths();

  inline bool has_event_reference() const;
  inline void clear_has_event_reference();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > extension_;
  ::sensoris::protobuf::types::source::Source* source_;
  union EventReferenceUnion {
    EventReferenceUnion() {}
    ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* ids_;
    ::sensoris::protobuf::messages::data::DataMessage_Paths* paths_;
  } event_reference_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage) */ {
 public:
  DataMessage();
  virtual ~DataMessage();

  DataMessage(const DataMessage& from);

  inline DataMessage& operator=(const DataMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataMessage(DataMessage&& from) noexcept
    : DataMessage() {
    *this = ::std::move(from);
  }

  inline DataMessage& operator=(DataMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataMessage* internal_default_instance() {
    return reinterpret_cast<const DataMessage*>(
               &_DataMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void UnsafeArenaSwap(DataMessage* other);
  void Swap(DataMessage* other);
  friend void swap(DataMessage& a, DataMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataMessage* New() const final {
    return CreateMaybeMessage<DataMessage>(NULL);
  }

  DataMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataMessage& from);
  void MergeFrom(const DataMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataMessage* other);
  protected:
  explicit DataMessage(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DataMessage_AbsolutePaths AbsolutePaths;
  typedef DataMessage_Paths Paths;
  typedef DataMessage_Envelope Envelope;
  typedef DataMessage_EventRelation EventRelation;
  typedef DataMessage_EventSource EventSource;

  // accessors -------------------------------------------------------

  // repeated .sensoris.protobuf.messages.data.EventGroup event_group = 2;
  int event_group_size() const;
  void clear_event_group();
  static const int kEventGroupFieldNumber = 2;
  ::sensoris::protobuf::messages::data::EventGroup* mutable_event_group(int index);
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::EventGroup >*
      mutable_event_group();
  const ::sensoris::protobuf::messages::data::EventGroup& event_group(int index) const;
  ::sensoris::protobuf::messages::data::EventGroup* add_event_group();
  const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::EventGroup >&
      event_group() const;

  // repeated .sensoris.protobuf.messages.data.DataMessage.EventRelation event_relation = 3;
  int event_relation_size() const;
  void clear_event_relation();
  static const int kEventRelationFieldNumber = 3;
  ::sensoris::protobuf::messages::data::DataMessage_EventRelation* mutable_event_relation(int index);
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_EventRelation >*
      mutable_event_relation();
  const ::sensoris::protobuf::messages::data::DataMessage_EventRelation& event_relation(int index) const;
  ::sensoris::protobuf::messages::data::DataMessage_EventRelation* add_event_relation();
  const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_EventRelation >&
      event_relation() const;

  // repeated .sensoris.protobuf.messages.data.DataMessage.EventSource event_source = 4;
  int event_source_size() const;
  void clear_event_source();
  static const int kEventSourceFieldNumber = 4;
  ::sensoris::protobuf::messages::data::DataMessage_EventSource* mutable_event_source(int index);
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_EventSource >*
      mutable_event_source();
  const ::sensoris::protobuf::messages::data::DataMessage_EventSource& event_source(int index) const;
  ::sensoris::protobuf::messages::data::DataMessage_EventSource* add_event_source();
  const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_EventSource >&
      event_source() const;

  // .sensoris.protobuf.messages.data.DataMessage.Envelope envelope = 1;
  bool has_envelope() const;
  void clear_envelope();
  static const int kEnvelopeFieldNumber = 1;
  private:
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope& _internal_envelope() const;
  public:
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope& envelope() const;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope* release_envelope();
  ::sensoris::protobuf::messages::data::DataMessage_Envelope* mutable_envelope();
  void set_allocated_envelope(::sensoris::protobuf::messages::data::DataMessage_Envelope* envelope);
  void unsafe_arena_set_allocated_envelope(
      ::sensoris::protobuf::messages::data::DataMessage_Envelope* envelope);
  ::sensoris::protobuf::messages::data::DataMessage_Envelope* unsafe_arena_release_envelope();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::EventGroup > event_group_;
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_EventRelation > event_relation_;
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_EventSource > event_source_;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope* envelope_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataMessages_Envelope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessages.Envelope) */ {
 public:
  DataMessages_Envelope();
  virtual ~DataMessages_Envelope();

  DataMessages_Envelope(const DataMessages_Envelope& from);

  inline DataMessages_Envelope& operator=(const DataMessages_Envelope& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataMessages_Envelope(DataMessages_Envelope&& from) noexcept
    : DataMessages_Envelope() {
    *this = ::std::move(from);
  }

  inline DataMessages_Envelope& operator=(DataMessages_Envelope&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataMessages_Envelope& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataMessages_Envelope* internal_default_instance() {
    return reinterpret_cast<const DataMessages_Envelope*>(
               &_DataMessages_Envelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void UnsafeArenaSwap(DataMessages_Envelope* other);
  void Swap(DataMessages_Envelope* other);
  friend void swap(DataMessages_Envelope& a, DataMessages_Envelope& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataMessages_Envelope* New() const final {
    return CreateMaybeMessage<DataMessages_Envelope>(NULL);
  }

  DataMessages_Envelope* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataMessages_Envelope>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataMessages_Envelope& from);
  void MergeFrom(const DataMessages_Envelope& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataMessages_Envelope* other);
  protected:
  explicit DataMessages_Envelope(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sensoris.protobuf.types.base.Entity submitter = 2;
  int submitter_size() const;
  void clear_submitter();
  static const int kSubmitterFieldNumber = 2;
  ::sensoris::protobuf::types::base::Entity* mutable_submitter(int index);
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::Entity >*
      mutable_submitter();
  const ::sensoris::protobuf::types::base::Entity& submitter(int index) const;
  ::sensoris::protobuf::types::base::Entity* add_submitter();
  const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::Entity >&
      submitter() const;

  // repeated .google.protobuf.Any extension = 15;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 15;
  ::google::protobuf::Any* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_extension();
  const ::google::protobuf::Any& extension(int index) const;
  ::google::protobuf::Any* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      extension() const;

  // .sensoris.protobuf.types.base.Version version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  private:
  const ::sensoris::protobuf::types::base::Version& _internal_version() const;
  public:
  const ::sensoris::protobuf::types::base::Version& version() const;
  ::sensoris::protobuf::types::base::Version* release_version();
  ::sensoris::protobuf::types::base::Version* mutable_version();
  void set_allocated_version(::sensoris::protobuf::types::base::Version* version);
  void unsafe_arena_set_allocated_version(
      ::sensoris::protobuf::types::base::Version* version);
  ::sensoris::protobuf::types::base::Version* unsafe_arena_release_version();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessages.Envelope)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::Entity > submitter_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > extension_;
  ::sensoris::protobuf::types::base::Version* version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataMessages : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessages) */ {
 public:
  DataMessages();
  virtual ~DataMessages();

  DataMessages(const DataMessages& from);

  inline DataMessages& operator=(const DataMessages& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataMessages(DataMessages&& from) noexcept
    : DataMessages() {
    *this = ::std::move(from);
  }

  inline DataMessages& operator=(DataMessages&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataMessages& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataMessages* internal_default_instance() {
    return reinterpret_cast<const DataMessages*>(
               &_DataMessages_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void UnsafeArenaSwap(DataMessages* other);
  void Swap(DataMessages* other);
  friend void swap(DataMessages& a, DataMessages& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataMessages* New() const final {
    return CreateMaybeMessage<DataMessages>(NULL);
  }

  DataMessages* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataMessages>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataMessages& from);
  void MergeFrom(const DataMessages& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataMessages* other);
  protected:
  explicit DataMessages(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DataMessages_Envelope Envelope;

  // accessors -------------------------------------------------------

  // repeated .sensoris.protobuf.messages.data.DataMessage data_message = 2;
  int data_message_size() const;
  void clear_data_message();
  static const int kDataMessageFieldNumber = 2;
  ::sensoris::protobuf::messages::data::DataMessage* mutable_data_message(int index);
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage >*
      mutable_data_message();
  const ::sensoris::protobuf::messages::data::DataMessage& data_message(int index) const;
  ::sensoris::protobuf::messages::data::DataMessage* add_data_message();
  const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage >&
      data_message() const;

  // .sensoris.protobuf.messages.data.DataMessages.Envelope envelope = 1;
  bool has_envelope() const;
  void clear_envelope();
  static const int kEnvelopeFieldNumber = 1;
  private:
  const ::sensoris::protobuf::messages::data::DataMessages_Envelope& _internal_envelope() const;
  public:
  const ::sensoris::protobuf::messages::data::DataMessages_Envelope& envelope() const;
  ::sensoris::protobuf::messages::data::DataMessages_Envelope* release_envelope();
  ::sensoris::protobuf::messages::data::DataMessages_Envelope* mutable_envelope();
  void set_allocated_envelope(::sensoris::protobuf::messages::data::DataMessages_Envelope* envelope);
  void unsafe_arena_set_allocated_envelope(
      ::sensoris::protobuf::messages::data::DataMessages_Envelope* envelope);
  ::sensoris::protobuf::messages::data::DataMessages_Envelope* unsafe_arena_release_envelope();

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessages)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage > data_message_;
  ::sensoris::protobuf::messages::data::DataMessages_Envelope* envelope_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sensoris_2fprotobuf_2fmessages_2fdata_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EventGroup_Envelope_Origin

// .sensoris.protobuf.types.base.Timestamp timestamp = 1;
inline bool EventGroup_Envelope_Origin::has_timestamp() const {
  return this != internal_default_instance() && timestamp_ != NULL;
}
inline const ::sensoris::protobuf::types::base::Timestamp& EventGroup_Envelope_Origin::_internal_timestamp() const {
  return *timestamp_;
}
inline const ::sensoris::protobuf::types::base::Timestamp& EventGroup_Envelope_Origin::timestamp() const {
  const ::sensoris::protobuf::types::base::Timestamp* p = timestamp_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::types::base::Timestamp*>(
      &::sensoris::protobuf::types::base::_Timestamp_default_instance_);
}
inline ::sensoris::protobuf::types::base::Timestamp* EventGroup_Envelope_Origin::release_timestamp() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.timestamp)
  
  ::sensoris::protobuf::types::base::Timestamp* temp = timestamp_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  timestamp_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Timestamp* EventGroup_Envelope_Origin::unsafe_arena_release_timestamp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.timestamp)
  
  ::sensoris::protobuf::types::base::Timestamp* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Timestamp* EventGroup_Envelope_Origin::mutable_timestamp() {
  
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::Timestamp>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.timestamp)
  return timestamp_;
}
inline void EventGroup_Envelope_Origin::set_allocated_timestamp(::sensoris::protobuf::types::base::Timestamp* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timestamp_);
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(timestamp)->GetArena();
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    
  } else {
    
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.timestamp)
}

// .sensoris.protobuf.types.spatial.PositionAndAccuracy position_and_accuracy = 2;
inline bool EventGroup_Envelope_Origin::has_position_and_accuracy() const {
  return this != internal_default_instance() && position_and_accuracy_ != NULL;
}
inline const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& EventGroup_Envelope_Origin::_internal_position_and_accuracy() const {
  return *position_and_accuracy_;
}
inline const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& EventGroup_Envelope_Origin::position_and_accuracy() const {
  const ::sensoris::protobuf::types::spatial::PositionAndAccuracy* p = position_and_accuracy_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.position_and_accuracy)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::types::spatial::PositionAndAccuracy*>(
      &::sensoris::protobuf::types::spatial::_PositionAndAccuracy_default_instance_);
}
inline ::sensoris::protobuf::types::spatial::PositionAndAccuracy* EventGroup_Envelope_Origin::release_position_and_accuracy() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.position_and_accuracy)
  
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* temp = position_and_accuracy_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  position_and_accuracy_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::spatial::PositionAndAccuracy* EventGroup_Envelope_Origin::unsafe_arena_release_position_and_accuracy() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.position_and_accuracy)
  
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* temp = position_and_accuracy_;
  position_and_accuracy_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::spatial::PositionAndAccuracy* EventGroup_Envelope_Origin::mutable_position_and_accuracy() {
  
  if (position_and_accuracy_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::spatial::PositionAndAccuracy>(GetArenaNoVirtual());
    position_and_accuracy_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.position_and_accuracy)
  return position_and_accuracy_;
}
inline void EventGroup_Envelope_Origin::set_allocated_position_and_accuracy(::sensoris::protobuf::types::spatial::PositionAndAccuracy* position_and_accuracy) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(position_and_accuracy_);
  }
  if (position_and_accuracy) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(position_and_accuracy)->GetArena();
    if (message_arena != submessage_arena) {
      position_and_accuracy = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position_and_accuracy, submessage_arena);
    }
    
  } else {
    
  }
  position_and_accuracy_ = position_and_accuracy;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.position_and_accuracy)
}

// .sensoris.protobuf.types.spatial.RotationAndAccuracy orientation_and_accuracy = 3;
inline bool EventGroup_Envelope_Origin::has_orientation_and_accuracy() const {
  return this != internal_default_instance() && orientation_and_accuracy_ != NULL;
}
inline const ::sensoris::protobuf::types::spatial::RotationAndAccuracy& EventGroup_Envelope_Origin::_internal_orientation_and_accuracy() const {
  return *orientation_and_accuracy_;
}
inline const ::sensoris::protobuf::types::spatial::RotationAndAccuracy& EventGroup_Envelope_Origin::orientation_and_accuracy() const {
  const ::sensoris::protobuf::types::spatial::RotationAndAccuracy* p = orientation_and_accuracy_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.orientation_and_accuracy)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::types::spatial::RotationAndAccuracy*>(
      &::sensoris::protobuf::types::spatial::_RotationAndAccuracy_default_instance_);
}
inline ::sensoris::protobuf::types::spatial::RotationAndAccuracy* EventGroup_Envelope_Origin::release_orientation_and_accuracy() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.orientation_and_accuracy)
  
  ::sensoris::protobuf::types::spatial::RotationAndAccuracy* temp = orientation_and_accuracy_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  orientation_and_accuracy_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::spatial::RotationAndAccuracy* EventGroup_Envelope_Origin::unsafe_arena_release_orientation_and_accuracy() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.orientation_and_accuracy)
  
  ::sensoris::protobuf::types::spatial::RotationAndAccuracy* temp = orientation_and_accuracy_;
  orientation_and_accuracy_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::spatial::RotationAndAccuracy* EventGroup_Envelope_Origin::mutable_orientation_and_accuracy() {
  
  if (orientation_and_accuracy_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::spatial::RotationAndAccuracy>(GetArenaNoVirtual());
    orientation_and_accuracy_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.orientation_and_accuracy)
  return orientation_and_accuracy_;
}
inline void EventGroup_Envelope_Origin::set_allocated_orientation_and_accuracy(::sensoris::protobuf::types::spatial::RotationAndAccuracy* orientation_and_accuracy) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(orientation_and_accuracy_);
  }
  if (orientation_and_accuracy) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(orientation_and_accuracy)->GetArena();
    if (message_arena != submessage_arena) {
      orientation_and_accuracy = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, orientation_and_accuracy, submessage_arena);
    }
    
  } else {
    
  }
  orientation_and_accuracy_ = orientation_and_accuracy;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.orientation_and_accuracy)
}

// -------------------------------------------------------------------

// EventGroup_Envelope

// .sensoris.protobuf.messages.data.EventGroup.Envelope.Origin origin = 1;
inline bool EventGroup_Envelope::has_origin() const {
  return this != internal_default_instance() && origin_ != NULL;
}
inline void EventGroup_Envelope::clear_origin() {
  if (GetArenaNoVirtual() == NULL && origin_ != NULL) {
    delete origin_;
  }
  origin_ = NULL;
}
inline const ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin& EventGroup_Envelope::_internal_origin() const {
  return *origin_;
}
inline const ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin& EventGroup_Envelope::origin() const {
  const ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* p = origin_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.Envelope.origin)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin*>(
      &::sensoris::protobuf::messages::data::_EventGroup_Envelope_Origin_default_instance_);
}
inline ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* EventGroup_Envelope::release_origin() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.Envelope.origin)
  
  ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* temp = origin_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  origin_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* EventGroup_Envelope::unsafe_arena_release_origin() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.EventGroup.Envelope.origin)
  
  ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* temp = origin_;
  origin_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* EventGroup_Envelope::mutable_origin() {
  
  if (origin_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin>(GetArenaNoVirtual());
    origin_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.Envelope.origin)
  return origin_;
}
inline void EventGroup_Envelope::set_allocated_origin(::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* origin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete origin_;
  }
  if (origin) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(origin);
    if (message_arena != submessage_arena) {
      origin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, origin, submessage_arena);
    }
    
  } else {
    
  }
  origin_ = origin;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.Envelope.origin)
}

// repeated .google.protobuf.Any extension = 15;
inline int EventGroup_Envelope::extension_size() const {
  return extension_.size();
}
inline ::google::protobuf::Any* EventGroup_Envelope::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.Envelope.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
EventGroup_Envelope::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.EventGroup.Envelope.extension)
  return &extension_;
}
inline const ::google::protobuf::Any& EventGroup_Envelope::extension(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.Envelope.extension)
  return extension_.Get(index);
}
inline ::google::protobuf::Any* EventGroup_Envelope::add_extension() {
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.EventGroup.Envelope.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
EventGroup_Envelope::extension() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.EventGroup.Envelope.extension)
  return extension_;
}

// -------------------------------------------------------------------

// EventGroup

// .sensoris.protobuf.messages.data.EventGroup.Envelope envelope = 1;
inline bool EventGroup::has_envelope() const {
  return this != internal_default_instance() && envelope_ != NULL;
}
inline void EventGroup::clear_envelope() {
  if (GetArenaNoVirtual() == NULL && envelope_ != NULL) {
    delete envelope_;
  }
  envelope_ = NULL;
}
inline const ::sensoris::protobuf::messages::data::EventGroup_Envelope& EventGroup::_internal_envelope() const {
  return *envelope_;
}
inline const ::sensoris::protobuf::messages::data::EventGroup_Envelope& EventGroup::envelope() const {
  const ::sensoris::protobuf::messages::data::EventGroup_Envelope* p = envelope_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.envelope)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::messages::data::EventGroup_Envelope*>(
      &::sensoris::protobuf::messages::data::_EventGroup_Envelope_default_instance_);
}
inline ::sensoris::protobuf::messages::data::EventGroup_Envelope* EventGroup::release_envelope() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.envelope)
  
  ::sensoris::protobuf::messages::data::EventGroup_Envelope* temp = envelope_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  envelope_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::messages::data::EventGroup_Envelope* EventGroup::unsafe_arena_release_envelope() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.EventGroup.envelope)
  
  ::sensoris::protobuf::messages::data::EventGroup_Envelope* temp = envelope_;
  envelope_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::messages::data::EventGroup_Envelope* EventGroup::mutable_envelope() {
  
  if (envelope_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::messages::data::EventGroup_Envelope>(GetArenaNoVirtual());
    envelope_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.envelope)
  return envelope_;
}
inline void EventGroup::set_allocated_envelope(::sensoris::protobuf::messages::data::EventGroup_Envelope* envelope) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete envelope_;
  }
  if (envelope) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(envelope);
    if (message_arena != submessage_arena) {
      envelope = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, envelope, submessage_arena);
    }
    
  } else {
    
  }
  envelope_ = envelope;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.envelope)
}

// .sensoris.protobuf.categories.localization.LocalizationCategory localization_category = 2;
inline bool EventGroup::has_localization_category() const {
  return this != internal_default_instance() && localization_category_ != NULL;
}
inline const ::sensoris::protobuf::categories::localization::LocalizationCategory& EventGroup::_internal_localization_category() const {
  return *localization_category_;
}
inline const ::sensoris::protobuf::categories::localization::LocalizationCategory& EventGroup::localization_category() const {
  const ::sensoris::protobuf::categories::localization::LocalizationCategory* p = localization_category_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.localization_category)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::categories::localization::LocalizationCategory*>(
      &::sensoris::protobuf::categories::localization::_LocalizationCategory_default_instance_);
}
inline ::sensoris::protobuf::categories::localization::LocalizationCategory* EventGroup::release_localization_category() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.localization_category)
  
  ::sensoris::protobuf::categories::localization::LocalizationCategory* temp = localization_category_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  localization_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::localization::LocalizationCategory* EventGroup::unsafe_arena_release_localization_category() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.EventGroup.localization_category)
  
  ::sensoris::protobuf::categories::localization::LocalizationCategory* temp = localization_category_;
  localization_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::localization::LocalizationCategory* EventGroup::mutable_localization_category() {
  
  if (localization_category_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::localization::LocalizationCategory>(GetArenaNoVirtual());
    localization_category_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.localization_category)
  return localization_category_;
}
inline void EventGroup::set_allocated_localization_category(::sensoris::protobuf::categories::localization::LocalizationCategory* localization_category) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(localization_category_);
  }
  if (localization_category) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(localization_category)->GetArena();
    if (message_arena != submessage_arena) {
      localization_category = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, localization_category, submessage_arena);
    }
    
  } else {
    
  }
  localization_category_ = localization_category;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.localization_category)
}

// .sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory object_detection_category = 3;
inline bool EventGroup::has_object_detection_category() const {
  return this != internal_default_instance() && object_detection_category_ != NULL;
}
inline const ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory& EventGroup::_internal_object_detection_category() const {
  return *object_detection_category_;
}
inline const ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory& EventGroup::object_detection_category() const {
  const ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* p = object_detection_category_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.object_detection_category)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory*>(
      &::sensoris::protobuf::categories::objectdetection::_ObjectDetectionCategory_default_instance_);
}
inline ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* EventGroup::release_object_detection_category() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.object_detection_category)
  
  ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* temp = object_detection_category_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  object_detection_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* EventGroup::unsafe_arena_release_object_detection_category() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.EventGroup.object_detection_category)
  
  ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* temp = object_detection_category_;
  object_detection_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* EventGroup::mutable_object_detection_category() {
  
  if (object_detection_category_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory>(GetArenaNoVirtual());
    object_detection_category_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.object_detection_category)
  return object_detection_category_;
}
inline void EventGroup::set_allocated_object_detection_category(::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* object_detection_category) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(object_detection_category_);
  }
  if (object_detection_category) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(object_detection_category)->GetArena();
    if (message_arena != submessage_arena) {
      object_detection_category = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, object_detection_category, submessage_arena);
    }
    
  } else {
    
  }
  object_detection_category_ = object_detection_category;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.object_detection_category)
}

// .sensoris.protobuf.categories.weather.WeatherCategory weather_category = 4;
inline bool EventGroup::has_weather_category() const {
  return this != internal_default_instance() && weather_category_ != NULL;
}
inline const ::sensoris::protobuf::categories::weather::WeatherCategory& EventGroup::_internal_weather_category() const {
  return *weather_category_;
}
inline const ::sensoris::protobuf::categories::weather::WeatherCategory& EventGroup::weather_category() const {
  const ::sensoris::protobuf::categories::weather::WeatherCategory* p = weather_category_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.weather_category)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::categories::weather::WeatherCategory*>(
      &::sensoris::protobuf::categories::weather::_WeatherCategory_default_instance_);
}
inline ::sensoris::protobuf::categories::weather::WeatherCategory* EventGroup::release_weather_category() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.weather_category)
  
  ::sensoris::protobuf::categories::weather::WeatherCategory* temp = weather_category_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  weather_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::weather::WeatherCategory* EventGroup::unsafe_arena_release_weather_category() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.EventGroup.weather_category)
  
  ::sensoris::protobuf::categories::weather::WeatherCategory* temp = weather_category_;
  weather_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::weather::WeatherCategory* EventGroup::mutable_weather_category() {
  
  if (weather_category_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::weather::WeatherCategory>(GetArenaNoVirtual());
    weather_category_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.weather_category)
  return weather_category_;
}
inline void EventGroup::set_allocated_weather_category(::sensoris::protobuf::categories::weather::WeatherCategory* weather_category) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(weather_category_);
  }
  if (weather_category) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(weather_category)->GetArena();
    if (message_arena != submessage_arena) {
      weather_category = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, weather_category, submessage_arena);
    }
    
  } else {
    
  }
  weather_category_ = weather_category;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.weather_category)
}

// .sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory driving_behavior_category = 5;
inline bool EventGroup::has_driving_behavior_category() const {
  return this != internal_default_instance() && driving_behavior_category_ != NULL;
}
inline const ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory& EventGroup::_internal_driving_behavior_category() const {
  return *driving_behavior_category_;
}
inline const ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory& EventGroup::driving_behavior_category() const {
  const ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* p = driving_behavior_category_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.driving_behavior_category)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory*>(
      &::sensoris::protobuf::categories::drivingbehavior::_DrivingBehaviorCategory_default_instance_);
}
inline ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* EventGroup::release_driving_behavior_category() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.driving_behavior_category)
  
  ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* temp = driving_behavior_category_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  driving_behavior_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* EventGroup::unsafe_arena_release_driving_behavior_category() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.EventGroup.driving_behavior_category)
  
  ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* temp = driving_behavior_category_;
  driving_behavior_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* EventGroup::mutable_driving_behavior_category() {
  
  if (driving_behavior_category_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory>(GetArenaNoVirtual());
    driving_behavior_category_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.driving_behavior_category)
  return driving_behavior_category_;
}
inline void EventGroup::set_allocated_driving_behavior_category(::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* driving_behavior_category) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(driving_behavior_category_);
  }
  if (driving_behavior_category) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(driving_behavior_category)->GetArena();
    if (message_arena != submessage_arena) {
      driving_behavior_category = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, driving_behavior_category, submessage_arena);
    }
    
  } else {
    
  }
  driving_behavior_category_ = driving_behavior_category;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.driving_behavior_category)
}

// .sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory intersection_attribution_category = 6;
inline bool EventGroup::has_intersection_attribution_category() const {
  return this != internal_default_instance() && intersection_attribution_category_ != NULL;
}
inline const ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory& EventGroup::_internal_intersection_attribution_category() const {
  return *intersection_attribution_category_;
}
inline const ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory& EventGroup::intersection_attribution_category() const {
  const ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* p = intersection_attribution_category_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.intersection_attribution_category)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory*>(
      &::sensoris::protobuf::categories::intersectionattribution::_IntersectionAttributionCategory_default_instance_);
}
inline ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* EventGroup::release_intersection_attribution_category() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.intersection_attribution_category)
  
  ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* temp = intersection_attribution_category_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  intersection_attribution_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* EventGroup::unsafe_arena_release_intersection_attribution_category() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.EventGroup.intersection_attribution_category)
  
  ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* temp = intersection_attribution_category_;
  intersection_attribution_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* EventGroup::mutable_intersection_attribution_category() {
  
  if (intersection_attribution_category_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory>(GetArenaNoVirtual());
    intersection_attribution_category_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.intersection_attribution_category)
  return intersection_attribution_category_;
}
inline void EventGroup::set_allocated_intersection_attribution_category(::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* intersection_attribution_category) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(intersection_attribution_category_);
  }
  if (intersection_attribution_category) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(intersection_attribution_category)->GetArena();
    if (message_arena != submessage_arena) {
      intersection_attribution_category = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, intersection_attribution_category, submessage_arena);
    }
    
  } else {
    
  }
  intersection_attribution_category_ = intersection_attribution_category;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.intersection_attribution_category)
}

// .sensoris.protobuf.categories.roadattribution.RoadAttributionCategory road_attribution_category = 7;
inline bool EventGroup::has_road_attribution_category() const {
  return this != internal_default_instance() && road_attribution_category_ != NULL;
}
inline const ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory& EventGroup::_internal_road_attribution_category() const {
  return *road_attribution_category_;
}
inline const ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory& EventGroup::road_attribution_category() const {
  const ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* p = road_attribution_category_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.road_attribution_category)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory*>(
      &::sensoris::protobuf::categories::roadattribution::_RoadAttributionCategory_default_instance_);
}
inline ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* EventGroup::release_road_attribution_category() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.road_attribution_category)
  
  ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* temp = road_attribution_category_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  road_attribution_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* EventGroup::unsafe_arena_release_road_attribution_category() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.EventGroup.road_attribution_category)
  
  ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* temp = road_attribution_category_;
  road_attribution_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* EventGroup::mutable_road_attribution_category() {
  
  if (road_attribution_category_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory>(GetArenaNoVirtual());
    road_attribution_category_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.road_attribution_category)
  return road_attribution_category_;
}
inline void EventGroup::set_allocated_road_attribution_category(::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* road_attribution_category) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(road_attribution_category_);
  }
  if (road_attribution_category) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(road_attribution_category)->GetArena();
    if (message_arena != submessage_arena) {
      road_attribution_category = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, road_attribution_category, submessage_arena);
    }
    
  } else {
    
  }
  road_attribution_category_ = road_attribution_category;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.road_attribution_category)
}

// .sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory traffic_regulation_category = 8;
inline bool EventGroup::has_traffic_regulation_category() const {
  return this != internal_default_instance() && traffic_regulation_category_ != NULL;
}
inline const ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory& EventGroup::_internal_traffic_regulation_category() const {
  return *traffic_regulation_category_;
}
inline const ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory& EventGroup::traffic_regulation_category() const {
  const ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* p = traffic_regulation_category_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.traffic_regulation_category)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory*>(
      &::sensoris::protobuf::categories::trafficregulation::_TrafficRegulationCategory_default_instance_);
}
inline ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* EventGroup::release_traffic_regulation_category() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.traffic_regulation_category)
  
  ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* temp = traffic_regulation_category_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  traffic_regulation_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* EventGroup::unsafe_arena_release_traffic_regulation_category() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.EventGroup.traffic_regulation_category)
  
  ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* temp = traffic_regulation_category_;
  traffic_regulation_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* EventGroup::mutable_traffic_regulation_category() {
  
  if (traffic_regulation_category_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory>(GetArenaNoVirtual());
    traffic_regulation_category_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.traffic_regulation_category)
  return traffic_regulation_category_;
}
inline void EventGroup::set_allocated_traffic_regulation_category(::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* traffic_regulation_category) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(traffic_regulation_category_);
  }
  if (traffic_regulation_category) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(traffic_regulation_category)->GetArena();
    if (message_arena != submessage_arena) {
      traffic_regulation_category = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, traffic_regulation_category, submessage_arena);
    }
    
  } else {
    
  }
  traffic_regulation_category_ = traffic_regulation_category;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.traffic_regulation_category)
}

// .sensoris.protobuf.categories.trafficevents.TrafficEventsCategory traffic_events_category = 9;
inline bool EventGroup::has_traffic_events_category() const {
  return this != internal_default_instance() && traffic_events_category_ != NULL;
}
inline const ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory& EventGroup::_internal_traffic_events_category() const {
  return *traffic_events_category_;
}
inline const ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory& EventGroup::traffic_events_category() const {
  const ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* p = traffic_events_category_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.traffic_events_category)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory*>(
      &::sensoris::protobuf::categories::trafficevents::_TrafficEventsCategory_default_instance_);
}
inline ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* EventGroup::release_traffic_events_category() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.traffic_events_category)
  
  ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* temp = traffic_events_category_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  traffic_events_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* EventGroup::unsafe_arena_release_traffic_events_category() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.EventGroup.traffic_events_category)
  
  ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* temp = traffic_events_category_;
  traffic_events_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* EventGroup::mutable_traffic_events_category() {
  
  if (traffic_events_category_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory>(GetArenaNoVirtual());
    traffic_events_category_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.traffic_events_category)
  return traffic_events_category_;
}
inline void EventGroup::set_allocated_traffic_events_category(::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* traffic_events_category) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(traffic_events_category_);
  }
  if (traffic_events_category) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(traffic_events_category)->GetArena();
    if (message_arena != submessage_arena) {
      traffic_events_category = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, traffic_events_category, submessage_arena);
    }
    
  } else {
    
  }
  traffic_events_category_ = traffic_events_category;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.traffic_events_category)
}

// .sensoris.protobuf.categories.trafficmaneuver.TrafficManeuverCategory traffic_maneuver_category = 10;
inline bool EventGroup::has_traffic_maneuver_category() const {
  return this != internal_default_instance() && traffic_maneuver_category_ != NULL;
}
inline const ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory& EventGroup::_internal_traffic_maneuver_category() const {
  return *traffic_maneuver_category_;
}
inline const ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory& EventGroup::traffic_maneuver_category() const {
  const ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* p = traffic_maneuver_category_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.traffic_maneuver_category)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory*>(
      &::sensoris::protobuf::categories::trafficmaneuver::_TrafficManeuverCategory_default_instance_);
}
inline ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* EventGroup::release_traffic_maneuver_category() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.traffic_maneuver_category)
  
  ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* temp = traffic_maneuver_category_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  traffic_maneuver_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* EventGroup::unsafe_arena_release_traffic_maneuver_category() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.EventGroup.traffic_maneuver_category)
  
  ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* temp = traffic_maneuver_category_;
  traffic_maneuver_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* EventGroup::mutable_traffic_maneuver_category() {
  
  if (traffic_maneuver_category_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory>(GetArenaNoVirtual());
    traffic_maneuver_category_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.traffic_maneuver_category)
  return traffic_maneuver_category_;
}
inline void EventGroup::set_allocated_traffic_maneuver_category(::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* traffic_maneuver_category) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(traffic_maneuver_category_);
  }
  if (traffic_maneuver_category) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(traffic_maneuver_category)->GetArena();
    if (message_arena != submessage_arena) {
      traffic_maneuver_category = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, traffic_maneuver_category, submessage_arena);
    }
    
  } else {
    
  }
  traffic_maneuver_category_ = traffic_maneuver_category;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.traffic_maneuver_category)
}

// .sensoris.protobuf.categories.brake.BrakeCategory brake_category = 11;
inline bool EventGroup::has_brake_category() const {
  return this != internal_default_instance() && brake_category_ != NULL;
}
inline const ::sensoris::protobuf::categories::brake::BrakeCategory& EventGroup::_internal_brake_category() const {
  return *brake_category_;
}
inline const ::sensoris::protobuf::categories::brake::BrakeCategory& EventGroup::brake_category() const {
  const ::sensoris::protobuf::categories::brake::BrakeCategory* p = brake_category_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.brake_category)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::categories::brake::BrakeCategory*>(
      &::sensoris::protobuf::categories::brake::_BrakeCategory_default_instance_);
}
inline ::sensoris::protobuf::categories::brake::BrakeCategory* EventGroup::release_brake_category() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.brake_category)
  
  ::sensoris::protobuf::categories::brake::BrakeCategory* temp = brake_category_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  brake_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::brake::BrakeCategory* EventGroup::unsafe_arena_release_brake_category() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.EventGroup.brake_category)
  
  ::sensoris::protobuf::categories::brake::BrakeCategory* temp = brake_category_;
  brake_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::brake::BrakeCategory* EventGroup::mutable_brake_category() {
  
  if (brake_category_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::brake::BrakeCategory>(GetArenaNoVirtual());
    brake_category_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.brake_category)
  return brake_category_;
}
inline void EventGroup::set_allocated_brake_category(::sensoris::protobuf::categories::brake::BrakeCategory* brake_category) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(brake_category_);
  }
  if (brake_category) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(brake_category)->GetArena();
    if (message_arena != submessage_arena) {
      brake_category = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, brake_category, submessage_arena);
    }
    
  } else {
    
  }
  brake_category_ = brake_category;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.brake_category)
}

// .sensoris.protobuf.categories.powertrain.PowertrainCategory powertrain_category = 12;
inline bool EventGroup::has_powertrain_category() const {
  return this != internal_default_instance() && powertrain_category_ != NULL;
}
inline const ::sensoris::protobuf::categories::powertrain::PowertrainCategory& EventGroup::_internal_powertrain_category() const {
  return *powertrain_category_;
}
inline const ::sensoris::protobuf::categories::powertrain::PowertrainCategory& EventGroup::powertrain_category() const {
  const ::sensoris::protobuf::categories::powertrain::PowertrainCategory* p = powertrain_category_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.powertrain_category)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::categories::powertrain::PowertrainCategory*>(
      &::sensoris::protobuf::categories::powertrain::_PowertrainCategory_default_instance_);
}
inline ::sensoris::protobuf::categories::powertrain::PowertrainCategory* EventGroup::release_powertrain_category() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.powertrain_category)
  
  ::sensoris::protobuf::categories::powertrain::PowertrainCategory* temp = powertrain_category_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  powertrain_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::powertrain::PowertrainCategory* EventGroup::unsafe_arena_release_powertrain_category() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.EventGroup.powertrain_category)
  
  ::sensoris::protobuf::categories::powertrain::PowertrainCategory* temp = powertrain_category_;
  powertrain_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::powertrain::PowertrainCategory* EventGroup::mutable_powertrain_category() {
  
  if (powertrain_category_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::powertrain::PowertrainCategory>(GetArenaNoVirtual());
    powertrain_category_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.powertrain_category)
  return powertrain_category_;
}
inline void EventGroup::set_allocated_powertrain_category(::sensoris::protobuf::categories::powertrain::PowertrainCategory* powertrain_category) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(powertrain_category_);
  }
  if (powertrain_category) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(powertrain_category)->GetArena();
    if (message_arena != submessage_arena) {
      powertrain_category = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, powertrain_category, submessage_arena);
    }
    
  } else {
    
  }
  powertrain_category_ = powertrain_category;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.powertrain_category)
}

// .sensoris.protobuf.categories.map.MapCategory map_category = 13;
inline bool EventGroup::has_map_category() const {
  return this != internal_default_instance() && map_category_ != NULL;
}
inline const ::sensoris::protobuf::categories::map::MapCategory& EventGroup::_internal_map_category() const {
  return *map_category_;
}
inline const ::sensoris::protobuf::categories::map::MapCategory& EventGroup::map_category() const {
  const ::sensoris::protobuf::categories::map::MapCategory* p = map_category_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.map_category)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::categories::map::MapCategory*>(
      &::sensoris::protobuf::categories::map::_MapCategory_default_instance_);
}
inline ::sensoris::protobuf::categories::map::MapCategory* EventGroup::release_map_category() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.map_category)
  
  ::sensoris::protobuf::categories::map::MapCategory* temp = map_category_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  map_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::map::MapCategory* EventGroup::unsafe_arena_release_map_category() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.EventGroup.map_category)
  
  ::sensoris::protobuf::categories::map::MapCategory* temp = map_category_;
  map_category_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::categories::map::MapCategory* EventGroup::mutable_map_category() {
  
  if (map_category_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::map::MapCategory>(GetArenaNoVirtual());
    map_category_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.map_category)
  return map_category_;
}
inline void EventGroup::set_allocated_map_category(::sensoris::protobuf::categories::map::MapCategory* map_category) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(map_category_);
  }
  if (map_category) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(map_category)->GetArena();
    if (message_arena != submessage_arena) {
      map_category = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, map_category, submessage_arena);
    }
    
  } else {
    
  }
  map_category_ = map_category;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.map_category)
}

// -------------------------------------------------------------------

// DataMessage_AbsolutePaths_Path

// repeated int64 field_number = 1;
inline int DataMessage_AbsolutePaths_Path::field_number_size() const {
  return field_number_.size();
}
inline void DataMessage_AbsolutePaths_Path::clear_field_number() {
  field_number_.Clear();
}
inline ::google::protobuf::int64 DataMessage_AbsolutePaths_Path::field_number(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path.field_number)
  return field_number_.Get(index);
}
inline void DataMessage_AbsolutePaths_Path::set_field_number(int index, ::google::protobuf::int64 value) {
  field_number_.Set(index, value);
  // @@protoc_insertion_point(field_set:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path.field_number)
}
inline void DataMessage_AbsolutePaths_Path::add_field_number(::google::protobuf::int64 value) {
  field_number_.Add(value);
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path.field_number)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DataMessage_AbsolutePaths_Path::field_number() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path.field_number)
  return field_number_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DataMessage_AbsolutePaths_Path::mutable_field_number() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path.field_number)
  return &field_number_;
}

// -------------------------------------------------------------------

// DataMessage_AbsolutePaths

// repeated .sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path path = 1;
inline int DataMessage_AbsolutePaths::path_size() const {
  return path_.size();
}
inline void DataMessage_AbsolutePaths::clear_path() {
  path_.Clear();
}
inline ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path* DataMessage_AbsolutePaths::mutable_path(int index) {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.path)
  return path_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path >*
DataMessage_AbsolutePaths::mutable_path() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.path)
  return &path_;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path& DataMessage_AbsolutePaths::path(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.path)
  return path_.Get(index);
}
inline ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path* DataMessage_AbsolutePaths::add_path() {
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.path)
  return path_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path >&
DataMessage_AbsolutePaths::path() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.path)
  return path_;
}

// -------------------------------------------------------------------

// DataMessage_Paths

// .sensoris.protobuf.messages.data.DataMessage.AbsolutePaths absolute_paths = 1;
inline bool DataMessage_Paths::has_absolute_paths() const {
  return type_case() == kAbsolutePaths;
}
inline void DataMessage_Paths::set_has_absolute_paths() {
  _oneof_case_[0] = kAbsolutePaths;
}
inline void DataMessage_Paths::clear_absolute_paths() {
  if (has_absolute_paths()) {
    if (GetArenaNoVirtual() == NULL) {
      delete type_.absolute_paths_;
    }
    clear_has_type();
  }
}
inline const ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths& DataMessage_Paths::_internal_absolute_paths() const {
  return *type_.absolute_paths_;
}
inline ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* DataMessage_Paths::release_absolute_paths() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Paths.absolute_paths)
  if (has_absolute_paths()) {
    clear_has_type();
      ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* temp = type_.absolute_paths_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    type_.absolute_paths_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths& DataMessage_Paths::absolute_paths() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Paths.absolute_paths)
  return has_absolute_paths()
      ? *type_.absolute_paths_
      : *reinterpret_cast< ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths*>(&::sensoris::protobuf::messages::data::_DataMessage_AbsolutePaths_default_instance_);
}
inline ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* DataMessage_Paths::unsafe_arena_release_absolute_paths() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Paths.absolute_paths)
  if (has_absolute_paths()) {
    clear_has_type();
    ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* temp = type_.absolute_paths_;
    type_.absolute_paths_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void DataMessage_Paths::unsafe_arena_set_allocated_absolute_paths(::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* absolute_paths) {
  clear_type();
  if (absolute_paths) {
    set_has_absolute_paths();
    type_.absolute_paths_ = absolute_paths;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Paths.absolute_paths)
}
inline ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* DataMessage_Paths::mutable_absolute_paths() {
  if (!has_absolute_paths()) {
    clear_type();
    set_has_absolute_paths();
    type_.absolute_paths_ = CreateMaybeMessage< ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Paths.absolute_paths)
  return type_.absolute_paths_;
}

inline bool DataMessage_Paths::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void DataMessage_Paths::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
inline DataMessage_Paths::TypeCase DataMessage_Paths::type_case() const {
  return DataMessage_Paths::TypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// DataMessage_Envelope_Ids

// .google.protobuf.StringValue session_id = 1;
inline bool DataMessage_Envelope_Ids::has_session_id() const {
  return this != internal_default_instance() && session_id_ != NULL;
}
inline const ::google::protobuf::StringValue& DataMessage_Envelope_Ids::_internal_session_id() const {
  return *session_id_;
}
inline const ::google::protobuf::StringValue& DataMessage_Envelope_Ids::session_id() const {
  const ::google::protobuf::StringValue* p = session_id_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.session_id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::release_session_id() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.session_id)
  
  ::google::protobuf::StringValue* temp = session_id_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  session_id_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::unsafe_arena_release_session_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.session_id)
  
  ::google::protobuf::StringValue* temp = session_id_;
  session_id_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::mutable_session_id() {
  
  if (session_id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    session_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.session_id)
  return session_id_;
}
inline void DataMessage_Envelope_Ids::set_allocated_session_id(::google::protobuf::StringValue* session_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(session_id_);
  }
  if (session_id) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(session_id)->GetArena();
    if (message_arena != submessage_arena) {
      session_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, session_id, submessage_arena);
    }
    
  } else {
    
  }
  session_id_ = session_id;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.session_id)
}

// .google.protobuf.Int64Value message_id = 2;
inline bool DataMessage_Envelope_Ids::has_message_id() const {
  return this != internal_default_instance() && message_id_ != NULL;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_Ids::_internal_message_id() const {
  return *message_id_;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_Ids::message_id() const {
  const ::google::protobuf::Int64Value* p = message_id_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.message_id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_Ids::release_message_id() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.message_id)
  
  ::google::protobuf::Int64Value* temp = message_id_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  message_id_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_Ids::unsafe_arena_release_message_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.message_id)
  
  ::google::protobuf::Int64Value* temp = message_id_;
  message_id_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_Ids::mutable_message_id() {
  
  if (message_id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    message_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.message_id)
  return message_id_;
}
inline void DataMessage_Envelope_Ids::set_allocated_message_id(::google::protobuf::Int64Value* message_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(message_id_);
  }
  if (message_id) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(message_id)->GetArena();
    if (message_arena != submessage_arena) {
      message_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, message_id, submessage_arena);
    }
    
  } else {
    
  }
  message_id_ = message_id;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.message_id)
}

// .google.protobuf.BoolValue last_message_of_session = 3;
inline bool DataMessage_Envelope_Ids::has_last_message_of_session() const {
  return this != internal_default_instance() && last_message_of_session_ != NULL;
}
inline const ::google::protobuf::BoolValue& DataMessage_Envelope_Ids::_internal_last_message_of_session() const {
  return *last_message_of_session_;
}
inline const ::google::protobuf::BoolValue& DataMessage_Envelope_Ids::last_message_of_session() const {
  const ::google::protobuf::BoolValue* p = last_message_of_session_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.last_message_of_session)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
inline ::google::protobuf::BoolValue* DataMessage_Envelope_Ids::release_last_message_of_session() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.last_message_of_session)
  
  ::google::protobuf::BoolValue* temp = last_message_of_session_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  last_message_of_session_ = NULL;
  return temp;
}
inline ::google::protobuf::BoolValue* DataMessage_Envelope_Ids::unsafe_arena_release_last_message_of_session() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.last_message_of_session)
  
  ::google::protobuf::BoolValue* temp = last_message_of_session_;
  last_message_of_session_ = NULL;
  return temp;
}
inline ::google::protobuf::BoolValue* DataMessage_Envelope_Ids::mutable_last_message_of_session() {
  
  if (last_message_of_session_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::BoolValue>(GetArenaNoVirtual());
    last_message_of_session_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.last_message_of_session)
  return last_message_of_session_;
}
inline void DataMessage_Envelope_Ids::set_allocated_last_message_of_session(::google::protobuf::BoolValue* last_message_of_session) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(last_message_of_session_);
  }
  if (last_message_of_session) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(last_message_of_session)->GetArena();
    if (message_arena != submessage_arena) {
      last_message_of_session = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, last_message_of_session, submessage_arena);
    }
    
  } else {
    
  }
  last_message_of_session_ = last_message_of_session;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.last_message_of_session)
}

// .google.protobuf.StringValue vehicle_fleet_id = 4;
inline bool DataMessage_Envelope_Ids::has_vehicle_fleet_id() const {
  return this != internal_default_instance() && vehicle_fleet_id_ != NULL;
}
inline const ::google::protobuf::StringValue& DataMessage_Envelope_Ids::_internal_vehicle_fleet_id() const {
  return *vehicle_fleet_id_;
}
inline const ::google::protobuf::StringValue& DataMessage_Envelope_Ids::vehicle_fleet_id() const {
  const ::google::protobuf::StringValue* p = vehicle_fleet_id_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_fleet_id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::release_vehicle_fleet_id() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_fleet_id)
  
  ::google::protobuf::StringValue* temp = vehicle_fleet_id_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  vehicle_fleet_id_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::unsafe_arena_release_vehicle_fleet_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_fleet_id)
  
  ::google::protobuf::StringValue* temp = vehicle_fleet_id_;
  vehicle_fleet_id_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::mutable_vehicle_fleet_id() {
  
  if (vehicle_fleet_id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    vehicle_fleet_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_fleet_id)
  return vehicle_fleet_id_;
}
inline void DataMessage_Envelope_Ids::set_allocated_vehicle_fleet_id(::google::protobuf::StringValue* vehicle_fleet_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(vehicle_fleet_id_);
  }
  if (vehicle_fleet_id) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(vehicle_fleet_id)->GetArena();
    if (message_arena != submessage_arena) {
      vehicle_fleet_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehicle_fleet_id, submessage_arena);
    }
    
  } else {
    
  }
  vehicle_fleet_id_ = vehicle_fleet_id;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_fleet_id)
}

// .google.protobuf.StringValue vehicle_id = 5;
inline bool DataMessage_Envelope_Ids::has_vehicle_id() const {
  return this != internal_default_instance() && vehicle_id_ != NULL;
}
inline const ::google::protobuf::StringValue& DataMessage_Envelope_Ids::_internal_vehicle_id() const {
  return *vehicle_id_;
}
inline const ::google::protobuf::StringValue& DataMessage_Envelope_Ids::vehicle_id() const {
  const ::google::protobuf::StringValue* p = vehicle_id_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::release_vehicle_id() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_id)
  
  ::google::protobuf::StringValue* temp = vehicle_id_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  vehicle_id_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::unsafe_arena_release_vehicle_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_id)
  
  ::google::protobuf::StringValue* temp = vehicle_id_;
  vehicle_id_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::mutable_vehicle_id() {
  
  if (vehicle_id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    vehicle_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_id)
  return vehicle_id_;
}
inline void DataMessage_Envelope_Ids::set_allocated_vehicle_id(::google::protobuf::StringValue* vehicle_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(vehicle_id_);
  }
  if (vehicle_id) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(vehicle_id)->GetArena();
    if (message_arena != submessage_arena) {
      vehicle_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehicle_id, submessage_arena);
    }
    
  } else {
    
  }
  vehicle_id_ = vehicle_id;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_id)
}

// .google.protobuf.StringValue driver_id = 6;
inline bool DataMessage_Envelope_Ids::has_driver_id() const {
  return this != internal_default_instance() && driver_id_ != NULL;
}
inline const ::google::protobuf::StringValue& DataMessage_Envelope_Ids::_internal_driver_id() const {
  return *driver_id_;
}
inline const ::google::protobuf::StringValue& DataMessage_Envelope_Ids::driver_id() const {
  const ::google::protobuf::StringValue* p = driver_id_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.driver_id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::release_driver_id() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.driver_id)
  
  ::google::protobuf::StringValue* temp = driver_id_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  driver_id_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::unsafe_arena_release_driver_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.driver_id)
  
  ::google::protobuf::StringValue* temp = driver_id_;
  driver_id_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::mutable_driver_id() {
  
  if (driver_id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    driver_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.driver_id)
  return driver_id_;
}
inline void DataMessage_Envelope_Ids::set_allocated_driver_id(::google::protobuf::StringValue* driver_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(driver_id_);
  }
  if (driver_id) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(driver_id)->GetArena();
    if (message_arena != submessage_arena) {
      driver_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, driver_id, submessage_arena);
    }
    
  } else {
    
  }
  driver_id_ = driver_id;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.driver_id)
}

// -------------------------------------------------------------------

// DataMessage_Envelope_FieldResolutionOverride

// .sensoris.protobuf.messages.data.DataMessage.Paths paths = 1;
inline bool DataMessage_Envelope_FieldResolutionOverride::has_paths() const {
  return this != internal_default_instance() && paths_ != NULL;
}
inline void DataMessage_Envelope_FieldResolutionOverride::clear_paths() {
  if (GetArenaNoVirtual() == NULL && paths_ != NULL) {
    delete paths_;
  }
  paths_ = NULL;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Paths& DataMessage_Envelope_FieldResolutionOverride::_internal_paths() const {
  return *paths_;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Paths& DataMessage_Envelope_FieldResolutionOverride::paths() const {
  const ::sensoris::protobuf::messages::data::DataMessage_Paths* p = paths_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.paths)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::messages::data::DataMessage_Paths*>(
      &::sensoris::protobuf::messages::data::_DataMessage_Paths_default_instance_);
}
inline ::sensoris::protobuf::messages::data::DataMessage_Paths* DataMessage_Envelope_FieldResolutionOverride::release_paths() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.paths)
  
  ::sensoris::protobuf::messages::data::DataMessage_Paths* temp = paths_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  paths_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Paths* DataMessage_Envelope_FieldResolutionOverride::unsafe_arena_release_paths() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.paths)
  
  ::sensoris::protobuf::messages::data::DataMessage_Paths* temp = paths_;
  paths_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Paths* DataMessage_Envelope_FieldResolutionOverride::mutable_paths() {
  
  if (paths_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Paths>(GetArenaNoVirtual());
    paths_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.paths)
  return paths_;
}
inline void DataMessage_Envelope_FieldResolutionOverride::set_allocated_paths(::sensoris::protobuf::messages::data::DataMessage_Paths* paths) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete paths_;
  }
  if (paths) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(paths);
    if (message_arena != submessage_arena) {
      paths = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, paths, submessage_arena);
    }
    
  } else {
    
  }
  paths_ = paths;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.paths)
}

// .google.protobuf.Int64Value exponent = 2;
inline bool DataMessage_Envelope_FieldResolutionOverride::has_exponent() const {
  return this != internal_default_instance() && exponent_ != NULL;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_FieldResolutionOverride::_internal_exponent() const {
  return *exponent_;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_FieldResolutionOverride::exponent() const {
  const ::google::protobuf::Int64Value* p = exponent_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.exponent)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_FieldResolutionOverride::release_exponent() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.exponent)
  
  ::google::protobuf::Int64Value* temp = exponent_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  exponent_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_FieldResolutionOverride::unsafe_arena_release_exponent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.exponent)
  
  ::google::protobuf::Int64Value* temp = exponent_;
  exponent_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_FieldResolutionOverride::mutable_exponent() {
  
  if (exponent_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    exponent_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.exponent)
  return exponent_;
}
inline void DataMessage_Envelope_FieldResolutionOverride::set_allocated_exponent(::google::protobuf::Int64Value* exponent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(exponent_);
  }
  if (exponent) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(exponent)->GetArena();
    if (message_arena != submessage_arena) {
      exponent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, exponent, submessage_arena);
    }
    
  } else {
    
  }
  exponent_ = exponent;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.exponent)
}

// -------------------------------------------------------------------

// DataMessage_Envelope_VehicleDimensions

// .google.protobuf.Int64Value distance_to_front = 1 [(.sensoris.protobuf.types.base.exponent) = 0];
inline bool DataMessage_Envelope_VehicleDimensions::has_distance_to_front() const {
  return this != internal_default_instance() && distance_to_front_ != NULL;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::_internal_distance_to_front() const {
  return *distance_to_front_;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::distance_to_front() const {
  const ::google::protobuf::Int64Value* p = distance_to_front_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_front)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::release_distance_to_front() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_front)
  
  ::google::protobuf::Int64Value* temp = distance_to_front_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  distance_to_front_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::unsafe_arena_release_distance_to_front() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_front)
  
  ::google::protobuf::Int64Value* temp = distance_to_front_;
  distance_to_front_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::mutable_distance_to_front() {
  
  if (distance_to_front_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    distance_to_front_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_front)
  return distance_to_front_;
}
inline void DataMessage_Envelope_VehicleDimensions::set_allocated_distance_to_front(::google::protobuf::Int64Value* distance_to_front) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(distance_to_front_);
  }
  if (distance_to_front) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(distance_to_front)->GetArena();
    if (message_arena != submessage_arena) {
      distance_to_front = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, distance_to_front, submessage_arena);
    }
    
  } else {
    
  }
  distance_to_front_ = distance_to_front;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_front)
}

// .google.protobuf.Int64Value distance_to_back = 2 [(.sensoris.protobuf.types.base.exponent) = 0];
inline bool DataMessage_Envelope_VehicleDimensions::has_distance_to_back() const {
  return this != internal_default_instance() && distance_to_back_ != NULL;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::_internal_distance_to_back() const {
  return *distance_to_back_;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::distance_to_back() const {
  const ::google::protobuf::Int64Value* p = distance_to_back_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_back)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::release_distance_to_back() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_back)
  
  ::google::protobuf::Int64Value* temp = distance_to_back_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  distance_to_back_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::unsafe_arena_release_distance_to_back() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_back)
  
  ::google::protobuf::Int64Value* temp = distance_to_back_;
  distance_to_back_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::mutable_distance_to_back() {
  
  if (distance_to_back_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    distance_to_back_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_back)
  return distance_to_back_;
}
inline void DataMessage_Envelope_VehicleDimensions::set_allocated_distance_to_back(::google::protobuf::Int64Value* distance_to_back) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(distance_to_back_);
  }
  if (distance_to_back) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(distance_to_back)->GetArena();
    if (message_arena != submessage_arena) {
      distance_to_back = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, distance_to_back, submessage_arena);
    }
    
  } else {
    
  }
  distance_to_back_ = distance_to_back;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_back)
}

// .google.protobuf.Int64Value distance_to_left = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
inline bool DataMessage_Envelope_VehicleDimensions::has_distance_to_left() const {
  return this != internal_default_instance() && distance_to_left_ != NULL;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::_internal_distance_to_left() const {
  return *distance_to_left_;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::distance_to_left() const {
  const ::google::protobuf::Int64Value* p = distance_to_left_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_left)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::release_distance_to_left() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_left)
  
  ::google::protobuf::Int64Value* temp = distance_to_left_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  distance_to_left_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::unsafe_arena_release_distance_to_left() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_left)
  
  ::google::protobuf::Int64Value* temp = distance_to_left_;
  distance_to_left_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::mutable_distance_to_left() {
  
  if (distance_to_left_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    distance_to_left_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_left)
  return distance_to_left_;
}
inline void DataMessage_Envelope_VehicleDimensions::set_allocated_distance_to_left(::google::protobuf::Int64Value* distance_to_left) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(distance_to_left_);
  }
  if (distance_to_left) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(distance_to_left)->GetArena();
    if (message_arena != submessage_arena) {
      distance_to_left = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, distance_to_left, submessage_arena);
    }
    
  } else {
    
  }
  distance_to_left_ = distance_to_left;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_left)
}

// .google.protobuf.Int64Value distance_to_right = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
inline bool DataMessage_Envelope_VehicleDimensions::has_distance_to_right() const {
  return this != internal_default_instance() && distance_to_right_ != NULL;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::_internal_distance_to_right() const {
  return *distance_to_right_;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::distance_to_right() const {
  const ::google::protobuf::Int64Value* p = distance_to_right_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_right)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::release_distance_to_right() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_right)
  
  ::google::protobuf::Int64Value* temp = distance_to_right_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  distance_to_right_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::unsafe_arena_release_distance_to_right() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_right)
  
  ::google::protobuf::Int64Value* temp = distance_to_right_;
  distance_to_right_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::mutable_distance_to_right() {
  
  if (distance_to_right_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    distance_to_right_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_right)
  return distance_to_right_;
}
inline void DataMessage_Envelope_VehicleDimensions::set_allocated_distance_to_right(::google::protobuf::Int64Value* distance_to_right) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(distance_to_right_);
  }
  if (distance_to_right) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(distance_to_right)->GetArena();
    if (message_arena != submessage_arena) {
      distance_to_right = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, distance_to_right, submessage_arena);
    }
    
  } else {
    
  }
  distance_to_right_ = distance_to_right;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_right)
}

// .google.protobuf.Int64Value distance_to_top = 5 [(.sensoris.protobuf.types.base.exponent) = 0];
inline bool DataMessage_Envelope_VehicleDimensions::has_distance_to_top() const {
  return this != internal_default_instance() && distance_to_top_ != NULL;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::_internal_distance_to_top() const {
  return *distance_to_top_;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::distance_to_top() const {
  const ::google::protobuf::Int64Value* p = distance_to_top_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_top)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::release_distance_to_top() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_top)
  
  ::google::protobuf::Int64Value* temp = distance_to_top_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  distance_to_top_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::unsafe_arena_release_distance_to_top() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_top)
  
  ::google::protobuf::Int64Value* temp = distance_to_top_;
  distance_to_top_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::mutable_distance_to_top() {
  
  if (distance_to_top_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    distance_to_top_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_top)
  return distance_to_top_;
}
inline void DataMessage_Envelope_VehicleDimensions::set_allocated_distance_to_top(::google::protobuf::Int64Value* distance_to_top) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(distance_to_top_);
  }
  if (distance_to_top) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(distance_to_top)->GetArena();
    if (message_arena != submessage_arena) {
      distance_to_top = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, distance_to_top, submessage_arena);
    }
    
  } else {
    
  }
  distance_to_top_ = distance_to_top;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_top)
}

// .google.protobuf.Int64Value distance_to_ground = 6 [(.sensoris.protobuf.types.base.exponent) = 0];
inline bool DataMessage_Envelope_VehicleDimensions::has_distance_to_ground() const {
  return this != internal_default_instance() && distance_to_ground_ != NULL;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::_internal_distance_to_ground() const {
  return *distance_to_ground_;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::distance_to_ground() const {
  const ::google::protobuf::Int64Value* p = distance_to_ground_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_ground)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::release_distance_to_ground() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_ground)
  
  ::google::protobuf::Int64Value* temp = distance_to_ground_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  distance_to_ground_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::unsafe_arena_release_distance_to_ground() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_ground)
  
  ::google::protobuf::Int64Value* temp = distance_to_ground_;
  distance_to_ground_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::mutable_distance_to_ground() {
  
  if (distance_to_ground_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    distance_to_ground_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_ground)
  return distance_to_ground_;
}
inline void DataMessage_Envelope_VehicleDimensions::set_allocated_distance_to_ground(::google::protobuf::Int64Value* distance_to_ground) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(distance_to_ground_);
  }
  if (distance_to_ground) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(distance_to_ground)->GetArena();
    if (message_arena != submessage_arena) {
      distance_to_ground = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, distance_to_ground, submessage_arena);
    }
    
  } else {
    
  }
  distance_to_ground_ = distance_to_ground;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_ground)
}

// -------------------------------------------------------------------

// DataMessage_Envelope_MapIdentification_MapVersion

// .google.protobuf.StringValue source = 1;
inline bool DataMessage_Envelope_MapIdentification_MapVersion::has_source() const {
  return this != internal_default_instance() && source_ != NULL;
}
inline const ::google::protobuf::StringValue& DataMessage_Envelope_MapIdentification_MapVersion::_internal_source() const {
  return *source_;
}
inline const ::google::protobuf::StringValue& DataMessage_Envelope_MapIdentification_MapVersion::source() const {
  const ::google::protobuf::StringValue* p = source_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.source)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_MapIdentification_MapVersion::release_source() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.source)
  
  ::google::protobuf::StringValue* temp = source_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  source_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_MapIdentification_MapVersion::unsafe_arena_release_source() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.source)
  
  ::google::protobuf::StringValue* temp = source_;
  source_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_MapIdentification_MapVersion::mutable_source() {
  
  if (source_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    source_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.source)
  return source_;
}
inline void DataMessage_Envelope_MapIdentification_MapVersion::set_allocated_source(::google::protobuf::StringValue* source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_);
  }
  if (source) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(source)->GetArena();
    if (message_arena != submessage_arena) {
      source = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source, submessage_arena);
    }
    
  } else {
    
  }
  source_ = source;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.source)
}

// .sensoris.protobuf.types.base.Version version = 2;
inline bool DataMessage_Envelope_MapIdentification_MapVersion::has_version() const {
  return this != internal_default_instance() && version_ != NULL;
}
inline const ::sensoris::protobuf::types::base::Version& DataMessage_Envelope_MapIdentification_MapVersion::_internal_version() const {
  return *version_;
}
inline const ::sensoris::protobuf::types::base::Version& DataMessage_Envelope_MapIdentification_MapVersion::version() const {
  const ::sensoris::protobuf::types::base::Version* p = version_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.version)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::types::base::Version*>(
      &::sensoris::protobuf::types::base::_Version_default_instance_);
}
inline ::sensoris::protobuf::types::base::Version* DataMessage_Envelope_MapIdentification_MapVersion::release_version() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.version)
  
  ::sensoris::protobuf::types::base::Version* temp = version_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  version_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Version* DataMessage_Envelope_MapIdentification_MapVersion::unsafe_arena_release_version() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.version)
  
  ::sensoris::protobuf::types::base::Version* temp = version_;
  version_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Version* DataMessage_Envelope_MapIdentification_MapVersion::mutable_version() {
  
  if (version_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::Version>(GetArenaNoVirtual());
    version_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.version)
  return version_;
}
inline void DataMessage_Envelope_MapIdentification_MapVersion::set_allocated_version(::sensoris::protobuf::types::base::Version* version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(version_);
  }
  if (version) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(version)->GetArena();
    if (message_arena != submessage_arena) {
      version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, version, submessage_arena);
    }
    
  } else {
    
  }
  version_ = version;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.version)
}

// .sensoris.protobuf.types.base.Timestamp extraction_timestamp = 3;
inline bool DataMessage_Envelope_MapIdentification_MapVersion::has_extraction_timestamp() const {
  return this != internal_default_instance() && extraction_timestamp_ != NULL;
}
inline const ::sensoris::protobuf::types::base::Timestamp& DataMessage_Envelope_MapIdentification_MapVersion::_internal_extraction_timestamp() const {
  return *extraction_timestamp_;
}
inline const ::sensoris::protobuf::types::base::Timestamp& DataMessage_Envelope_MapIdentification_MapVersion::extraction_timestamp() const {
  const ::sensoris::protobuf::types::base::Timestamp* p = extraction_timestamp_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.extraction_timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::types::base::Timestamp*>(
      &::sensoris::protobuf::types::base::_Timestamp_default_instance_);
}
inline ::sensoris::protobuf::types::base::Timestamp* DataMessage_Envelope_MapIdentification_MapVersion::release_extraction_timestamp() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.extraction_timestamp)
  
  ::sensoris::protobuf::types::base::Timestamp* temp = extraction_timestamp_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  extraction_timestamp_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Timestamp* DataMessage_Envelope_MapIdentification_MapVersion::unsafe_arena_release_extraction_timestamp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.extraction_timestamp)
  
  ::sensoris::protobuf::types::base::Timestamp* temp = extraction_timestamp_;
  extraction_timestamp_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Timestamp* DataMessage_Envelope_MapIdentification_MapVersion::mutable_extraction_timestamp() {
  
  if (extraction_timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::Timestamp>(GetArenaNoVirtual());
    extraction_timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.extraction_timestamp)
  return extraction_timestamp_;
}
inline void DataMessage_Envelope_MapIdentification_MapVersion::set_allocated_extraction_timestamp(::sensoris::protobuf::types::base::Timestamp* extraction_timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(extraction_timestamp_);
  }
  if (extraction_timestamp) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(extraction_timestamp)->GetArena();
    if (message_arena != submessage_arena) {
      extraction_timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, extraction_timestamp, submessage_arena);
    }
    
  } else {
    
  }
  extraction_timestamp_ = extraction_timestamp;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.extraction_timestamp)
}

// -------------------------------------------------------------------

// DataMessage_Envelope_MapIdentification

// .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion provider_version = 1;
inline bool DataMessage_Envelope_MapIdentification::has_provider_version() const {
  return this != internal_default_instance() && provider_version_ != NULL;
}
inline void DataMessage_Envelope_MapIdentification::clear_provider_version() {
  if (GetArenaNoVirtual() == NULL && provider_version_ != NULL) {
    delete provider_version_;
  }
  provider_version_ = NULL;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion& DataMessage_Envelope_MapIdentification::_internal_provider_version() const {
  return *provider_version_;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion& DataMessage_Envelope_MapIdentification::provider_version() const {
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* p = provider_version_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.provider_version)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion*>(
      &::sensoris::protobuf::messages::data::_DataMessage_Envelope_MapIdentification_MapVersion_default_instance_);
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* DataMessage_Envelope_MapIdentification::release_provider_version() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.provider_version)
  
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* temp = provider_version_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  provider_version_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* DataMessage_Envelope_MapIdentification::unsafe_arena_release_provider_version() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.provider_version)
  
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* temp = provider_version_;
  provider_version_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* DataMessage_Envelope_MapIdentification::mutable_provider_version() {
  
  if (provider_version_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion>(GetArenaNoVirtual());
    provider_version_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.provider_version)
  return provider_version_;
}
inline void DataMessage_Envelope_MapIdentification::set_allocated_provider_version(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* provider_version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete provider_version_;
  }
  if (provider_version) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(provider_version);
    if (message_arena != submessage_arena) {
      provider_version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, provider_version, submessage_arena);
    }
    
  } else {
    
  }
  provider_version_ = provider_version;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.provider_version)
}

// .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion compiler_version = 2;
inline bool DataMessage_Envelope_MapIdentification::has_compiler_version() const {
  return this != internal_default_instance() && compiler_version_ != NULL;
}
inline void DataMessage_Envelope_MapIdentification::clear_compiler_version() {
  if (GetArenaNoVirtual() == NULL && compiler_version_ != NULL) {
    delete compiler_version_;
  }
  compiler_version_ = NULL;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion& DataMessage_Envelope_MapIdentification::_internal_compiler_version() const {
  return *compiler_version_;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion& DataMessage_Envelope_MapIdentification::compiler_version() const {
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* p = compiler_version_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.compiler_version)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion*>(
      &::sensoris::protobuf::messages::data::_DataMessage_Envelope_MapIdentification_MapVersion_default_instance_);
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* DataMessage_Envelope_MapIdentification::release_compiler_version() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.compiler_version)
  
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* temp = compiler_version_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  compiler_version_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* DataMessage_Envelope_MapIdentification::unsafe_arena_release_compiler_version() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.compiler_version)
  
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* temp = compiler_version_;
  compiler_version_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* DataMessage_Envelope_MapIdentification::mutable_compiler_version() {
  
  if (compiler_version_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion>(GetArenaNoVirtual());
    compiler_version_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.compiler_version)
  return compiler_version_;
}
inline void DataMessage_Envelope_MapIdentification::set_allocated_compiler_version(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* compiler_version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete compiler_version_;
  }
  if (compiler_version) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(compiler_version);
    if (message_arena != submessage_arena) {
      compiler_version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, compiler_version, submessage_arena);
    }
    
  } else {
    
  }
  compiler_version_ = compiler_version;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.compiler_version)
}

// .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.Format format = 3;
inline void DataMessage_Envelope_MapIdentification::clear_format() {
  format_ = 0;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format DataMessage_Envelope_MapIdentification::format() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.format)
  return static_cast< ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format >(format_);
}
inline void DataMessage_Envelope_MapIdentification::set_format(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format value) {
  
  format_ = value;
  // @@protoc_insertion_point(field_set:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.format)
}

// -------------------------------------------------------------------

// DataMessage_Envelope

// .sensoris.protobuf.messages.data.DataMessage.Envelope.Ids ids = 1;
inline bool DataMessage_Envelope::has_ids() const {
  return this != internal_default_instance() && ids_ != NULL;
}
inline void DataMessage_Envelope::clear_ids() {
  if (GetArenaNoVirtual() == NULL && ids_ != NULL) {
    delete ids_;
  }
  ids_ = NULL;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids& DataMessage_Envelope::_internal_ids() const {
  return *ids_;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids& DataMessage_Envelope::ids() const {
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* p = ids_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.ids)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids*>(
      &::sensoris::protobuf::messages::data::_DataMessage_Envelope_Ids_default_instance_);
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* DataMessage_Envelope::release_ids() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.ids)
  
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* temp = ids_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  ids_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* DataMessage_Envelope::unsafe_arena_release_ids() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.ids)
  
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* temp = ids_;
  ids_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* DataMessage_Envelope::mutable_ids() {
  
  if (ids_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids>(GetArenaNoVirtual());
    ids_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.ids)
  return ids_;
}
inline void DataMessage_Envelope::set_allocated_ids(::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* ids) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ids_;
  }
  if (ids) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(ids);
    if (message_arena != submessage_arena) {
      ids = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ids, submessage_arena);
    }
    
  } else {
    
  }
  ids_ = ids;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.ids)
}

// repeated .sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride field_resolution_override = 3;
inline int DataMessage_Envelope::field_resolution_override_size() const {
  return field_resolution_override_.size();
}
inline void DataMessage_Envelope::clear_field_resolution_override() {
  field_resolution_override_.Clear();
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride* DataMessage_Envelope::mutable_field_resolution_override(int index) {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.field_resolution_override)
  return field_resolution_override_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride >*
DataMessage_Envelope::mutable_field_resolution_override() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.Envelope.field_resolution_override)
  return &field_resolution_override_;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride& DataMessage_Envelope::field_resolution_override(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.field_resolution_override)
  return field_resolution_override_.Get(index);
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride* DataMessage_Envelope::add_field_resolution_override() {
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.Envelope.field_resolution_override)
  return field_resolution_override_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride >&
DataMessage_Envelope::field_resolution_override() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.Envelope.field_resolution_override)
  return field_resolution_override_;
}

// .sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions vehicle_dimensions = 4;
inline bool DataMessage_Envelope::has_vehicle_dimensions() const {
  return this != internal_default_instance() && vehicle_dimensions_ != NULL;
}
inline void DataMessage_Envelope::clear_vehicle_dimensions() {
  if (GetArenaNoVirtual() == NULL && vehicle_dimensions_ != NULL) {
    delete vehicle_dimensions_;
  }
  vehicle_dimensions_ = NULL;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions& DataMessage_Envelope::_internal_vehicle_dimensions() const {
  return *vehicle_dimensions_;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions& DataMessage_Envelope::vehicle_dimensions() const {
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* p = vehicle_dimensions_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.vehicle_dimensions)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions*>(
      &::sensoris::protobuf::messages::data::_DataMessage_Envelope_VehicleDimensions_default_instance_);
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* DataMessage_Envelope::release_vehicle_dimensions() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.vehicle_dimensions)
  
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* temp = vehicle_dimensions_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  vehicle_dimensions_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* DataMessage_Envelope::unsafe_arena_release_vehicle_dimensions() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.vehicle_dimensions)
  
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* temp = vehicle_dimensions_;
  vehicle_dimensions_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* DataMessage_Envelope::mutable_vehicle_dimensions() {
  
  if (vehicle_dimensions_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions>(GetArenaNoVirtual());
    vehicle_dimensions_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.vehicle_dimensions)
  return vehicle_dimensions_;
}
inline void DataMessage_Envelope::set_allocated_vehicle_dimensions(::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* vehicle_dimensions) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vehicle_dimensions_;
  }
  if (vehicle_dimensions) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(vehicle_dimensions);
    if (message_arena != submessage_arena) {
      vehicle_dimensions = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehicle_dimensions, submessage_arena);
    }
    
  } else {
    
  }
  vehicle_dimensions_ = vehicle_dimensions;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.vehicle_dimensions)
}

// .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification map_identification = 5;
inline bool DataMessage_Envelope::has_map_identification() const {
  return this != internal_default_instance() && map_identification_ != NULL;
}
inline void DataMessage_Envelope::clear_map_identification() {
  if (GetArenaNoVirtual() == NULL && map_identification_ != NULL) {
    delete map_identification_;
  }
  map_identification_ = NULL;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification& DataMessage_Envelope::_internal_map_identification() const {
  return *map_identification_;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification& DataMessage_Envelope::map_identification() const {
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* p = map_identification_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.map_identification)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification*>(
      &::sensoris::protobuf::messages::data::_DataMessage_Envelope_MapIdentification_default_instance_);
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* DataMessage_Envelope::release_map_identification() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.map_identification)
  
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* temp = map_identification_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  map_identification_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* DataMessage_Envelope::unsafe_arena_release_map_identification() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Envelope.map_identification)
  
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* temp = map_identification_;
  map_identification_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* DataMessage_Envelope::mutable_map_identification() {
  
  if (map_identification_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification>(GetArenaNoVirtual());
    map_identification_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.map_identification)
  return map_identification_;
}
inline void DataMessage_Envelope::set_allocated_map_identification(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* map_identification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete map_identification_;
  }
  if (map_identification) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(map_identification);
    if (message_arena != submessage_arena) {
      map_identification = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, map_identification, submessage_arena);
    }
    
  } else {
    
  }
  map_identification_ = map_identification;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.map_identification)
}

// repeated .google.protobuf.Any extension = 15;
inline int DataMessage_Envelope::extension_size() const {
  return extension_.size();
}
inline ::google::protobuf::Any* DataMessage_Envelope::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
DataMessage_Envelope::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.Envelope.extension)
  return &extension_;
}
inline const ::google::protobuf::Any& DataMessage_Envelope::extension(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.extension)
  return extension_.Get(index);
}
inline ::google::protobuf::Any* DataMessage_Envelope::add_extension() {
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.Envelope.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
DataMessage_Envelope::extension() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.Envelope.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DataMessage_EventRelation

// repeated .google.protobuf.Int64Value from_id = 1;
inline int DataMessage_EventRelation::from_id_size() const {
  return from_id_.size();
}
inline ::google::protobuf::Int64Value* DataMessage_EventRelation::mutable_from_id(int index) {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.EventRelation.from_id)
  return from_id_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value >*
DataMessage_EventRelation::mutable_from_id() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.EventRelation.from_id)
  return &from_id_;
}
inline const ::google::protobuf::Int64Value& DataMessage_EventRelation::from_id(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.EventRelation.from_id)
  return from_id_.Get(index);
}
inline ::google::protobuf::Int64Value* DataMessage_EventRelation::add_from_id() {
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.EventRelation.from_id)
  return from_id_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value >&
DataMessage_EventRelation::from_id() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.EventRelation.from_id)
  return from_id_;
}

// .sensoris.protobuf.messages.data.DataMessage.EventRelation.Type type = 2;
inline void DataMessage_EventRelation::clear_type() {
  type_ = 0;
}
inline ::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type DataMessage_EventRelation::type() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.EventRelation.type)
  return static_cast< ::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type >(type_);
}
inline void DataMessage_EventRelation::set_type(::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:sensoris.protobuf.messages.data.DataMessage.EventRelation.type)
}

// repeated .google.protobuf.Int64Value to_id = 3;
inline int DataMessage_EventRelation::to_id_size() const {
  return to_id_.size();
}
inline ::google::protobuf::Int64Value* DataMessage_EventRelation::mutable_to_id(int index) {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.EventRelation.to_id)
  return to_id_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value >*
DataMessage_EventRelation::mutable_to_id() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.EventRelation.to_id)
  return &to_id_;
}
inline const ::google::protobuf::Int64Value& DataMessage_EventRelation::to_id(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.EventRelation.to_id)
  return to_id_.Get(index);
}
inline ::google::protobuf::Int64Value* DataMessage_EventRelation::add_to_id() {
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.EventRelation.to_id)
  return to_id_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value >&
DataMessage_EventRelation::to_id() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.EventRelation.to_id)
  return to_id_;
}

// repeated .google.protobuf.Any extension = 15;
inline int DataMessage_EventRelation::extension_size() const {
  return extension_.size();
}
inline ::google::protobuf::Any* DataMessage_EventRelation::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.EventRelation.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
DataMessage_EventRelation::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.EventRelation.extension)
  return &extension_;
}
inline const ::google::protobuf::Any& DataMessage_EventRelation::extension(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.EventRelation.extension)
  return extension_.Get(index);
}
inline ::google::protobuf::Any* DataMessage_EventRelation::add_extension() {
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.EventRelation.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
DataMessage_EventRelation::extension() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.EventRelation.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DataMessage_EventSource_EventEnvelopeIds

// repeated .google.protobuf.Int64Value id = 2;
inline int DataMessage_EventSource_EventEnvelopeIds::id_size() const {
  return id_.size();
}
inline ::google::protobuf::Int64Value* DataMessage_EventSource_EventEnvelopeIds::mutable_id(int index) {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds.id)
  return id_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value >*
DataMessage_EventSource_EventEnvelopeIds::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds.id)
  return &id_;
}
inline const ::google::protobuf::Int64Value& DataMessage_EventSource_EventEnvelopeIds::id(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds.id)
  return id_.Get(index);
}
inline ::google::protobuf::Int64Value* DataMessage_EventSource_EventEnvelopeIds::add_id() {
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds.id)
  return id_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value >&
DataMessage_EventSource_EventEnvelopeIds::id() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds.id)
  return id_;
}

// -------------------------------------------------------------------

// DataMessage_EventSource

// .sensoris.protobuf.types.source.Source source = 1;
inline bool DataMessage_EventSource::has_source() const {
  return this != internal_default_instance() && source_ != NULL;
}
inline const ::sensoris::protobuf::types::source::Source& DataMessage_EventSource::_internal_source() const {
  return *source_;
}
inline const ::sensoris::protobuf::types::source::Source& DataMessage_EventSource::source() const {
  const ::sensoris::protobuf::types::source::Source* p = source_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.EventSource.source)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::types::source::Source*>(
      &::sensoris::protobuf::types::source::_Source_default_instance_);
}
inline ::sensoris::protobuf::types::source::Source* DataMessage_EventSource::release_source() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.EventSource.source)
  
  ::sensoris::protobuf::types::source::Source* temp = source_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  source_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::source::Source* DataMessage_EventSource::unsafe_arena_release_source() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.EventSource.source)
  
  ::sensoris::protobuf::types::source::Source* temp = source_;
  source_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::source::Source* DataMessage_EventSource::mutable_source() {
  
  if (source_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::source::Source>(GetArenaNoVirtual());
    source_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.EventSource.source)
  return source_;
}
inline void DataMessage_EventSource::set_allocated_source(::sensoris::protobuf::types::source::Source* source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_);
  }
  if (source) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(source)->GetArena();
    if (message_arena != submessage_arena) {
      source = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source, submessage_arena);
    }
    
  } else {
    
  }
  source_ = source;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.EventSource.source)
}

// .sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds ids = 2;
inline bool DataMessage_EventSource::has_ids() const {
  return event_reference_case() == kIds;
}
inline void DataMessage_EventSource::set_has_ids() {
  _oneof_case_[0] = kIds;
}
inline void DataMessage_EventSource::clear_ids() {
  if (has_ids()) {
    if (GetArenaNoVirtual() == NULL) {
      delete event_reference_.ids_;
    }
    clear_has_event_reference();
  }
}
inline const ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds& DataMessage_EventSource::_internal_ids() const {
  return *event_reference_.ids_;
}
inline ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* DataMessage_EventSource::release_ids() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.EventSource.ids)
  if (has_ids()) {
    clear_has_event_reference();
      ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* temp = event_reference_.ids_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    event_reference_.ids_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds& DataMessage_EventSource::ids() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.EventSource.ids)
  return has_ids()
      ? *event_reference_.ids_
      : *reinterpret_cast< ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds*>(&::sensoris::protobuf::messages::data::_DataMessage_EventSource_EventEnvelopeIds_default_instance_);
}
inline ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* DataMessage_EventSource::unsafe_arena_release_ids() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.EventSource.ids)
  if (has_ids()) {
    clear_has_event_reference();
    ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* temp = event_reference_.ids_;
    event_reference_.ids_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void DataMessage_EventSource::unsafe_arena_set_allocated_ids(::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* ids) {
  clear_event_reference();
  if (ids) {
    set_has_ids();
    event_reference_.ids_ = ids;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.EventSource.ids)
}
inline ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* DataMessage_EventSource::mutable_ids() {
  if (!has_ids()) {
    clear_event_reference();
    set_has_ids();
    event_reference_.ids_ = CreateMaybeMessage< ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.EventSource.ids)
  return event_reference_.ids_;
}

// .sensoris.protobuf.messages.data.DataMessage.Paths paths = 3;
inline bool DataMessage_EventSource::has_paths() const {
  return event_reference_case() == kPaths;
}
inline void DataMessage_EventSource::set_has_paths() {
  _oneof_case_[0] = kPaths;
}
inline void DataMessage_EventSource::clear_paths() {
  if (has_paths()) {
    if (GetArenaNoVirtual() == NULL) {
      delete event_reference_.paths_;
    }
    clear_has_event_reference();
  }
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Paths& DataMessage_EventSource::_internal_paths() const {
  return *event_reference_.paths_;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Paths* DataMessage_EventSource::release_paths() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.EventSource.paths)
  if (has_paths()) {
    clear_has_event_reference();
      ::sensoris::protobuf::messages::data::DataMessage_Paths* temp = event_reference_.paths_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    event_reference_.paths_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Paths& DataMessage_EventSource::paths() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.EventSource.paths)
  return has_paths()
      ? *event_reference_.paths_
      : *reinterpret_cast< ::sensoris::protobuf::messages::data::DataMessage_Paths*>(&::sensoris::protobuf::messages::data::_DataMessage_Paths_default_instance_);
}
inline ::sensoris::protobuf::messages::data::DataMessage_Paths* DataMessage_EventSource::unsafe_arena_release_paths() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.EventSource.paths)
  if (has_paths()) {
    clear_has_event_reference();
    ::sensoris::protobuf::messages::data::DataMessage_Paths* temp = event_reference_.paths_;
    event_reference_.paths_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void DataMessage_EventSource::unsafe_arena_set_allocated_paths(::sensoris::protobuf::messages::data::DataMessage_Paths* paths) {
  clear_event_reference();
  if (paths) {
    set_has_paths();
    event_reference_.paths_ = paths;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.EventSource.paths)
}
inline ::sensoris::protobuf::messages::data::DataMessage_Paths* DataMessage_EventSource::mutable_paths() {
  if (!has_paths()) {
    clear_event_reference();
    set_has_paths();
    event_reference_.paths_ = CreateMaybeMessage< ::sensoris::protobuf::messages::data::DataMessage_Paths >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.EventSource.paths)
  return event_reference_.paths_;
}

// repeated .google.protobuf.Any extension = 15;
inline int DataMessage_EventSource::extension_size() const {
  return extension_.size();
}
inline ::google::protobuf::Any* DataMessage_EventSource::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.EventSource.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
DataMessage_EventSource::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.EventSource.extension)
  return &extension_;
}
inline const ::google::protobuf::Any& DataMessage_EventSource::extension(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.EventSource.extension)
  return extension_.Get(index);
}
inline ::google::protobuf::Any* DataMessage_EventSource::add_extension() {
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.EventSource.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
DataMessage_EventSource::extension() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.EventSource.extension)
  return extension_;
}

inline bool DataMessage_EventSource::has_event_reference() const {
  return event_reference_case() != EVENT_REFERENCE_NOT_SET;
}
inline void DataMessage_EventSource::clear_has_event_reference() {
  _oneof_case_[0] = EVENT_REFERENCE_NOT_SET;
}
inline DataMessage_EventSource::EventReferenceCase DataMessage_EventSource::event_reference_case() const {
  return DataMessage_EventSource::EventReferenceCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// DataMessage

// .sensoris.protobuf.messages.data.DataMessage.Envelope envelope = 1;
inline bool DataMessage::has_envelope() const {
  return this != internal_default_instance() && envelope_ != NULL;
}
inline void DataMessage::clear_envelope() {
  if (GetArenaNoVirtual() == NULL && envelope_ != NULL) {
    delete envelope_;
  }
  envelope_ = NULL;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope& DataMessage::_internal_envelope() const {
  return *envelope_;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope& DataMessage::envelope() const {
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope* p = envelope_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.envelope)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::messages::data::DataMessage_Envelope*>(
      &::sensoris::protobuf::messages::data::_DataMessage_Envelope_default_instance_);
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope* DataMessage::release_envelope() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.envelope)
  
  ::sensoris::protobuf::messages::data::DataMessage_Envelope* temp = envelope_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  envelope_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope* DataMessage::unsafe_arena_release_envelope() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.envelope)
  
  ::sensoris::protobuf::messages::data::DataMessage_Envelope* temp = envelope_;
  envelope_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope* DataMessage::mutable_envelope() {
  
  if (envelope_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Envelope>(GetArenaNoVirtual());
    envelope_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.envelope)
  return envelope_;
}
inline void DataMessage::set_allocated_envelope(::sensoris::protobuf::messages::data::DataMessage_Envelope* envelope) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete envelope_;
  }
  if (envelope) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(envelope);
    if (message_arena != submessage_arena) {
      envelope = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, envelope, submessage_arena);
    }
    
  } else {
    
  }
  envelope_ = envelope;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.envelope)
}

// repeated .sensoris.protobuf.messages.data.EventGroup event_group = 2;
inline int DataMessage::event_group_size() const {
  return event_group_.size();
}
inline void DataMessage::clear_event_group() {
  event_group_.Clear();
}
inline ::sensoris::protobuf::messages::data::EventGroup* DataMessage::mutable_event_group(int index) {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.event_group)
  return event_group_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::EventGroup >*
DataMessage::mutable_event_group() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.event_group)
  return &event_group_;
}
inline const ::sensoris::protobuf::messages::data::EventGroup& DataMessage::event_group(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.event_group)
  return event_group_.Get(index);
}
inline ::sensoris::protobuf::messages::data::EventGroup* DataMessage::add_event_group() {
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.event_group)
  return event_group_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::EventGroup >&
DataMessage::event_group() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.event_group)
  return event_group_;
}

// repeated .sensoris.protobuf.messages.data.DataMessage.EventRelation event_relation = 3;
inline int DataMessage::event_relation_size() const {
  return event_relation_.size();
}
inline void DataMessage::clear_event_relation() {
  event_relation_.Clear();
}
inline ::sensoris::protobuf::messages::data::DataMessage_EventRelation* DataMessage::mutable_event_relation(int index) {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.event_relation)
  return event_relation_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_EventRelation >*
DataMessage::mutable_event_relation() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.event_relation)
  return &event_relation_;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_EventRelation& DataMessage::event_relation(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.event_relation)
  return event_relation_.Get(index);
}
inline ::sensoris::protobuf::messages::data::DataMessage_EventRelation* DataMessage::add_event_relation() {
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.event_relation)
  return event_relation_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_EventRelation >&
DataMessage::event_relation() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.event_relation)
  return event_relation_;
}

// repeated .sensoris.protobuf.messages.data.DataMessage.EventSource event_source = 4;
inline int DataMessage::event_source_size() const {
  return event_source_.size();
}
inline void DataMessage::clear_event_source() {
  event_source_.Clear();
}
inline ::sensoris::protobuf::messages::data::DataMessage_EventSource* DataMessage::mutable_event_source(int index) {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.event_source)
  return event_source_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_EventSource >*
DataMessage::mutable_event_source() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.event_source)
  return &event_source_;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_EventSource& DataMessage::event_source(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.event_source)
  return event_source_.Get(index);
}
inline ::sensoris::protobuf::messages::data::DataMessage_EventSource* DataMessage::add_event_source() {
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.event_source)
  return event_source_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_EventSource >&
DataMessage::event_source() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.event_source)
  return event_source_;
}

// -------------------------------------------------------------------

// DataMessages_Envelope

// .sensoris.protobuf.types.base.Version version = 1;
inline bool DataMessages_Envelope::has_version() const {
  return this != internal_default_instance() && version_ != NULL;
}
inline const ::sensoris::protobuf::types::base::Version& DataMessages_Envelope::_internal_version() const {
  return *version_;
}
inline const ::sensoris::protobuf::types::base::Version& DataMessages_Envelope::version() const {
  const ::sensoris::protobuf::types::base::Version* p = version_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessages.Envelope.version)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::types::base::Version*>(
      &::sensoris::protobuf::types::base::_Version_default_instance_);
}
inline ::sensoris::protobuf::types::base::Version* DataMessages_Envelope::release_version() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessages.Envelope.version)
  
  ::sensoris::protobuf::types::base::Version* temp = version_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  version_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Version* DataMessages_Envelope::unsafe_arena_release_version() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessages.Envelope.version)
  
  ::sensoris::protobuf::types::base::Version* temp = version_;
  version_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::types::base::Version* DataMessages_Envelope::mutable_version() {
  
  if (version_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::Version>(GetArenaNoVirtual());
    version_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessages.Envelope.version)
  return version_;
}
inline void DataMessages_Envelope::set_allocated_version(::sensoris::protobuf::types::base::Version* version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(version_);
  }
  if (version) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(version)->GetArena();
    if (message_arena != submessage_arena) {
      version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, version, submessage_arena);
    }
    
  } else {
    
  }
  version_ = version;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessages.Envelope.version)
}

// repeated .sensoris.protobuf.types.base.Entity submitter = 2;
inline int DataMessages_Envelope::submitter_size() const {
  return submitter_.size();
}
inline ::sensoris::protobuf::types::base::Entity* DataMessages_Envelope::mutable_submitter(int index) {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessages.Envelope.submitter)
  return submitter_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::Entity >*
DataMessages_Envelope::mutable_submitter() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessages.Envelope.submitter)
  return &submitter_;
}
inline const ::sensoris::protobuf::types::base::Entity& DataMessages_Envelope::submitter(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessages.Envelope.submitter)
  return submitter_.Get(index);
}
inline ::sensoris::protobuf::types::base::Entity* DataMessages_Envelope::add_submitter() {
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessages.Envelope.submitter)
  return submitter_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::Entity >&
DataMessages_Envelope::submitter() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessages.Envelope.submitter)
  return submitter_;
}

// repeated .google.protobuf.Any extension = 15;
inline int DataMessages_Envelope::extension_size() const {
  return extension_.size();
}
inline ::google::protobuf::Any* DataMessages_Envelope::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessages.Envelope.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
DataMessages_Envelope::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessages.Envelope.extension)
  return &extension_;
}
inline const ::google::protobuf::Any& DataMessages_Envelope::extension(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessages.Envelope.extension)
  return extension_.Get(index);
}
inline ::google::protobuf::Any* DataMessages_Envelope::add_extension() {
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessages.Envelope.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
DataMessages_Envelope::extension() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessages.Envelope.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DataMessages

// .sensoris.protobuf.messages.data.DataMessages.Envelope envelope = 1;
inline bool DataMessages::has_envelope() const {
  return this != internal_default_instance() && envelope_ != NULL;
}
inline void DataMessages::clear_envelope() {
  if (GetArenaNoVirtual() == NULL && envelope_ != NULL) {
    delete envelope_;
  }
  envelope_ = NULL;
}
inline const ::sensoris::protobuf::messages::data::DataMessages_Envelope& DataMessages::_internal_envelope() const {
  return *envelope_;
}
inline const ::sensoris::protobuf::messages::data::DataMessages_Envelope& DataMessages::envelope() const {
  const ::sensoris::protobuf::messages::data::DataMessages_Envelope* p = envelope_;
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessages.envelope)
  return p != NULL ? *p : *reinterpret_cast<const ::sensoris::protobuf::messages::data::DataMessages_Envelope*>(
      &::sensoris::protobuf::messages::data::_DataMessages_Envelope_default_instance_);
}
inline ::sensoris::protobuf::messages::data::DataMessages_Envelope* DataMessages::release_envelope() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessages.envelope)
  
  ::sensoris::protobuf::messages::data::DataMessages_Envelope* temp = envelope_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  envelope_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessages_Envelope* DataMessages::unsafe_arena_release_envelope() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessages.envelope)
  
  ::sensoris::protobuf::messages::data::DataMessages_Envelope* temp = envelope_;
  envelope_ = NULL;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessages_Envelope* DataMessages::mutable_envelope() {
  
  if (envelope_ == NULL) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessages_Envelope>(GetArenaNoVirtual());
    envelope_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessages.envelope)
  return envelope_;
}
inline void DataMessages::set_allocated_envelope(::sensoris::protobuf::messages::data::DataMessages_Envelope* envelope) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete envelope_;
  }
  if (envelope) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(envelope);
    if (message_arena != submessage_arena) {
      envelope = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, envelope, submessage_arena);
    }
    
  } else {
    
  }
  envelope_ = envelope;
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessages.envelope)
}

// repeated .sensoris.protobuf.messages.data.DataMessage data_message = 2;
inline int DataMessages::data_message_size() const {
  return data_message_.size();
}
inline void DataMessages::clear_data_message() {
  data_message_.Clear();
}
inline ::sensoris::protobuf::messages::data::DataMessage* DataMessages::mutable_data_message(int index) {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessages.data_message)
  return data_message_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage >*
DataMessages::mutable_data_message() {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessages.data_message)
  return &data_message_;
}
inline const ::sensoris::protobuf::messages::data::DataMessage& DataMessages::data_message(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessages.data_message)
  return data_message_.Get(index);
}
inline ::sensoris::protobuf::messages::data::DataMessage* DataMessages::add_data_message() {
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessages.data_message)
  return data_message_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage >&
DataMessages::data_message() const {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessages.data_message)
  return data_message_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace data
}  // namespace messages
}  // namespace protobuf
}  // namespace sensoris

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format>() {
  return ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format_descriptor();
}
template <> struct is_proto_enum< ::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type>() {
  return ::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_sensoris_2fprotobuf_2fmessages_2fdata_2eproto
