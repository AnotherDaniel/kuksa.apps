// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/categories/driving_behavior.proto

package org.sensoris.categories.drivingbehavior;

public interface ParkingStatusOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sensoris.protobuf.categories.drivingbehavior.ParkingStatus)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  boolean hasEnvelope();
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  org.sensoris.types.base.EventEnvelope getEnvelope();
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  org.sensoris.types.base.EventEnvelopeOrBuilder getEnvelopeOrBuilder();

  /**
   * <pre>
   * Status and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence status_and_confidence = 2;</code>
   */
  boolean hasStatusAndConfidence();
  /**
   * <pre>
   * Status and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence status_and_confidence = 2;</code>
   */
  org.sensoris.categories.drivingbehavior.ParkingStatus.StatusAndConfidence getStatusAndConfidence();
  /**
   * <pre>
   * Status and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence status_and_confidence = 2;</code>
   */
  org.sensoris.categories.drivingbehavior.ParkingStatus.StatusAndConfidenceOrBuilder getStatusAndConfidenceOrBuilder();

  /**
   * <pre>
   * Direction and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence direction_and_confidence = 3;</code>
   */
  boolean hasDirectionAndConfidence();
  /**
   * <pre>
   * Direction and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence direction_and_confidence = 3;</code>
   */
  org.sensoris.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence getDirectionAndConfidence();
  /**
   * <pre>
   * Direction and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence direction_and_confidence = 3;</code>
   */
  org.sensoris.categories.drivingbehavior.ParkingStatus.DirectionAndConfidenceOrBuilder getDirectionAndConfidenceOrBuilder();

  /**
   * <pre>
   * Duration of parking in minutes:
   * - for status PARK_IN the planned parking duration, e.g. based on time payed for parking.
   * - for status PARK_OUT the actual duration since the vehicle parked in the location.
   * &#64;unit Minute
   * &#64;resolution 1
   * &#64;range (0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy duration_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
   */
  boolean hasDurationAndAccuracy();
  /**
   * <pre>
   * Duration of parking in minutes:
   * - for status PARK_IN the planned parking duration, e.g. based on time payed for parking.
   * - for status PARK_OUT the actual duration since the vehicle parked in the location.
   * &#64;unit Minute
   * &#64;resolution 1
   * &#64;range (0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy duration_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
   */
  org.sensoris.types.base.Int64ValueAndAccuracy getDurationAndAccuracy();
  /**
   * <pre>
   * Duration of parking in minutes:
   * - for status PARK_IN the planned parking duration, e.g. based on time payed for parking.
   * - for status PARK_OUT the actual duration since the vehicle parked in the location.
   * &#64;unit Minute
   * &#64;resolution 1
   * &#64;range (0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy duration_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
   */
  org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getDurationAndAccuracyOrBuilder();
}
