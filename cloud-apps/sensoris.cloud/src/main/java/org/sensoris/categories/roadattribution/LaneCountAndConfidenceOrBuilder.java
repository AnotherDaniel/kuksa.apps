// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/categories/road_attribution.proto

package org.sensoris.categories.roadattribution;

public interface LaneCountAndConfidenceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  boolean hasEnvelope();
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  org.sensoris.types.base.EventEnvelope getEnvelope();
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  org.sensoris.types.base.EventEnvelopeOrBuilder getEnvelopeOrBuilder();

  /**
   * <pre>
   * Position and accuracy.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy position_and_accuracy = 2;</code>
   */
  boolean hasPositionAndAccuracy();
  /**
   * <pre>
   * Position and accuracy.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy position_and_accuracy = 2;</code>
   */
  org.sensoris.types.spatial.PositionAndAccuracy getPositionAndAccuracy();
  /**
   * <pre>
   * Position and accuracy.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy position_and_accuracy = 2;</code>
   */
  org.sensoris.types.spatial.PositionAndAccuracyOrBuilder getPositionAndAccuracyOrBuilder();

  /**
   * <pre>
   * Type.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.Type type = 3;</code>
   */
  int getTypeValue();
  /**
   * <pre>
   * Type.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence.Type type = 3;</code>
   */
  org.sensoris.categories.roadattribution.LaneCountAndConfidence.Type getType();

  /**
   * <pre>
   * Number of lanes and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.CountAndConfidence count_and_confidence = 4;</code>
   */
  boolean hasCountAndConfidence();
  /**
   * <pre>
   * Number of lanes and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.CountAndConfidence count_and_confidence = 4;</code>
   */
  org.sensoris.types.base.CountAndConfidence getCountAndConfidence();
  /**
   * <pre>
   * Number of lanes and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.CountAndConfidence count_and_confidence = 4;</code>
   */
  org.sensoris.types.base.CountAndConfidenceOrBuilder getCountAndConfidenceOrBuilder();
}
