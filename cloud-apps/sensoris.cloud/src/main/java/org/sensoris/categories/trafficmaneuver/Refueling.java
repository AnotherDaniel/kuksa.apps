// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/categories/traffic_maneuver.proto

package org.sensoris.categories.trafficmaneuver;

/**
 * <pre>
 * Refueling activity (maneuver).
 * </pre>
 *
 * Protobuf type {@code sensoris.protobuf.categories.trafficmaneuver.Refueling}
 */
public  final class Refueling extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:sensoris.protobuf.categories.trafficmaneuver.Refueling)
    RefuelingOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Refueling.newBuilder() to construct.
  private Refueling(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Refueling() {
    type_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Refueling(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            org.sensoris.types.base.EventEnvelope.Builder subBuilder = null;
            if (envelope_ != null) {
              subBuilder = envelope_.toBuilder();
            }
            envelope_ = input.readMessage(org.sensoris.types.base.EventEnvelope.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(envelope_);
              envelope_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            type_ = rawValue;
            break;
          }
          case 26: {
            org.sensoris.types.base.Int64ValueAndAccuracy.Builder subBuilder = null;
            if (quantityToFullAndAccuracy_ != null) {
              subBuilder = quantityToFullAndAccuracy_.toBuilder();
            }
            quantityToFullAndAccuracy_ = input.readMessage(org.sensoris.types.base.Int64ValueAndAccuracy.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(quantityToFullAndAccuracy_);
              quantityToFullAndAccuracy_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.sensoris.categories.trafficmaneuver.SensorisTrafficManeuverCategory.internal_static_sensoris_protobuf_categories_trafficmaneuver_Refueling_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.sensoris.categories.trafficmaneuver.SensorisTrafficManeuverCategory.internal_static_sensoris_protobuf_categories_trafficmaneuver_Refueling_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.sensoris.categories.trafficmaneuver.Refueling.class, org.sensoris.categories.trafficmaneuver.Refueling.Builder.class);
  }

  /**
   * <pre>
   * Type.
   * </pre>
   *
   * Protobuf enum {@code sensoris.protobuf.categories.trafficmaneuver.Refueling.Type}
   */
  public enum Type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unknown.
     * </pre>
     *
     * <code>UNKNOWN_TYPE = 0;</code>
     */
    UNKNOWN_TYPE(0),
    /**
     * <pre>
     * Petrol - PREMIUM (95 RON).
     * </pre>
     *
     * <code>PETROL_PREMIUM = 1;</code>
     */
    PETROL_PREMIUM(1),
    /**
     * <pre>
     * Petrol - SUPRT (97/98 RON)
     * </pre>
     *
     * <code>PETROL_SUPER = 2;</code>
     */
    PETROL_SUPER(2),
    /**
     * <pre>
     * Diesel.
     * </pre>
     *
     * <code>DIESEL = 3;</code>
     */
    DIESEL(3),
    /**
     * <pre>
     * Liquefied Petroleum Gas.
     * </pre>
     *
     * <code>LPG = 4;</code>
     */
    LPG(4),
    /**
     * <pre>
     * Compressed Natural Gas.
     * </pre>
     *
     * <code>CNG = 5;</code>
     */
    CNG(5),
    /**
     * <pre>
     * Bio Diesel.
     * </pre>
     *
     * <code>BIO_DIESEL = 6;</code>
     */
    BIO_DIESEL(6),
    /**
     * <pre>
     * Bio Ethanol.
     * </pre>
     *
     * <code>BIO_ETHANOL = 7;</code>
     */
    BIO_ETHANOL(7),
    /**
     * <pre>
     * Hydrogen for Fuel Cell.
     * </pre>
     *
     * <code>HYDROGEN = 8;</code>
     */
    HYDROGEN(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unknown.
     * </pre>
     *
     * <code>UNKNOWN_TYPE = 0;</code>
     */
    public static final int UNKNOWN_TYPE_VALUE = 0;
    /**
     * <pre>
     * Petrol - PREMIUM (95 RON).
     * </pre>
     *
     * <code>PETROL_PREMIUM = 1;</code>
     */
    public static final int PETROL_PREMIUM_VALUE = 1;
    /**
     * <pre>
     * Petrol - SUPRT (97/98 RON)
     * </pre>
     *
     * <code>PETROL_SUPER = 2;</code>
     */
    public static final int PETROL_SUPER_VALUE = 2;
    /**
     * <pre>
     * Diesel.
     * </pre>
     *
     * <code>DIESEL = 3;</code>
     */
    public static final int DIESEL_VALUE = 3;
    /**
     * <pre>
     * Liquefied Petroleum Gas.
     * </pre>
     *
     * <code>LPG = 4;</code>
     */
    public static final int LPG_VALUE = 4;
    /**
     * <pre>
     * Compressed Natural Gas.
     * </pre>
     *
     * <code>CNG = 5;</code>
     */
    public static final int CNG_VALUE = 5;
    /**
     * <pre>
     * Bio Diesel.
     * </pre>
     *
     * <code>BIO_DIESEL = 6;</code>
     */
    public static final int BIO_DIESEL_VALUE = 6;
    /**
     * <pre>
     * Bio Ethanol.
     * </pre>
     *
     * <code>BIO_ETHANOL = 7;</code>
     */
    public static final int BIO_ETHANOL_VALUE = 7;
    /**
     * <pre>
     * Hydrogen for Fuel Cell.
     * </pre>
     *
     * <code>HYDROGEN = 8;</code>
     */
    public static final int HYDROGEN_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Type valueOf(int value) {
      return forNumber(value);
    }

    public static Type forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_TYPE;
        case 1: return PETROL_PREMIUM;
        case 2: return PETROL_SUPER;
        case 3: return DIESEL;
        case 4: return LPG;
        case 5: return CNG;
        case 6: return BIO_DIESEL;
        case 7: return BIO_ETHANOL;
        case 8: return HYDROGEN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Type>() {
            public Type findValueByNumber(int number) {
              return Type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.sensoris.categories.trafficmaneuver.Refueling.getDescriptor().getEnumTypes().get(0);
    }

    private static final Type[] VALUES = values();

    public static Type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sensoris.protobuf.categories.trafficmaneuver.Refueling.Type)
  }

  public static final int ENVELOPE_FIELD_NUMBER = 1;
  private org.sensoris.types.base.EventEnvelope envelope_;
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  public boolean hasEnvelope() {
    return envelope_ != null;
  }
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  public org.sensoris.types.base.EventEnvelope getEnvelope() {
    return envelope_ == null ? org.sensoris.types.base.EventEnvelope.getDefaultInstance() : envelope_;
  }
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  public org.sensoris.types.base.EventEnvelopeOrBuilder getEnvelopeOrBuilder() {
    return getEnvelope();
  }

  public static final int TYPE_FIELD_NUMBER = 2;
  private int type_;
  /**
   * <pre>
   * Type.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.trafficmaneuver.Refueling.Type type = 2;</code>
   */
  public int getTypeValue() {
    return type_;
  }
  /**
   * <pre>
   * Type.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.trafficmaneuver.Refueling.Type type = 2;</code>
   */
  public org.sensoris.categories.trafficmaneuver.Refueling.Type getType() {
    org.sensoris.categories.trafficmaneuver.Refueling.Type result = org.sensoris.categories.trafficmaneuver.Refueling.Type.valueOf(type_);
    return result == null ? org.sensoris.categories.trafficmaneuver.Refueling.Type.UNRECOGNIZED : result;
  }

  public static final int QUANTITY_TO_FULL_AND_ACCURACY_FIELD_NUMBER = 3;
  private org.sensoris.types.base.Int64ValueAndAccuracy quantityToFullAndAccuracy_;
  /**
   * <pre>
   * The amount of fuel in litres (for fuel) / kilograms (for gas) and accuracy required to achieve a full tank.
   * &#64;unit Litre / KiloGram
   * &#64;resolution 0.1
   * &#64;range (0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy quantity_to_full_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
   */
  public boolean hasQuantityToFullAndAccuracy() {
    return quantityToFullAndAccuracy_ != null;
  }
  /**
   * <pre>
   * The amount of fuel in litres (for fuel) / kilograms (for gas) and accuracy required to achieve a full tank.
   * &#64;unit Litre / KiloGram
   * &#64;resolution 0.1
   * &#64;range (0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy quantity_to_full_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
   */
  public org.sensoris.types.base.Int64ValueAndAccuracy getQuantityToFullAndAccuracy() {
    return quantityToFullAndAccuracy_ == null ? org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : quantityToFullAndAccuracy_;
  }
  /**
   * <pre>
   * The amount of fuel in litres (for fuel) / kilograms (for gas) and accuracy required to achieve a full tank.
   * &#64;unit Litre / KiloGram
   * &#64;resolution 0.1
   * &#64;range (0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy quantity_to_full_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
   */
  public org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getQuantityToFullAndAccuracyOrBuilder() {
    return getQuantityToFullAndAccuracy();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (envelope_ != null) {
      output.writeMessage(1, getEnvelope());
    }
    if (type_ != org.sensoris.categories.trafficmaneuver.Refueling.Type.UNKNOWN_TYPE.getNumber()) {
      output.writeEnum(2, type_);
    }
    if (quantityToFullAndAccuracy_ != null) {
      output.writeMessage(3, getQuantityToFullAndAccuracy());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (envelope_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getEnvelope());
    }
    if (type_ != org.sensoris.categories.trafficmaneuver.Refueling.Type.UNKNOWN_TYPE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, type_);
    }
    if (quantityToFullAndAccuracy_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getQuantityToFullAndAccuracy());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.sensoris.categories.trafficmaneuver.Refueling)) {
      return super.equals(obj);
    }
    org.sensoris.categories.trafficmaneuver.Refueling other = (org.sensoris.categories.trafficmaneuver.Refueling) obj;

    boolean result = true;
    result = result && (hasEnvelope() == other.hasEnvelope());
    if (hasEnvelope()) {
      result = result && getEnvelope()
          .equals(other.getEnvelope());
    }
    result = result && type_ == other.type_;
    result = result && (hasQuantityToFullAndAccuracy() == other.hasQuantityToFullAndAccuracy());
    if (hasQuantityToFullAndAccuracy()) {
      result = result && getQuantityToFullAndAccuracy()
          .equals(other.getQuantityToFullAndAccuracy());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasEnvelope()) {
      hash = (37 * hash) + ENVELOPE_FIELD_NUMBER;
      hash = (53 * hash) + getEnvelope().hashCode();
    }
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    if (hasQuantityToFullAndAccuracy()) {
      hash = (37 * hash) + QUANTITY_TO_FULL_AND_ACCURACY_FIELD_NUMBER;
      hash = (53 * hash) + getQuantityToFullAndAccuracy().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.sensoris.categories.trafficmaneuver.Refueling parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.categories.trafficmaneuver.Refueling parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.categories.trafficmaneuver.Refueling parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.categories.trafficmaneuver.Refueling parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.categories.trafficmaneuver.Refueling parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.categories.trafficmaneuver.Refueling parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.categories.trafficmaneuver.Refueling parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.sensoris.categories.trafficmaneuver.Refueling parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.sensoris.categories.trafficmaneuver.Refueling parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.sensoris.categories.trafficmaneuver.Refueling parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.sensoris.categories.trafficmaneuver.Refueling parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.sensoris.categories.trafficmaneuver.Refueling parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.sensoris.categories.trafficmaneuver.Refueling prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Refueling activity (maneuver).
   * </pre>
   *
   * Protobuf type {@code sensoris.protobuf.categories.trafficmaneuver.Refueling}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:sensoris.protobuf.categories.trafficmaneuver.Refueling)
      org.sensoris.categories.trafficmaneuver.RefuelingOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sensoris.categories.trafficmaneuver.SensorisTrafficManeuverCategory.internal_static_sensoris_protobuf_categories_trafficmaneuver_Refueling_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sensoris.categories.trafficmaneuver.SensorisTrafficManeuverCategory.internal_static_sensoris_protobuf_categories_trafficmaneuver_Refueling_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.sensoris.categories.trafficmaneuver.Refueling.class, org.sensoris.categories.trafficmaneuver.Refueling.Builder.class);
    }

    // Construct using org.sensoris.categories.trafficmaneuver.Refueling.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (envelopeBuilder_ == null) {
        envelope_ = null;
      } else {
        envelope_ = null;
        envelopeBuilder_ = null;
      }
      type_ = 0;

      if (quantityToFullAndAccuracyBuilder_ == null) {
        quantityToFullAndAccuracy_ = null;
      } else {
        quantityToFullAndAccuracy_ = null;
        quantityToFullAndAccuracyBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.sensoris.categories.trafficmaneuver.SensorisTrafficManeuverCategory.internal_static_sensoris_protobuf_categories_trafficmaneuver_Refueling_descriptor;
    }

    public org.sensoris.categories.trafficmaneuver.Refueling getDefaultInstanceForType() {
      return org.sensoris.categories.trafficmaneuver.Refueling.getDefaultInstance();
    }

    public org.sensoris.categories.trafficmaneuver.Refueling build() {
      org.sensoris.categories.trafficmaneuver.Refueling result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.sensoris.categories.trafficmaneuver.Refueling buildPartial() {
      org.sensoris.categories.trafficmaneuver.Refueling result = new org.sensoris.categories.trafficmaneuver.Refueling(this);
      if (envelopeBuilder_ == null) {
        result.envelope_ = envelope_;
      } else {
        result.envelope_ = envelopeBuilder_.build();
      }
      result.type_ = type_;
      if (quantityToFullAndAccuracyBuilder_ == null) {
        result.quantityToFullAndAccuracy_ = quantityToFullAndAccuracy_;
      } else {
        result.quantityToFullAndAccuracy_ = quantityToFullAndAccuracyBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.sensoris.categories.trafficmaneuver.Refueling) {
        return mergeFrom((org.sensoris.categories.trafficmaneuver.Refueling)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.sensoris.categories.trafficmaneuver.Refueling other) {
      if (other == org.sensoris.categories.trafficmaneuver.Refueling.getDefaultInstance()) return this;
      if (other.hasEnvelope()) {
        mergeEnvelope(other.getEnvelope());
      }
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (other.hasQuantityToFullAndAccuracy()) {
        mergeQuantityToFullAndAccuracy(other.getQuantityToFullAndAccuracy());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.sensoris.categories.trafficmaneuver.Refueling parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.sensoris.categories.trafficmaneuver.Refueling) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private org.sensoris.types.base.EventEnvelope envelope_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.EventEnvelope, org.sensoris.types.base.EventEnvelope.Builder, org.sensoris.types.base.EventEnvelopeOrBuilder> envelopeBuilder_;
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public boolean hasEnvelope() {
      return envelopeBuilder_ != null || envelope_ != null;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public org.sensoris.types.base.EventEnvelope getEnvelope() {
      if (envelopeBuilder_ == null) {
        return envelope_ == null ? org.sensoris.types.base.EventEnvelope.getDefaultInstance() : envelope_;
      } else {
        return envelopeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public Builder setEnvelope(org.sensoris.types.base.EventEnvelope value) {
      if (envelopeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        envelope_ = value;
        onChanged();
      } else {
        envelopeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public Builder setEnvelope(
        org.sensoris.types.base.EventEnvelope.Builder builderForValue) {
      if (envelopeBuilder_ == null) {
        envelope_ = builderForValue.build();
        onChanged();
      } else {
        envelopeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public Builder mergeEnvelope(org.sensoris.types.base.EventEnvelope value) {
      if (envelopeBuilder_ == null) {
        if (envelope_ != null) {
          envelope_ =
            org.sensoris.types.base.EventEnvelope.newBuilder(envelope_).mergeFrom(value).buildPartial();
        } else {
          envelope_ = value;
        }
        onChanged();
      } else {
        envelopeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public Builder clearEnvelope() {
      if (envelopeBuilder_ == null) {
        envelope_ = null;
        onChanged();
      } else {
        envelope_ = null;
        envelopeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public org.sensoris.types.base.EventEnvelope.Builder getEnvelopeBuilder() {
      
      onChanged();
      return getEnvelopeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public org.sensoris.types.base.EventEnvelopeOrBuilder getEnvelopeOrBuilder() {
      if (envelopeBuilder_ != null) {
        return envelopeBuilder_.getMessageOrBuilder();
      } else {
        return envelope_ == null ?
            org.sensoris.types.base.EventEnvelope.getDefaultInstance() : envelope_;
      }
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.EventEnvelope, org.sensoris.types.base.EventEnvelope.Builder, org.sensoris.types.base.EventEnvelopeOrBuilder> 
        getEnvelopeFieldBuilder() {
      if (envelopeBuilder_ == null) {
        envelopeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.base.EventEnvelope, org.sensoris.types.base.EventEnvelope.Builder, org.sensoris.types.base.EventEnvelopeOrBuilder>(
                getEnvelope(),
                getParentForChildren(),
                isClean());
        envelope_ = null;
      }
      return envelopeBuilder_;
    }

    private int type_ = 0;
    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.trafficmaneuver.Refueling.Type type = 2;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.trafficmaneuver.Refueling.Type type = 2;</code>
     */
    public Builder setTypeValue(int value) {
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.trafficmaneuver.Refueling.Type type = 2;</code>
     */
    public org.sensoris.categories.trafficmaneuver.Refueling.Type getType() {
      org.sensoris.categories.trafficmaneuver.Refueling.Type result = org.sensoris.categories.trafficmaneuver.Refueling.Type.valueOf(type_);
      return result == null ? org.sensoris.categories.trafficmaneuver.Refueling.Type.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.trafficmaneuver.Refueling.Type type = 2;</code>
     */
    public Builder setType(org.sensoris.categories.trafficmaneuver.Refueling.Type value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.trafficmaneuver.Refueling.Type type = 2;</code>
     */
    public Builder clearType() {
      
      type_ = 0;
      onChanged();
      return this;
    }

    private org.sensoris.types.base.Int64ValueAndAccuracy quantityToFullAndAccuracy_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder> quantityToFullAndAccuracyBuilder_;
    /**
     * <pre>
     * The amount of fuel in litres (for fuel) / kilograms (for gas) and accuracy required to achieve a full tank.
     * &#64;unit Litre / KiloGram
     * &#64;resolution 0.1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy quantity_to_full_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
     */
    public boolean hasQuantityToFullAndAccuracy() {
      return quantityToFullAndAccuracyBuilder_ != null || quantityToFullAndAccuracy_ != null;
    }
    /**
     * <pre>
     * The amount of fuel in litres (for fuel) / kilograms (for gas) and accuracy required to achieve a full tank.
     * &#64;unit Litre / KiloGram
     * &#64;resolution 0.1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy quantity_to_full_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
     */
    public org.sensoris.types.base.Int64ValueAndAccuracy getQuantityToFullAndAccuracy() {
      if (quantityToFullAndAccuracyBuilder_ == null) {
        return quantityToFullAndAccuracy_ == null ? org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : quantityToFullAndAccuracy_;
      } else {
        return quantityToFullAndAccuracyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The amount of fuel in litres (for fuel) / kilograms (for gas) and accuracy required to achieve a full tank.
     * &#64;unit Litre / KiloGram
     * &#64;resolution 0.1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy quantity_to_full_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
     */
    public Builder setQuantityToFullAndAccuracy(org.sensoris.types.base.Int64ValueAndAccuracy value) {
      if (quantityToFullAndAccuracyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        quantityToFullAndAccuracy_ = value;
        onChanged();
      } else {
        quantityToFullAndAccuracyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The amount of fuel in litres (for fuel) / kilograms (for gas) and accuracy required to achieve a full tank.
     * &#64;unit Litre / KiloGram
     * &#64;resolution 0.1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy quantity_to_full_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
     */
    public Builder setQuantityToFullAndAccuracy(
        org.sensoris.types.base.Int64ValueAndAccuracy.Builder builderForValue) {
      if (quantityToFullAndAccuracyBuilder_ == null) {
        quantityToFullAndAccuracy_ = builderForValue.build();
        onChanged();
      } else {
        quantityToFullAndAccuracyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The amount of fuel in litres (for fuel) / kilograms (for gas) and accuracy required to achieve a full tank.
     * &#64;unit Litre / KiloGram
     * &#64;resolution 0.1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy quantity_to_full_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
     */
    public Builder mergeQuantityToFullAndAccuracy(org.sensoris.types.base.Int64ValueAndAccuracy value) {
      if (quantityToFullAndAccuracyBuilder_ == null) {
        if (quantityToFullAndAccuracy_ != null) {
          quantityToFullAndAccuracy_ =
            org.sensoris.types.base.Int64ValueAndAccuracy.newBuilder(quantityToFullAndAccuracy_).mergeFrom(value).buildPartial();
        } else {
          quantityToFullAndAccuracy_ = value;
        }
        onChanged();
      } else {
        quantityToFullAndAccuracyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The amount of fuel in litres (for fuel) / kilograms (for gas) and accuracy required to achieve a full tank.
     * &#64;unit Litre / KiloGram
     * &#64;resolution 0.1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy quantity_to_full_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
     */
    public Builder clearQuantityToFullAndAccuracy() {
      if (quantityToFullAndAccuracyBuilder_ == null) {
        quantityToFullAndAccuracy_ = null;
        onChanged();
      } else {
        quantityToFullAndAccuracy_ = null;
        quantityToFullAndAccuracyBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The amount of fuel in litres (for fuel) / kilograms (for gas) and accuracy required to achieve a full tank.
     * &#64;unit Litre / KiloGram
     * &#64;resolution 0.1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy quantity_to_full_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
     */
    public org.sensoris.types.base.Int64ValueAndAccuracy.Builder getQuantityToFullAndAccuracyBuilder() {
      
      onChanged();
      return getQuantityToFullAndAccuracyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The amount of fuel in litres (for fuel) / kilograms (for gas) and accuracy required to achieve a full tank.
     * &#64;unit Litre / KiloGram
     * &#64;resolution 0.1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy quantity_to_full_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
     */
    public org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getQuantityToFullAndAccuracyOrBuilder() {
      if (quantityToFullAndAccuracyBuilder_ != null) {
        return quantityToFullAndAccuracyBuilder_.getMessageOrBuilder();
      } else {
        return quantityToFullAndAccuracy_ == null ?
            org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : quantityToFullAndAccuracy_;
      }
    }
    /**
     * <pre>
     * The amount of fuel in litres (for fuel) / kilograms (for gas) and accuracy required to achieve a full tank.
     * &#64;unit Litre / KiloGram
     * &#64;resolution 0.1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy quantity_to_full_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder> 
        getQuantityToFullAndAccuracyFieldBuilder() {
      if (quantityToFullAndAccuracyBuilder_ == null) {
        quantityToFullAndAccuracyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder>(
                getQuantityToFullAndAccuracy(),
                getParentForChildren(),
                isClean());
        quantityToFullAndAccuracy_ = null;
      }
      return quantityToFullAndAccuracyBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:sensoris.protobuf.categories.trafficmaneuver.Refueling)
  }

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.trafficmaneuver.Refueling)
  private static final org.sensoris.categories.trafficmaneuver.Refueling DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.sensoris.categories.trafficmaneuver.Refueling();
  }

  public static org.sensoris.categories.trafficmaneuver.Refueling getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Refueling>
      PARSER = new com.google.protobuf.AbstractParser<Refueling>() {
    public Refueling parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Refueling(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Refueling> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Refueling> getParserForType() {
    return PARSER;
  }

  public org.sensoris.categories.trafficmaneuver.Refueling getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

