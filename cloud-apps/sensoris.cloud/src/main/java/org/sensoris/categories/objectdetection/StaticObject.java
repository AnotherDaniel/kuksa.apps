// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/categories/object_detection.proto

package org.sensoris.categories.objectdetection;

/**
 * <pre>
 * Detected object, which is not able to move.
 * Traffic signs can be related to a static object of the type POLE or SIGN_BRIDGE.
 * Traffic lights can be related to static object of type TRAFFIC_LIGHT_BODY.
 * &#64;relation 1 sensoris.protobuf.categories.objectdetection.StaticObject CONTAIN 1..* sensoris.protobuf.categories.trafficregulation.TrafficSign
 * &#64;relation 1 sensoris.protobuf.categories.objectdetection.StaticObject CONTAIN 1..* sensoris.protobuf.categories.intersectionattribution.TrafficSignal
 * &#64;relation 1 sensoris.protobuf.categories.objectdetection.StaticObject MAP_REFERENCE 1 sensoris.protobuf.categories.map.MapReference
 * &#64;relation 1 sensoris.protobuf.categories.brake.BrakeSystemsStatus TRIGGERED_BY 1..* sensoris.protobuf.categories.objectdetection.StaticObject
 * &#64;relation 1..* sensoris.protobuf.categories.intersectionattribution.TrafficSignal EQUAL 1 sensoris.protobuf.categories.objectdetection.StaticObject
 * &#64;relation 1 sensoris.protobuf.categories.trafficmaneuver.Maneuver TRIGGERED_BY 1..* sensoris.protobuf.categories.objectdetection.StaticObject
 * &#64;relation 1 sensoris.protobuf.categories.roadattribution.Lane CONTAINS 1..* sensoris.protobuf.categories.objectdetection.StaticObject
 * </pre>
 *
 * Protobuf type {@code sensoris.protobuf.categories.objectdetection.StaticObject}
 */
public  final class StaticObject extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:sensoris.protobuf.categories.objectdetection.StaticObject)
    StaticObjectOrBuilder {
private static final long serialVersionUID = 0L;
  // Use StaticObject.newBuilder() to construct.
  private StaticObject(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private StaticObject() {
    surfaceColorAndConfidence_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private StaticObject(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            org.sensoris.types.base.EventEnvelope.Builder subBuilder = null;
            if (envelope_ != null) {
              subBuilder = envelope_.toBuilder();
            }
            envelope_ = input.readMessage(org.sensoris.types.base.EventEnvelope.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(envelope_);
              envelope_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.google.protobuf.Int64Value.Builder subBuilder = null;
            if (objectId_ != null) {
              subBuilder = objectId_.toBuilder();
            }
            objectId_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(objectId_);
              objectId_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            org.sensoris.types.base.Confidence.Builder subBuilder = null;
            if (existenceConfidence_ != null) {
              subBuilder = existenceConfidence_.toBuilder();
            }
            existenceConfidence_ = input.readMessage(org.sensoris.types.base.Confidence.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(existenceConfidence_);
              existenceConfidence_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            org.sensoris.types.base.EventDetectionStatus.Builder subBuilder = null;
            if (detectionStatus_ != null) {
              subBuilder = detectionStatus_.toBuilder();
            }
            detectionStatus_ = input.readMessage(org.sensoris.types.base.EventDetectionStatus.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(detectionStatus_);
              detectionStatus_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.Builder subBuilder = null;
            if (typeAndConfidence_ != null) {
              subBuilder = typeAndConfidence_.toBuilder();
            }
            typeAndConfidence_ = input.readMessage(org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(typeAndConfidence_);
              typeAndConfidence_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            org.sensoris.types.spatial.RectangularBoxAndAccuracy.Builder subBuilder = null;
            if (geometryCase_ == 6) {
              subBuilder = ((org.sensoris.types.spatial.RectangularBoxAndAccuracy) geometry_).toBuilder();
            }
            geometry_ =
                input.readMessage(org.sensoris.types.spatial.RectangularBoxAndAccuracy.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.sensoris.types.spatial.RectangularBoxAndAccuracy) geometry_);
              geometry_ = subBuilder.buildPartial();
            }
            geometryCase_ = 6;
            break;
          }
          case 58: {
            org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.Builder subBuilder = null;
            if (geometryCase_ == 7) {
              subBuilder = ((org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy) geometry_).toBuilder();
            }
            geometry_ =
                input.readMessage(org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy) geometry_);
              geometry_ = subBuilder.buildPartial();
            }
            geometryCase_ = 7;
            break;
          }
          case 66: {
            org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Builder subBuilder = null;
            if (surfaceTypeAndConfidence_ != null) {
              subBuilder = surfaceTypeAndConfidence_.toBuilder();
            }
            surfaceTypeAndConfidence_ = input.readMessage(org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(surfaceTypeAndConfidence_);
              surfaceTypeAndConfidence_ = subBuilder.buildPartial();
            }

            break;
          }
          case 74: {
            org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Builder subBuilder = null;
            if (surfaceMaterialAndConfidence_ != null) {
              subBuilder = surfaceMaterialAndConfidence_.toBuilder();
            }
            surfaceMaterialAndConfidence_ = input.readMessage(org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(surfaceMaterialAndConfidence_);
              surfaceMaterialAndConfidence_ = subBuilder.buildPartial();
            }

            break;
          }
          case 82: {
            if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
              surfaceColorAndConfidence_ = new java.util.ArrayList<org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence>();
              mutable_bitField0_ |= 0x00000200;
            }
            surfaceColorAndConfidence_.add(
                input.readMessage(org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
        surfaceColorAndConfidence_ = java.util.Collections.unmodifiableList(surfaceColorAndConfidence_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.sensoris.categories.objectdetection.StaticObject.class, org.sensoris.categories.objectdetection.StaticObject.Builder.class);
  }

  public interface TypeAndConfidenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type type = 1;</code>
     */
    org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.Type getType();

    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    boolean hasConfidence();
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    org.sensoris.types.base.Confidence getConfidence();
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    org.sensoris.types.base.ConfidenceOrBuilder getConfidenceOrBuilder();
  }
  /**
   * <pre>
   * Type and confidence.
   * &#64;example Detected object is a bridge with 80 % confidence.
   * </pre>
   *
   * Protobuf type {@code sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence}
   */
  public  static final class TypeAndConfidence extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
      TypeAndConfidenceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TypeAndConfidence.newBuilder() to construct.
    private TypeAndConfidence(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TypeAndConfidence() {
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TypeAndConfidence(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              org.sensoris.types.base.Confidence.Builder subBuilder = null;
              if (confidence_ != null) {
                subBuilder = confidence_.toBuilder();
              }
              confidence_ = input.readMessage(org.sensoris.types.base.Confidence.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(confidence_);
                confidence_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_TypeAndConfidence_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_TypeAndConfidence_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.class, org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.Builder.class);
    }

    /**
     * <pre>
     * Type.
     * </pre>
     *
     * Protobuf enum {@code sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Unknown.
       * </pre>
       *
       * <code>UNKNOWN_TYPE = 0;</code>
       */
      UNKNOWN_TYPE(0),
      /**
       * <pre>
       * Bridge.
       * </pre>
       *
       * <code>BRIDGE = 1;</code>
       */
      BRIDGE(1),
      /**
       * <pre>
       * Tunnel.
       * </pre>
       *
       * <code>TUNNEL = 2;</code>
       */
      TUNNEL(2),
      /**
       * <pre>
       * Any pole.
       * </pre>
       *
       * <code>POLE = 3;</code>
       */
      POLE(3),
      /**
       * <pre>
       * Light pole.
       * </pre>
       *
       * <code>POLE_LIGHT = 4;</code>
       */
      POLE_LIGHT(4),
      /**
       * <pre>
       * Reflector pole.
       * </pre>
       *
       * <code>POLE_REFLECTOR = 5;</code>
       */
      POLE_REFLECTOR(5),
      /**
       * <pre>
       * Delineator pole.
       * </pre>
       *
       * <code>POLE_DELINEATOR = 6;</code>
       */
      POLE_DELINEATOR(6),
      /**
       * <pre>
       * Gantry pole.
       * </pre>
       *
       * <code>POLE_GANTRY = 7;</code>
       */
      POLE_GANTRY(7),
      /**
       * <pre>
       * Sign pole.
       * </pre>
       *
       * <code>POLE_SIGN = 8;</code>
       */
      POLE_SIGN(8),
      /**
       * <pre>
       * Guard rail pole.
       * </pre>
       *
       * <code>POLE_GUARD_RAIL = 9;</code>
       */
      POLE_GUARD_RAIL(9),
      /**
       * <pre>
       * Bar.
       * </pre>
       *
       * <code>BAR = 10;</code>
       */
      BAR(10),
      /**
       * <pre>
       * Tree.
       * </pre>
       *
       * <code>TREE = 11;</code>
       */
      TREE(11),
      /**
       * <pre>
       * Bollard.
       * </pre>
       *
       * <code>BOLLARD = 12;</code>
       */
      BOLLARD(12),
      /**
       * <pre>
       * Pylon in a construction zone.
       * </pre>
       *
       * <code>CONE = 13;</code>
       */
      CONE(13),
      /**
       * <pre>
       * Red/white striped element in a construction zone.
       * </pre>
       *
       * <code>BARREL = 14;</code>
       */
      BARREL(14),
      /**
       * <pre>
       * Wall.
       * </pre>
       *
       * <code>WALL = 15;</code>
       */
      WALL(15),
      /**
       * <pre>
       * Traffic island.
       * </pre>
       *
       * <code>TRAFFIC_ISLAND = 16;</code>
       */
      TRAFFIC_ISLAND(16),
      /**
       * <pre>
       * Speed bump.
       * </pre>
       *
       * <code>SPEED_BUMP = 17;</code>
       */
      SPEED_BUMP(17),
      /**
       * <pre>
       * Pot hole.
       * </pre>
       *
       * <code>POT_HOLE = 18;</code>
       */
      POT_HOLE(18),
      /**
       * <pre>
       * Manhole cover.
       * </pre>
       *
       * <code>MANHOLE_COVER = 19;</code>
       */
      MANHOLE_COVER(19),
      /**
       * <pre>
       * Closed manhole cover.
       * </pre>
       *
       * <code>MANHOLE_COVER_CLOSED = 20;</code>
       */
      MANHOLE_COVER_CLOSED(20),
      /**
       * <pre>
       * Open manhole cover.
       * </pre>
       *
       * <code>MANHOLE_COVER_OPEN = 21;</code>
       */
      MANHOLE_COVER_OPEN(21),
      /**
       * <pre>
       * Sign bridge.
       * Traffic signs can be related to the sign bridge with event relations.
       * </pre>
       *
       * <code>SIGN_BRIDGE = 22;</code>
       */
      SIGN_BRIDGE(22),
      /**
       * <pre>
       * Body of a traffic light.
       * Traffic lights can be related to the traffic light body with event relations.
       * </pre>
       *
       * <code>TRAFFIC_LIGHT_BODY = 23;</code>
       */
      TRAFFIC_LIGHT_BODY(23),
      /**
       * <pre>
       * Parking lot barrier.
       * </pre>
       *
       * <code>BARRIER_PARKING_LOT = 24;</code>
       */
      BARRIER_PARKING_LOT(24),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Unknown.
       * </pre>
       *
       * <code>UNKNOWN_TYPE = 0;</code>
       */
      public static final int UNKNOWN_TYPE_VALUE = 0;
      /**
       * <pre>
       * Bridge.
       * </pre>
       *
       * <code>BRIDGE = 1;</code>
       */
      public static final int BRIDGE_VALUE = 1;
      /**
       * <pre>
       * Tunnel.
       * </pre>
       *
       * <code>TUNNEL = 2;</code>
       */
      public static final int TUNNEL_VALUE = 2;
      /**
       * <pre>
       * Any pole.
       * </pre>
       *
       * <code>POLE = 3;</code>
       */
      public static final int POLE_VALUE = 3;
      /**
       * <pre>
       * Light pole.
       * </pre>
       *
       * <code>POLE_LIGHT = 4;</code>
       */
      public static final int POLE_LIGHT_VALUE = 4;
      /**
       * <pre>
       * Reflector pole.
       * </pre>
       *
       * <code>POLE_REFLECTOR = 5;</code>
       */
      public static final int POLE_REFLECTOR_VALUE = 5;
      /**
       * <pre>
       * Delineator pole.
       * </pre>
       *
       * <code>POLE_DELINEATOR = 6;</code>
       */
      public static final int POLE_DELINEATOR_VALUE = 6;
      /**
       * <pre>
       * Gantry pole.
       * </pre>
       *
       * <code>POLE_GANTRY = 7;</code>
       */
      public static final int POLE_GANTRY_VALUE = 7;
      /**
       * <pre>
       * Sign pole.
       * </pre>
       *
       * <code>POLE_SIGN = 8;</code>
       */
      public static final int POLE_SIGN_VALUE = 8;
      /**
       * <pre>
       * Guard rail pole.
       * </pre>
       *
       * <code>POLE_GUARD_RAIL = 9;</code>
       */
      public static final int POLE_GUARD_RAIL_VALUE = 9;
      /**
       * <pre>
       * Bar.
       * </pre>
       *
       * <code>BAR = 10;</code>
       */
      public static final int BAR_VALUE = 10;
      /**
       * <pre>
       * Tree.
       * </pre>
       *
       * <code>TREE = 11;</code>
       */
      public static final int TREE_VALUE = 11;
      /**
       * <pre>
       * Bollard.
       * </pre>
       *
       * <code>BOLLARD = 12;</code>
       */
      public static final int BOLLARD_VALUE = 12;
      /**
       * <pre>
       * Pylon in a construction zone.
       * </pre>
       *
       * <code>CONE = 13;</code>
       */
      public static final int CONE_VALUE = 13;
      /**
       * <pre>
       * Red/white striped element in a construction zone.
       * </pre>
       *
       * <code>BARREL = 14;</code>
       */
      public static final int BARREL_VALUE = 14;
      /**
       * <pre>
       * Wall.
       * </pre>
       *
       * <code>WALL = 15;</code>
       */
      public static final int WALL_VALUE = 15;
      /**
       * <pre>
       * Traffic island.
       * </pre>
       *
       * <code>TRAFFIC_ISLAND = 16;</code>
       */
      public static final int TRAFFIC_ISLAND_VALUE = 16;
      /**
       * <pre>
       * Speed bump.
       * </pre>
       *
       * <code>SPEED_BUMP = 17;</code>
       */
      public static final int SPEED_BUMP_VALUE = 17;
      /**
       * <pre>
       * Pot hole.
       * </pre>
       *
       * <code>POT_HOLE = 18;</code>
       */
      public static final int POT_HOLE_VALUE = 18;
      /**
       * <pre>
       * Manhole cover.
       * </pre>
       *
       * <code>MANHOLE_COVER = 19;</code>
       */
      public static final int MANHOLE_COVER_VALUE = 19;
      /**
       * <pre>
       * Closed manhole cover.
       * </pre>
       *
       * <code>MANHOLE_COVER_CLOSED = 20;</code>
       */
      public static final int MANHOLE_COVER_CLOSED_VALUE = 20;
      /**
       * <pre>
       * Open manhole cover.
       * </pre>
       *
       * <code>MANHOLE_COVER_OPEN = 21;</code>
       */
      public static final int MANHOLE_COVER_OPEN_VALUE = 21;
      /**
       * <pre>
       * Sign bridge.
       * Traffic signs can be related to the sign bridge with event relations.
       * </pre>
       *
       * <code>SIGN_BRIDGE = 22;</code>
       */
      public static final int SIGN_BRIDGE_VALUE = 22;
      /**
       * <pre>
       * Body of a traffic light.
       * Traffic lights can be related to the traffic light body with event relations.
       * </pre>
       *
       * <code>TRAFFIC_LIGHT_BODY = 23;</code>
       */
      public static final int TRAFFIC_LIGHT_BODY_VALUE = 23;
      /**
       * <pre>
       * Parking lot barrier.
       * </pre>
       *
       * <code>BARRIER_PARKING_LOT = 24;</code>
       */
      public static final int BARRIER_PARKING_LOT_VALUE = 24;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN_TYPE;
          case 1: return BRIDGE;
          case 2: return TUNNEL;
          case 3: return POLE;
          case 4: return POLE_LIGHT;
          case 5: return POLE_REFLECTOR;
          case 6: return POLE_DELINEATOR;
          case 7: return POLE_GANTRY;
          case 8: return POLE_SIGN;
          case 9: return POLE_GUARD_RAIL;
          case 10: return BAR;
          case 11: return TREE;
          case 12: return BOLLARD;
          case 13: return CONE;
          case 14: return BARREL;
          case 15: return WALL;
          case 16: return TRAFFIC_ISLAND;
          case 17: return SPEED_BUMP;
          case 18: return POT_HOLE;
          case 19: return MANHOLE_COVER;
          case 20: return MANHOLE_COVER_CLOSED;
          case 21: return MANHOLE_COVER_OPEN;
          case 22: return SIGN_BRIDGE;
          case 23: return TRAFFIC_LIGHT_BODY;
          case 24: return BARRIER_PARKING_LOT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type type = 1;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.Type getType() {
      @SuppressWarnings("deprecation")
      org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.Type result = org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.Type.valueOf(type_);
      return result == null ? org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.Type.UNRECOGNIZED : result;
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 2;
    private org.sensoris.types.base.Confidence confidence_;
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    public boolean hasConfidence() {
      return confidence_ != null;
    }
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    public org.sensoris.types.base.Confidence getConfidence() {
      return confidence_ == null ? org.sensoris.types.base.Confidence.getDefaultInstance() : confidence_;
    }
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    public org.sensoris.types.base.ConfidenceOrBuilder getConfidenceOrBuilder() {
      return getConfidence();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.Type.UNKNOWN_TYPE.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (confidence_ != null) {
        output.writeMessage(2, getConfidence());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.Type.UNKNOWN_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (confidence_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getConfidence());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence)) {
        return super.equals(obj);
      }
      org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence other = (org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && (hasConfidence() == other.hasConfidence());
      if (hasConfidence()) {
        result = result && getConfidence()
            .equals(other.getConfidence());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasConfidence()) {
        hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
        hash = (53 * hash) + getConfidence().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Type and confidence.
     * &#64;example Detected object is a bridge with 80 % confidence.
     * </pre>
     *
     * Protobuf type {@code sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
        org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_TypeAndConfidence_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_TypeAndConfidence_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.class, org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.Builder.class);
      }

      // Construct using org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (confidenceBuilder_ == null) {
          confidence_ = null;
        } else {
          confidence_ = null;
          confidenceBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_TypeAndConfidence_descriptor;
      }

      @java.lang.Override
      public org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence getDefaultInstanceForType() {
        return org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.getDefaultInstance();
      }

      @java.lang.Override
      public org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence build() {
        org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence buildPartial() {
        org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence result = new org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence(this);
        result.type_ = type_;
        if (confidenceBuilder_ == null) {
          result.confidence_ = confidence_;
        } else {
          result.confidence_ = confidenceBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence) {
          return mergeFrom((org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence other) {
        if (other == org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasConfidence()) {
          mergeConfidence(other.getConfidence());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * Type.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Type.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type type = 1;</code>
       */
      public org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.Type getType() {
        @SuppressWarnings("deprecation")
        org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.Type result = org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.Type.valueOf(type_);
        return result == null ? org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.Type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Type.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type type = 1;</code>
       */
      public Builder setType(org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private org.sensoris.types.base.Confidence confidence_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder> confidenceBuilder_;
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public boolean hasConfidence() {
        return confidenceBuilder_ != null || confidence_ != null;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public org.sensoris.types.base.Confidence getConfidence() {
        if (confidenceBuilder_ == null) {
          return confidence_ == null ? org.sensoris.types.base.Confidence.getDefaultInstance() : confidence_;
        } else {
          return confidenceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public Builder setConfidence(org.sensoris.types.base.Confidence value) {
        if (confidenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          confidence_ = value;
          onChanged();
        } else {
          confidenceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public Builder setConfidence(
          org.sensoris.types.base.Confidence.Builder builderForValue) {
        if (confidenceBuilder_ == null) {
          confidence_ = builderForValue.build();
          onChanged();
        } else {
          confidenceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public Builder mergeConfidence(org.sensoris.types.base.Confidence value) {
        if (confidenceBuilder_ == null) {
          if (confidence_ != null) {
            confidence_ =
              org.sensoris.types.base.Confidence.newBuilder(confidence_).mergeFrom(value).buildPartial();
          } else {
            confidence_ = value;
          }
          onChanged();
        } else {
          confidenceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public Builder clearConfidence() {
        if (confidenceBuilder_ == null) {
          confidence_ = null;
          onChanged();
        } else {
          confidence_ = null;
          confidenceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public org.sensoris.types.base.Confidence.Builder getConfidenceBuilder() {
        
        onChanged();
        return getConfidenceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public org.sensoris.types.base.ConfidenceOrBuilder getConfidenceOrBuilder() {
        if (confidenceBuilder_ != null) {
          return confidenceBuilder_.getMessageOrBuilder();
        } else {
          return confidence_ == null ?
              org.sensoris.types.base.Confidence.getDefaultInstance() : confidence_;
        }
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder> 
          getConfidenceFieldBuilder() {
        if (confidenceBuilder_ == null) {
          confidenceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder>(
                  getConfidence(),
                  getParentForChildren(),
                  isClean());
          confidence_ = null;
        }
        return confidenceBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
    }

    // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
    private static final org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence();
    }

    public static org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TypeAndConfidence>
        PARSER = new com.google.protobuf.AbstractParser<TypeAndConfidence>() {
      @java.lang.Override
      public TypeAndConfidence parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TypeAndConfidence(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TypeAndConfidence> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TypeAndConfidence> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConeAndAccuracyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Lower position and accuracy.
     * The lower position is closer to the ground than the upper position.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;</code>
     */
    boolean hasLowerPositionAndAccuracy();
    /**
     * <pre>
     * Lower position and accuracy.
     * The lower position is closer to the ground than the upper position.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;</code>
     */
    org.sensoris.types.spatial.PositionAndAccuracy getLowerPositionAndAccuracy();
    /**
     * <pre>
     * Lower position and accuracy.
     * The lower position is closer to the ground than the upper position.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;</code>
     */
    org.sensoris.types.spatial.PositionAndAccuracyOrBuilder getLowerPositionAndAccuracyOrBuilder();

    /**
     * <pre>
     * Upper position and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;</code>
     */
    boolean hasUpperPositionAndAccuracy();
    /**
     * <pre>
     * Upper position and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;</code>
     */
    org.sensoris.types.spatial.PositionAndAccuracy getUpperPositionAndAccuracy();
    /**
     * <pre>
     * Upper position and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;</code>
     */
    org.sensoris.types.spatial.PositionAndAccuracyOrBuilder getUpperPositionAndAccuracyOrBuilder();

    /**
     * <pre>
     * Lower diameter and accuracy at lower position and accuracy.
     * &#64;unit MilliMeter
     * &#64;resolution 1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    boolean hasLowerDiameterAndAccuracy();
    /**
     * <pre>
     * Lower diameter and accuracy at lower position and accuracy.
     * &#64;unit MilliMeter
     * &#64;resolution 1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    org.sensoris.types.base.Int64ValueAndAccuracy getLowerDiameterAndAccuracy();
    /**
     * <pre>
     * Lower diameter and accuracy at lower position and accuracy.
     * &#64;unit MilliMeter
     * &#64;resolution 1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getLowerDiameterAndAccuracyOrBuilder();

    /**
     * <pre>
     * Upper diameter and accuracy at upper position and accuracy.
     * &#64;unit MilliMeter
     * &#64;resolution 1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    boolean hasUpperDiameterAndAccuracy();
    /**
     * <pre>
     * Upper diameter and accuracy at upper position and accuracy.
     * &#64;unit MilliMeter
     * &#64;resolution 1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    org.sensoris.types.base.Int64ValueAndAccuracy getUpperDiameterAndAccuracy();
    /**
     * <pre>
     * Upper diameter and accuracy at upper position and accuracy.
     * &#64;unit MilliMeter
     * &#64;resolution 1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getUpperDiameterAndAccuracyOrBuilder();

    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    java.util.List<com.google.protobuf.Any> 
        getExtensionList();
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    com.google.protobuf.Any getExtension(int index);
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    int getExtensionCount();
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
        getExtensionOrBuilderList();
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    com.google.protobuf.AnyOrBuilder getExtensionOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Cone shaped circular geometry defined by a lower and upper position and a lower and upper diameter.
   * </pre>
   *
   * Protobuf type {@code sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy}
   */
  public  static final class ConeAndAccuracy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
      ConeAndAccuracyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConeAndAccuracy.newBuilder() to construct.
    private ConeAndAccuracy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConeAndAccuracy() {
      extension_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConeAndAccuracy(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.sensoris.types.spatial.PositionAndAccuracy.Builder subBuilder = null;
              if (lowerPositionAndAccuracy_ != null) {
                subBuilder = lowerPositionAndAccuracy_.toBuilder();
              }
              lowerPositionAndAccuracy_ = input.readMessage(org.sensoris.types.spatial.PositionAndAccuracy.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lowerPositionAndAccuracy_);
                lowerPositionAndAccuracy_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.sensoris.types.spatial.PositionAndAccuracy.Builder subBuilder = null;
              if (upperPositionAndAccuracy_ != null) {
                subBuilder = upperPositionAndAccuracy_.toBuilder();
              }
              upperPositionAndAccuracy_ = input.readMessage(org.sensoris.types.spatial.PositionAndAccuracy.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(upperPositionAndAccuracy_);
                upperPositionAndAccuracy_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              org.sensoris.types.base.Int64ValueAndAccuracy.Builder subBuilder = null;
              if (lowerDiameterAndAccuracy_ != null) {
                subBuilder = lowerDiameterAndAccuracy_.toBuilder();
              }
              lowerDiameterAndAccuracy_ = input.readMessage(org.sensoris.types.base.Int64ValueAndAccuracy.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lowerDiameterAndAccuracy_);
                lowerDiameterAndAccuracy_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              org.sensoris.types.base.Int64ValueAndAccuracy.Builder subBuilder = null;
              if (upperDiameterAndAccuracy_ != null) {
                subBuilder = upperDiameterAndAccuracy_.toBuilder();
              }
              upperDiameterAndAccuracy_ = input.readMessage(org.sensoris.types.base.Int64ValueAndAccuracy.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(upperDiameterAndAccuracy_);
                upperDiameterAndAccuracy_ = subBuilder.buildPartial();
              }

              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                extension_ = new java.util.ArrayList<com.google.protobuf.Any>();
                mutable_bitField0_ |= 0x00000010;
              }
              extension_.add(
                  input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          extension_ = java.util.Collections.unmodifiableList(extension_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_ConeAndAccuracy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_ConeAndAccuracy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.class, org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.Builder.class);
    }

    private int bitField0_;
    public static final int LOWER_POSITION_AND_ACCURACY_FIELD_NUMBER = 1;
    private org.sensoris.types.spatial.PositionAndAccuracy lowerPositionAndAccuracy_;
    /**
     * <pre>
     * Lower position and accuracy.
     * The lower position is closer to the ground than the upper position.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;</code>
     */
    public boolean hasLowerPositionAndAccuracy() {
      return lowerPositionAndAccuracy_ != null;
    }
    /**
     * <pre>
     * Lower position and accuracy.
     * The lower position is closer to the ground than the upper position.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;</code>
     */
    public org.sensoris.types.spatial.PositionAndAccuracy getLowerPositionAndAccuracy() {
      return lowerPositionAndAccuracy_ == null ? org.sensoris.types.spatial.PositionAndAccuracy.getDefaultInstance() : lowerPositionAndAccuracy_;
    }
    /**
     * <pre>
     * Lower position and accuracy.
     * The lower position is closer to the ground than the upper position.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;</code>
     */
    public org.sensoris.types.spatial.PositionAndAccuracyOrBuilder getLowerPositionAndAccuracyOrBuilder() {
      return getLowerPositionAndAccuracy();
    }

    public static final int UPPER_POSITION_AND_ACCURACY_FIELD_NUMBER = 2;
    private org.sensoris.types.spatial.PositionAndAccuracy upperPositionAndAccuracy_;
    /**
     * <pre>
     * Upper position and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;</code>
     */
    public boolean hasUpperPositionAndAccuracy() {
      return upperPositionAndAccuracy_ != null;
    }
    /**
     * <pre>
     * Upper position and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;</code>
     */
    public org.sensoris.types.spatial.PositionAndAccuracy getUpperPositionAndAccuracy() {
      return upperPositionAndAccuracy_ == null ? org.sensoris.types.spatial.PositionAndAccuracy.getDefaultInstance() : upperPositionAndAccuracy_;
    }
    /**
     * <pre>
     * Upper position and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;</code>
     */
    public org.sensoris.types.spatial.PositionAndAccuracyOrBuilder getUpperPositionAndAccuracyOrBuilder() {
      return getUpperPositionAndAccuracy();
    }

    public static final int LOWER_DIAMETER_AND_ACCURACY_FIELD_NUMBER = 3;
    private org.sensoris.types.base.Int64ValueAndAccuracy lowerDiameterAndAccuracy_;
    /**
     * <pre>
     * Lower diameter and accuracy at lower position and accuracy.
     * &#64;unit MilliMeter
     * &#64;resolution 1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public boolean hasLowerDiameterAndAccuracy() {
      return lowerDiameterAndAccuracy_ != null;
    }
    /**
     * <pre>
     * Lower diameter and accuracy at lower position and accuracy.
     * &#64;unit MilliMeter
     * &#64;resolution 1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public org.sensoris.types.base.Int64ValueAndAccuracy getLowerDiameterAndAccuracy() {
      return lowerDiameterAndAccuracy_ == null ? org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : lowerDiameterAndAccuracy_;
    }
    /**
     * <pre>
     * Lower diameter and accuracy at lower position and accuracy.
     * &#64;unit MilliMeter
     * &#64;resolution 1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getLowerDiameterAndAccuracyOrBuilder() {
      return getLowerDiameterAndAccuracy();
    }

    public static final int UPPER_DIAMETER_AND_ACCURACY_FIELD_NUMBER = 4;
    private org.sensoris.types.base.Int64ValueAndAccuracy upperDiameterAndAccuracy_;
    /**
     * <pre>
     * Upper diameter and accuracy at upper position and accuracy.
     * &#64;unit MilliMeter
     * &#64;resolution 1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public boolean hasUpperDiameterAndAccuracy() {
      return upperDiameterAndAccuracy_ != null;
    }
    /**
     * <pre>
     * Upper diameter and accuracy at upper position and accuracy.
     * &#64;unit MilliMeter
     * &#64;resolution 1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public org.sensoris.types.base.Int64ValueAndAccuracy getUpperDiameterAndAccuracy() {
      return upperDiameterAndAccuracy_ == null ? org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : upperDiameterAndAccuracy_;
    }
    /**
     * <pre>
     * Upper diameter and accuracy at upper position and accuracy.
     * &#64;unit MilliMeter
     * &#64;resolution 1
     * &#64;range (0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getUpperDiameterAndAccuracyOrBuilder() {
      return getUpperDiameterAndAccuracy();
    }

    public static final int EXTENSION_FIELD_NUMBER = 15;
    private java.util.List<com.google.protobuf.Any> extension_;
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public java.util.List<com.google.protobuf.Any> getExtensionList() {
      return extension_;
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
        getExtensionOrBuilderList() {
      return extension_;
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public int getExtensionCount() {
      return extension_.size();
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public com.google.protobuf.Any getExtension(int index) {
      return extension_.get(index);
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public com.google.protobuf.AnyOrBuilder getExtensionOrBuilder(
        int index) {
      return extension_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (lowerPositionAndAccuracy_ != null) {
        output.writeMessage(1, getLowerPositionAndAccuracy());
      }
      if (upperPositionAndAccuracy_ != null) {
        output.writeMessage(2, getUpperPositionAndAccuracy());
      }
      if (lowerDiameterAndAccuracy_ != null) {
        output.writeMessage(3, getLowerDiameterAndAccuracy());
      }
      if (upperDiameterAndAccuracy_ != null) {
        output.writeMessage(4, getUpperDiameterAndAccuracy());
      }
      for (int i = 0; i < extension_.size(); i++) {
        output.writeMessage(15, extension_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (lowerPositionAndAccuracy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLowerPositionAndAccuracy());
      }
      if (upperPositionAndAccuracy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUpperPositionAndAccuracy());
      }
      if (lowerDiameterAndAccuracy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLowerDiameterAndAccuracy());
      }
      if (upperDiameterAndAccuracy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getUpperDiameterAndAccuracy());
      }
      for (int i = 0; i < extension_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, extension_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy)) {
        return super.equals(obj);
      }
      org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy other = (org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy) obj;

      boolean result = true;
      result = result && (hasLowerPositionAndAccuracy() == other.hasLowerPositionAndAccuracy());
      if (hasLowerPositionAndAccuracy()) {
        result = result && getLowerPositionAndAccuracy()
            .equals(other.getLowerPositionAndAccuracy());
      }
      result = result && (hasUpperPositionAndAccuracy() == other.hasUpperPositionAndAccuracy());
      if (hasUpperPositionAndAccuracy()) {
        result = result && getUpperPositionAndAccuracy()
            .equals(other.getUpperPositionAndAccuracy());
      }
      result = result && (hasLowerDiameterAndAccuracy() == other.hasLowerDiameterAndAccuracy());
      if (hasLowerDiameterAndAccuracy()) {
        result = result && getLowerDiameterAndAccuracy()
            .equals(other.getLowerDiameterAndAccuracy());
      }
      result = result && (hasUpperDiameterAndAccuracy() == other.hasUpperDiameterAndAccuracy());
      if (hasUpperDiameterAndAccuracy()) {
        result = result && getUpperDiameterAndAccuracy()
            .equals(other.getUpperDiameterAndAccuracy());
      }
      result = result && getExtensionList()
          .equals(other.getExtensionList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLowerPositionAndAccuracy()) {
        hash = (37 * hash) + LOWER_POSITION_AND_ACCURACY_FIELD_NUMBER;
        hash = (53 * hash) + getLowerPositionAndAccuracy().hashCode();
      }
      if (hasUpperPositionAndAccuracy()) {
        hash = (37 * hash) + UPPER_POSITION_AND_ACCURACY_FIELD_NUMBER;
        hash = (53 * hash) + getUpperPositionAndAccuracy().hashCode();
      }
      if (hasLowerDiameterAndAccuracy()) {
        hash = (37 * hash) + LOWER_DIAMETER_AND_ACCURACY_FIELD_NUMBER;
        hash = (53 * hash) + getLowerDiameterAndAccuracy().hashCode();
      }
      if (hasUpperDiameterAndAccuracy()) {
        hash = (37 * hash) + UPPER_DIAMETER_AND_ACCURACY_FIELD_NUMBER;
        hash = (53 * hash) + getUpperDiameterAndAccuracy().hashCode();
      }
      if (getExtensionCount() > 0) {
        hash = (37 * hash) + EXTENSION_FIELD_NUMBER;
        hash = (53 * hash) + getExtensionList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Cone shaped circular geometry defined by a lower and upper position and a lower and upper diameter.
     * </pre>
     *
     * Protobuf type {@code sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
        org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_ConeAndAccuracy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_ConeAndAccuracy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.class, org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.Builder.class);
      }

      // Construct using org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getExtensionFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (lowerPositionAndAccuracyBuilder_ == null) {
          lowerPositionAndAccuracy_ = null;
        } else {
          lowerPositionAndAccuracy_ = null;
          lowerPositionAndAccuracyBuilder_ = null;
        }
        if (upperPositionAndAccuracyBuilder_ == null) {
          upperPositionAndAccuracy_ = null;
        } else {
          upperPositionAndAccuracy_ = null;
          upperPositionAndAccuracyBuilder_ = null;
        }
        if (lowerDiameterAndAccuracyBuilder_ == null) {
          lowerDiameterAndAccuracy_ = null;
        } else {
          lowerDiameterAndAccuracy_ = null;
          lowerDiameterAndAccuracyBuilder_ = null;
        }
        if (upperDiameterAndAccuracyBuilder_ == null) {
          upperDiameterAndAccuracy_ = null;
        } else {
          upperDiameterAndAccuracy_ = null;
          upperDiameterAndAccuracyBuilder_ = null;
        }
        if (extensionBuilder_ == null) {
          extension_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          extensionBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_ConeAndAccuracy_descriptor;
      }

      @java.lang.Override
      public org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy getDefaultInstanceForType() {
        return org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.getDefaultInstance();
      }

      @java.lang.Override
      public org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy build() {
        org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy buildPartial() {
        org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy result = new org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (lowerPositionAndAccuracyBuilder_ == null) {
          result.lowerPositionAndAccuracy_ = lowerPositionAndAccuracy_;
        } else {
          result.lowerPositionAndAccuracy_ = lowerPositionAndAccuracyBuilder_.build();
        }
        if (upperPositionAndAccuracyBuilder_ == null) {
          result.upperPositionAndAccuracy_ = upperPositionAndAccuracy_;
        } else {
          result.upperPositionAndAccuracy_ = upperPositionAndAccuracyBuilder_.build();
        }
        if (lowerDiameterAndAccuracyBuilder_ == null) {
          result.lowerDiameterAndAccuracy_ = lowerDiameterAndAccuracy_;
        } else {
          result.lowerDiameterAndAccuracy_ = lowerDiameterAndAccuracyBuilder_.build();
        }
        if (upperDiameterAndAccuracyBuilder_ == null) {
          result.upperDiameterAndAccuracy_ = upperDiameterAndAccuracy_;
        } else {
          result.upperDiameterAndAccuracy_ = upperDiameterAndAccuracyBuilder_.build();
        }
        if (extensionBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            extension_ = java.util.Collections.unmodifiableList(extension_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.extension_ = extension_;
        } else {
          result.extension_ = extensionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy) {
          return mergeFrom((org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy other) {
        if (other == org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.getDefaultInstance()) return this;
        if (other.hasLowerPositionAndAccuracy()) {
          mergeLowerPositionAndAccuracy(other.getLowerPositionAndAccuracy());
        }
        if (other.hasUpperPositionAndAccuracy()) {
          mergeUpperPositionAndAccuracy(other.getUpperPositionAndAccuracy());
        }
        if (other.hasLowerDiameterAndAccuracy()) {
          mergeLowerDiameterAndAccuracy(other.getLowerDiameterAndAccuracy());
        }
        if (other.hasUpperDiameterAndAccuracy()) {
          mergeUpperDiameterAndAccuracy(other.getUpperDiameterAndAccuracy());
        }
        if (extensionBuilder_ == null) {
          if (!other.extension_.isEmpty()) {
            if (extension_.isEmpty()) {
              extension_ = other.extension_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureExtensionIsMutable();
              extension_.addAll(other.extension_);
            }
            onChanged();
          }
        } else {
          if (!other.extension_.isEmpty()) {
            if (extensionBuilder_.isEmpty()) {
              extensionBuilder_.dispose();
              extensionBuilder_ = null;
              extension_ = other.extension_;
              bitField0_ = (bitField0_ & ~0x00000010);
              extensionBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getExtensionFieldBuilder() : null;
            } else {
              extensionBuilder_.addAllMessages(other.extension_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.sensoris.types.spatial.PositionAndAccuracy lowerPositionAndAccuracy_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.spatial.PositionAndAccuracy, org.sensoris.types.spatial.PositionAndAccuracy.Builder, org.sensoris.types.spatial.PositionAndAccuracyOrBuilder> lowerPositionAndAccuracyBuilder_;
      /**
       * <pre>
       * Lower position and accuracy.
       * The lower position is closer to the ground than the upper position.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;</code>
       */
      public boolean hasLowerPositionAndAccuracy() {
        return lowerPositionAndAccuracyBuilder_ != null || lowerPositionAndAccuracy_ != null;
      }
      /**
       * <pre>
       * Lower position and accuracy.
       * The lower position is closer to the ground than the upper position.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;</code>
       */
      public org.sensoris.types.spatial.PositionAndAccuracy getLowerPositionAndAccuracy() {
        if (lowerPositionAndAccuracyBuilder_ == null) {
          return lowerPositionAndAccuracy_ == null ? org.sensoris.types.spatial.PositionAndAccuracy.getDefaultInstance() : lowerPositionAndAccuracy_;
        } else {
          return lowerPositionAndAccuracyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Lower position and accuracy.
       * The lower position is closer to the ground than the upper position.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;</code>
       */
      public Builder setLowerPositionAndAccuracy(org.sensoris.types.spatial.PositionAndAccuracy value) {
        if (lowerPositionAndAccuracyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lowerPositionAndAccuracy_ = value;
          onChanged();
        } else {
          lowerPositionAndAccuracyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Lower position and accuracy.
       * The lower position is closer to the ground than the upper position.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;</code>
       */
      public Builder setLowerPositionAndAccuracy(
          org.sensoris.types.spatial.PositionAndAccuracy.Builder builderForValue) {
        if (lowerPositionAndAccuracyBuilder_ == null) {
          lowerPositionAndAccuracy_ = builderForValue.build();
          onChanged();
        } else {
          lowerPositionAndAccuracyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Lower position and accuracy.
       * The lower position is closer to the ground than the upper position.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;</code>
       */
      public Builder mergeLowerPositionAndAccuracy(org.sensoris.types.spatial.PositionAndAccuracy value) {
        if (lowerPositionAndAccuracyBuilder_ == null) {
          if (lowerPositionAndAccuracy_ != null) {
            lowerPositionAndAccuracy_ =
              org.sensoris.types.spatial.PositionAndAccuracy.newBuilder(lowerPositionAndAccuracy_).mergeFrom(value).buildPartial();
          } else {
            lowerPositionAndAccuracy_ = value;
          }
          onChanged();
        } else {
          lowerPositionAndAccuracyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Lower position and accuracy.
       * The lower position is closer to the ground than the upper position.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;</code>
       */
      public Builder clearLowerPositionAndAccuracy() {
        if (lowerPositionAndAccuracyBuilder_ == null) {
          lowerPositionAndAccuracy_ = null;
          onChanged();
        } else {
          lowerPositionAndAccuracy_ = null;
          lowerPositionAndAccuracyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Lower position and accuracy.
       * The lower position is closer to the ground than the upper position.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;</code>
       */
      public org.sensoris.types.spatial.PositionAndAccuracy.Builder getLowerPositionAndAccuracyBuilder() {
        
        onChanged();
        return getLowerPositionAndAccuracyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Lower position and accuracy.
       * The lower position is closer to the ground than the upper position.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;</code>
       */
      public org.sensoris.types.spatial.PositionAndAccuracyOrBuilder getLowerPositionAndAccuracyOrBuilder() {
        if (lowerPositionAndAccuracyBuilder_ != null) {
          return lowerPositionAndAccuracyBuilder_.getMessageOrBuilder();
        } else {
          return lowerPositionAndAccuracy_ == null ?
              org.sensoris.types.spatial.PositionAndAccuracy.getDefaultInstance() : lowerPositionAndAccuracy_;
        }
      }
      /**
       * <pre>
       * Lower position and accuracy.
       * The lower position is closer to the ground than the upper position.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.spatial.PositionAndAccuracy, org.sensoris.types.spatial.PositionAndAccuracy.Builder, org.sensoris.types.spatial.PositionAndAccuracyOrBuilder> 
          getLowerPositionAndAccuracyFieldBuilder() {
        if (lowerPositionAndAccuracyBuilder_ == null) {
          lowerPositionAndAccuracyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.sensoris.types.spatial.PositionAndAccuracy, org.sensoris.types.spatial.PositionAndAccuracy.Builder, org.sensoris.types.spatial.PositionAndAccuracyOrBuilder>(
                  getLowerPositionAndAccuracy(),
                  getParentForChildren(),
                  isClean());
          lowerPositionAndAccuracy_ = null;
        }
        return lowerPositionAndAccuracyBuilder_;
      }

      private org.sensoris.types.spatial.PositionAndAccuracy upperPositionAndAccuracy_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.spatial.PositionAndAccuracy, org.sensoris.types.spatial.PositionAndAccuracy.Builder, org.sensoris.types.spatial.PositionAndAccuracyOrBuilder> upperPositionAndAccuracyBuilder_;
      /**
       * <pre>
       * Upper position and accuracy.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;</code>
       */
      public boolean hasUpperPositionAndAccuracy() {
        return upperPositionAndAccuracyBuilder_ != null || upperPositionAndAccuracy_ != null;
      }
      /**
       * <pre>
       * Upper position and accuracy.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;</code>
       */
      public org.sensoris.types.spatial.PositionAndAccuracy getUpperPositionAndAccuracy() {
        if (upperPositionAndAccuracyBuilder_ == null) {
          return upperPositionAndAccuracy_ == null ? org.sensoris.types.spatial.PositionAndAccuracy.getDefaultInstance() : upperPositionAndAccuracy_;
        } else {
          return upperPositionAndAccuracyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Upper position and accuracy.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;</code>
       */
      public Builder setUpperPositionAndAccuracy(org.sensoris.types.spatial.PositionAndAccuracy value) {
        if (upperPositionAndAccuracyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          upperPositionAndAccuracy_ = value;
          onChanged();
        } else {
          upperPositionAndAccuracyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Upper position and accuracy.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;</code>
       */
      public Builder setUpperPositionAndAccuracy(
          org.sensoris.types.spatial.PositionAndAccuracy.Builder builderForValue) {
        if (upperPositionAndAccuracyBuilder_ == null) {
          upperPositionAndAccuracy_ = builderForValue.build();
          onChanged();
        } else {
          upperPositionAndAccuracyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Upper position and accuracy.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;</code>
       */
      public Builder mergeUpperPositionAndAccuracy(org.sensoris.types.spatial.PositionAndAccuracy value) {
        if (upperPositionAndAccuracyBuilder_ == null) {
          if (upperPositionAndAccuracy_ != null) {
            upperPositionAndAccuracy_ =
              org.sensoris.types.spatial.PositionAndAccuracy.newBuilder(upperPositionAndAccuracy_).mergeFrom(value).buildPartial();
          } else {
            upperPositionAndAccuracy_ = value;
          }
          onChanged();
        } else {
          upperPositionAndAccuracyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Upper position and accuracy.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;</code>
       */
      public Builder clearUpperPositionAndAccuracy() {
        if (upperPositionAndAccuracyBuilder_ == null) {
          upperPositionAndAccuracy_ = null;
          onChanged();
        } else {
          upperPositionAndAccuracy_ = null;
          upperPositionAndAccuracyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Upper position and accuracy.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;</code>
       */
      public org.sensoris.types.spatial.PositionAndAccuracy.Builder getUpperPositionAndAccuracyBuilder() {
        
        onChanged();
        return getUpperPositionAndAccuracyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Upper position and accuracy.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;</code>
       */
      public org.sensoris.types.spatial.PositionAndAccuracyOrBuilder getUpperPositionAndAccuracyOrBuilder() {
        if (upperPositionAndAccuracyBuilder_ != null) {
          return upperPositionAndAccuracyBuilder_.getMessageOrBuilder();
        } else {
          return upperPositionAndAccuracy_ == null ?
              org.sensoris.types.spatial.PositionAndAccuracy.getDefaultInstance() : upperPositionAndAccuracy_;
        }
      }
      /**
       * <pre>
       * Upper position and accuracy.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.spatial.PositionAndAccuracy, org.sensoris.types.spatial.PositionAndAccuracy.Builder, org.sensoris.types.spatial.PositionAndAccuracyOrBuilder> 
          getUpperPositionAndAccuracyFieldBuilder() {
        if (upperPositionAndAccuracyBuilder_ == null) {
          upperPositionAndAccuracyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.sensoris.types.spatial.PositionAndAccuracy, org.sensoris.types.spatial.PositionAndAccuracy.Builder, org.sensoris.types.spatial.PositionAndAccuracyOrBuilder>(
                  getUpperPositionAndAccuracy(),
                  getParentForChildren(),
                  isClean());
          upperPositionAndAccuracy_ = null;
        }
        return upperPositionAndAccuracyBuilder_;
      }

      private org.sensoris.types.base.Int64ValueAndAccuracy lowerDiameterAndAccuracy_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder> lowerDiameterAndAccuracyBuilder_;
      /**
       * <pre>
       * Lower diameter and accuracy at lower position and accuracy.
       * &#64;unit MilliMeter
       * &#64;resolution 1
       * &#64;range (0, )
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public boolean hasLowerDiameterAndAccuracy() {
        return lowerDiameterAndAccuracyBuilder_ != null || lowerDiameterAndAccuracy_ != null;
      }
      /**
       * <pre>
       * Lower diameter and accuracy at lower position and accuracy.
       * &#64;unit MilliMeter
       * &#64;resolution 1
       * &#64;range (0, )
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public org.sensoris.types.base.Int64ValueAndAccuracy getLowerDiameterAndAccuracy() {
        if (lowerDiameterAndAccuracyBuilder_ == null) {
          return lowerDiameterAndAccuracy_ == null ? org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : lowerDiameterAndAccuracy_;
        } else {
          return lowerDiameterAndAccuracyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Lower diameter and accuracy at lower position and accuracy.
       * &#64;unit MilliMeter
       * &#64;resolution 1
       * &#64;range (0, )
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public Builder setLowerDiameterAndAccuracy(org.sensoris.types.base.Int64ValueAndAccuracy value) {
        if (lowerDiameterAndAccuracyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lowerDiameterAndAccuracy_ = value;
          onChanged();
        } else {
          lowerDiameterAndAccuracyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Lower diameter and accuracy at lower position and accuracy.
       * &#64;unit MilliMeter
       * &#64;resolution 1
       * &#64;range (0, )
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public Builder setLowerDiameterAndAccuracy(
          org.sensoris.types.base.Int64ValueAndAccuracy.Builder builderForValue) {
        if (lowerDiameterAndAccuracyBuilder_ == null) {
          lowerDiameterAndAccuracy_ = builderForValue.build();
          onChanged();
        } else {
          lowerDiameterAndAccuracyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Lower diameter and accuracy at lower position and accuracy.
       * &#64;unit MilliMeter
       * &#64;resolution 1
       * &#64;range (0, )
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public Builder mergeLowerDiameterAndAccuracy(org.sensoris.types.base.Int64ValueAndAccuracy value) {
        if (lowerDiameterAndAccuracyBuilder_ == null) {
          if (lowerDiameterAndAccuracy_ != null) {
            lowerDiameterAndAccuracy_ =
              org.sensoris.types.base.Int64ValueAndAccuracy.newBuilder(lowerDiameterAndAccuracy_).mergeFrom(value).buildPartial();
          } else {
            lowerDiameterAndAccuracy_ = value;
          }
          onChanged();
        } else {
          lowerDiameterAndAccuracyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Lower diameter and accuracy at lower position and accuracy.
       * &#64;unit MilliMeter
       * &#64;resolution 1
       * &#64;range (0, )
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public Builder clearLowerDiameterAndAccuracy() {
        if (lowerDiameterAndAccuracyBuilder_ == null) {
          lowerDiameterAndAccuracy_ = null;
          onChanged();
        } else {
          lowerDiameterAndAccuracy_ = null;
          lowerDiameterAndAccuracyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Lower diameter and accuracy at lower position and accuracy.
       * &#64;unit MilliMeter
       * &#64;resolution 1
       * &#64;range (0, )
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public org.sensoris.types.base.Int64ValueAndAccuracy.Builder getLowerDiameterAndAccuracyBuilder() {
        
        onChanged();
        return getLowerDiameterAndAccuracyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Lower diameter and accuracy at lower position and accuracy.
       * &#64;unit MilliMeter
       * &#64;resolution 1
       * &#64;range (0, )
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getLowerDiameterAndAccuracyOrBuilder() {
        if (lowerDiameterAndAccuracyBuilder_ != null) {
          return lowerDiameterAndAccuracyBuilder_.getMessageOrBuilder();
        } else {
          return lowerDiameterAndAccuracy_ == null ?
              org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : lowerDiameterAndAccuracy_;
        }
      }
      /**
       * <pre>
       * Lower diameter and accuracy at lower position and accuracy.
       * &#64;unit MilliMeter
       * &#64;resolution 1
       * &#64;range (0, )
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder> 
          getLowerDiameterAndAccuracyFieldBuilder() {
        if (lowerDiameterAndAccuracyBuilder_ == null) {
          lowerDiameterAndAccuracyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder>(
                  getLowerDiameterAndAccuracy(),
                  getParentForChildren(),
                  isClean());
          lowerDiameterAndAccuracy_ = null;
        }
        return lowerDiameterAndAccuracyBuilder_;
      }

      private org.sensoris.types.base.Int64ValueAndAccuracy upperDiameterAndAccuracy_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder> upperDiameterAndAccuracyBuilder_;
      /**
       * <pre>
       * Upper diameter and accuracy at upper position and accuracy.
       * &#64;unit MilliMeter
       * &#64;resolution 1
       * &#64;range (0, )
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public boolean hasUpperDiameterAndAccuracy() {
        return upperDiameterAndAccuracyBuilder_ != null || upperDiameterAndAccuracy_ != null;
      }
      /**
       * <pre>
       * Upper diameter and accuracy at upper position and accuracy.
       * &#64;unit MilliMeter
       * &#64;resolution 1
       * &#64;range (0, )
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public org.sensoris.types.base.Int64ValueAndAccuracy getUpperDiameterAndAccuracy() {
        if (upperDiameterAndAccuracyBuilder_ == null) {
          return upperDiameterAndAccuracy_ == null ? org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : upperDiameterAndAccuracy_;
        } else {
          return upperDiameterAndAccuracyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Upper diameter and accuracy at upper position and accuracy.
       * &#64;unit MilliMeter
       * &#64;resolution 1
       * &#64;range (0, )
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public Builder setUpperDiameterAndAccuracy(org.sensoris.types.base.Int64ValueAndAccuracy value) {
        if (upperDiameterAndAccuracyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          upperDiameterAndAccuracy_ = value;
          onChanged();
        } else {
          upperDiameterAndAccuracyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Upper diameter and accuracy at upper position and accuracy.
       * &#64;unit MilliMeter
       * &#64;resolution 1
       * &#64;range (0, )
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public Builder setUpperDiameterAndAccuracy(
          org.sensoris.types.base.Int64ValueAndAccuracy.Builder builderForValue) {
        if (upperDiameterAndAccuracyBuilder_ == null) {
          upperDiameterAndAccuracy_ = builderForValue.build();
          onChanged();
        } else {
          upperDiameterAndAccuracyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Upper diameter and accuracy at upper position and accuracy.
       * &#64;unit MilliMeter
       * &#64;resolution 1
       * &#64;range (0, )
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public Builder mergeUpperDiameterAndAccuracy(org.sensoris.types.base.Int64ValueAndAccuracy value) {
        if (upperDiameterAndAccuracyBuilder_ == null) {
          if (upperDiameterAndAccuracy_ != null) {
            upperDiameterAndAccuracy_ =
              org.sensoris.types.base.Int64ValueAndAccuracy.newBuilder(upperDiameterAndAccuracy_).mergeFrom(value).buildPartial();
          } else {
            upperDiameterAndAccuracy_ = value;
          }
          onChanged();
        } else {
          upperDiameterAndAccuracyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Upper diameter and accuracy at upper position and accuracy.
       * &#64;unit MilliMeter
       * &#64;resolution 1
       * &#64;range (0, )
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public Builder clearUpperDiameterAndAccuracy() {
        if (upperDiameterAndAccuracyBuilder_ == null) {
          upperDiameterAndAccuracy_ = null;
          onChanged();
        } else {
          upperDiameterAndAccuracy_ = null;
          upperDiameterAndAccuracyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Upper diameter and accuracy at upper position and accuracy.
       * &#64;unit MilliMeter
       * &#64;resolution 1
       * &#64;range (0, )
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public org.sensoris.types.base.Int64ValueAndAccuracy.Builder getUpperDiameterAndAccuracyBuilder() {
        
        onChanged();
        return getUpperDiameterAndAccuracyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Upper diameter and accuracy at upper position and accuracy.
       * &#64;unit MilliMeter
       * &#64;resolution 1
       * &#64;range (0, )
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getUpperDiameterAndAccuracyOrBuilder() {
        if (upperDiameterAndAccuracyBuilder_ != null) {
          return upperDiameterAndAccuracyBuilder_.getMessageOrBuilder();
        } else {
          return upperDiameterAndAccuracy_ == null ?
              org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : upperDiameterAndAccuracy_;
        }
      }
      /**
       * <pre>
       * Upper diameter and accuracy at upper position and accuracy.
       * &#64;unit MilliMeter
       * &#64;resolution 1
       * &#64;range (0, )
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder> 
          getUpperDiameterAndAccuracyFieldBuilder() {
        if (upperDiameterAndAccuracyBuilder_ == null) {
          upperDiameterAndAccuracyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder>(
                  getUpperDiameterAndAccuracy(),
                  getParentForChildren(),
                  isClean());
          upperDiameterAndAccuracy_ = null;
        }
        return upperDiameterAndAccuracyBuilder_;
      }

      private java.util.List<com.google.protobuf.Any> extension_ =
        java.util.Collections.emptyList();
      private void ensureExtensionIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          extension_ = new java.util.ArrayList<com.google.protobuf.Any>(extension_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> extensionBuilder_;

      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public java.util.List<com.google.protobuf.Any> getExtensionList() {
        if (extensionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(extension_);
        } else {
          return extensionBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public int getExtensionCount() {
        if (extensionBuilder_ == null) {
          return extension_.size();
        } else {
          return extensionBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public com.google.protobuf.Any getExtension(int index) {
        if (extensionBuilder_ == null) {
          return extension_.get(index);
        } else {
          return extensionBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public Builder setExtension(
          int index, com.google.protobuf.Any value) {
        if (extensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtensionIsMutable();
          extension_.set(index, value);
          onChanged();
        } else {
          extensionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public Builder setExtension(
          int index, com.google.protobuf.Any.Builder builderForValue) {
        if (extensionBuilder_ == null) {
          ensureExtensionIsMutable();
          extension_.set(index, builderForValue.build());
          onChanged();
        } else {
          extensionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public Builder addExtension(com.google.protobuf.Any value) {
        if (extensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtensionIsMutable();
          extension_.add(value);
          onChanged();
        } else {
          extensionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public Builder addExtension(
          int index, com.google.protobuf.Any value) {
        if (extensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtensionIsMutable();
          extension_.add(index, value);
          onChanged();
        } else {
          extensionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public Builder addExtension(
          com.google.protobuf.Any.Builder builderForValue) {
        if (extensionBuilder_ == null) {
          ensureExtensionIsMutable();
          extension_.add(builderForValue.build());
          onChanged();
        } else {
          extensionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public Builder addExtension(
          int index, com.google.protobuf.Any.Builder builderForValue) {
        if (extensionBuilder_ == null) {
          ensureExtensionIsMutable();
          extension_.add(index, builderForValue.build());
          onChanged();
        } else {
          extensionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public Builder addAllExtension(
          java.lang.Iterable<? extends com.google.protobuf.Any> values) {
        if (extensionBuilder_ == null) {
          ensureExtensionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, extension_);
          onChanged();
        } else {
          extensionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public Builder clearExtension() {
        if (extensionBuilder_ == null) {
          extension_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          extensionBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public Builder removeExtension(int index) {
        if (extensionBuilder_ == null) {
          ensureExtensionIsMutable();
          extension_.remove(index);
          onChanged();
        } else {
          extensionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public com.google.protobuf.Any.Builder getExtensionBuilder(
          int index) {
        return getExtensionFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public com.google.protobuf.AnyOrBuilder getExtensionOrBuilder(
          int index) {
        if (extensionBuilder_ == null) {
          return extension_.get(index);  } else {
          return extensionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
           getExtensionOrBuilderList() {
        if (extensionBuilder_ != null) {
          return extensionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(extension_);
        }
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public com.google.protobuf.Any.Builder addExtensionBuilder() {
        return getExtensionFieldBuilder().addBuilder(
            com.google.protobuf.Any.getDefaultInstance());
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public com.google.protobuf.Any.Builder addExtensionBuilder(
          int index) {
        return getExtensionFieldBuilder().addBuilder(
            index, com.google.protobuf.Any.getDefaultInstance());
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public java.util.List<com.google.protobuf.Any.Builder> 
           getExtensionBuilderList() {
        return getExtensionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
          getExtensionFieldBuilder() {
        if (extensionBuilder_ == null) {
          extensionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  extension_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          extension_ = null;
        }
        return extensionBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
    }

    // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
    private static final org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy();
    }

    public static org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConeAndAccuracy>
        PARSER = new com.google.protobuf.AbstractParser<ConeAndAccuracy>() {
      @java.lang.Override
      public ConeAndAccuracy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConeAndAccuracy(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConeAndAccuracy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConeAndAccuracy> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SurfaceTypeAndConfidenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Type
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * Type
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type type = 1;</code>
     */
    org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type getType();

    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    boolean hasConfidence();
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    org.sensoris.types.base.Confidence getConfidence();
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    org.sensoris.types.base.ConfidenceOrBuilder getConfidenceOrBuilder();
  }
  /**
   * <pre>
   * Surface type and confidence, e.g. of a traffic island.
   * &#64;example Detected object has a flat surface with 80 % confidence.
   * </pre>
   *
   * Protobuf type {@code sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence}
   */
  public  static final class SurfaceTypeAndConfidence extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
      SurfaceTypeAndConfidenceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SurfaceTypeAndConfidence.newBuilder() to construct.
    private SurfaceTypeAndConfidence(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SurfaceTypeAndConfidence() {
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SurfaceTypeAndConfidence(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              org.sensoris.types.base.Confidence.Builder subBuilder = null;
              if (confidence_ != null) {
                subBuilder = confidence_.toBuilder();
              }
              confidence_ = input.readMessage(org.sensoris.types.base.Confidence.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(confidence_);
                confidence_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_SurfaceTypeAndConfidence_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_SurfaceTypeAndConfidence_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.class, org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Builder.class);
    }

    /**
     * <pre>
     * Type.
     * </pre>
     *
     * Protobuf enum {@code sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Unknown.
       * </pre>
       *
       * <code>UNKNOWN_TYPE = 0;</code>
       */
      UNKNOWN_TYPE(0),
      /**
       * <pre>
       * Flat.
       * </pre>
       *
       * <code>FLAT = 1;</code>
       */
      FLAT(1),
      /**
       * <pre>
       * Rough.
       * </pre>
       *
       * <code>ROUGH = 2;</code>
       */
      ROUGH(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Unknown.
       * </pre>
       *
       * <code>UNKNOWN_TYPE = 0;</code>
       */
      public static final int UNKNOWN_TYPE_VALUE = 0;
      /**
       * <pre>
       * Flat.
       * </pre>
       *
       * <code>FLAT = 1;</code>
       */
      public static final int FLAT_VALUE = 1;
      /**
       * <pre>
       * Rough.
       * </pre>
       *
       * <code>ROUGH = 2;</code>
       */
      public static final int ROUGH_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN_TYPE;
          case 1: return FLAT;
          case 2: return ROUGH;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * Type
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Type
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type type = 1;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type getType() {
      @SuppressWarnings("deprecation")
      org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type result = org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type.valueOf(type_);
      return result == null ? org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type.UNRECOGNIZED : result;
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 2;
    private org.sensoris.types.base.Confidence confidence_;
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    public boolean hasConfidence() {
      return confidence_ != null;
    }
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    public org.sensoris.types.base.Confidence getConfidence() {
      return confidence_ == null ? org.sensoris.types.base.Confidence.getDefaultInstance() : confidence_;
    }
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    public org.sensoris.types.base.ConfidenceOrBuilder getConfidenceOrBuilder() {
      return getConfidence();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type.UNKNOWN_TYPE.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (confidence_ != null) {
        output.writeMessage(2, getConfidence());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type.UNKNOWN_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (confidence_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getConfidence());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)) {
        return super.equals(obj);
      }
      org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence other = (org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && (hasConfidence() == other.hasConfidence());
      if (hasConfidence()) {
        result = result && getConfidence()
            .equals(other.getConfidence());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasConfidence()) {
        hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
        hash = (53 * hash) + getConfidence().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Surface type and confidence, e.g. of a traffic island.
     * &#64;example Detected object has a flat surface with 80 % confidence.
     * </pre>
     *
     * Protobuf type {@code sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
        org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_SurfaceTypeAndConfidence_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_SurfaceTypeAndConfidence_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.class, org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Builder.class);
      }

      // Construct using org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (confidenceBuilder_ == null) {
          confidence_ = null;
        } else {
          confidence_ = null;
          confidenceBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_SurfaceTypeAndConfidence_descriptor;
      }

      @java.lang.Override
      public org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence getDefaultInstanceForType() {
        return org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.getDefaultInstance();
      }

      @java.lang.Override
      public org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence build() {
        org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence buildPartial() {
        org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence result = new org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence(this);
        result.type_ = type_;
        if (confidenceBuilder_ == null) {
          result.confidence_ = confidence_;
        } else {
          result.confidence_ = confidenceBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence) {
          return mergeFrom((org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence other) {
        if (other == org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasConfidence()) {
          mergeConfidence(other.getConfidence());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * Type
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Type
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type type = 1;</code>
       */
      public org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type getType() {
        @SuppressWarnings("deprecation")
        org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type result = org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type.valueOf(type_);
        return result == null ? org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Type
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type type = 1;</code>
       */
      public Builder setType(org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private org.sensoris.types.base.Confidence confidence_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder> confidenceBuilder_;
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public boolean hasConfidence() {
        return confidenceBuilder_ != null || confidence_ != null;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public org.sensoris.types.base.Confidence getConfidence() {
        if (confidenceBuilder_ == null) {
          return confidence_ == null ? org.sensoris.types.base.Confidence.getDefaultInstance() : confidence_;
        } else {
          return confidenceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public Builder setConfidence(org.sensoris.types.base.Confidence value) {
        if (confidenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          confidence_ = value;
          onChanged();
        } else {
          confidenceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public Builder setConfidence(
          org.sensoris.types.base.Confidence.Builder builderForValue) {
        if (confidenceBuilder_ == null) {
          confidence_ = builderForValue.build();
          onChanged();
        } else {
          confidenceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public Builder mergeConfidence(org.sensoris.types.base.Confidence value) {
        if (confidenceBuilder_ == null) {
          if (confidence_ != null) {
            confidence_ =
              org.sensoris.types.base.Confidence.newBuilder(confidence_).mergeFrom(value).buildPartial();
          } else {
            confidence_ = value;
          }
          onChanged();
        } else {
          confidenceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public Builder clearConfidence() {
        if (confidenceBuilder_ == null) {
          confidence_ = null;
          onChanged();
        } else {
          confidence_ = null;
          confidenceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public org.sensoris.types.base.Confidence.Builder getConfidenceBuilder() {
        
        onChanged();
        return getConfidenceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public org.sensoris.types.base.ConfidenceOrBuilder getConfidenceOrBuilder() {
        if (confidenceBuilder_ != null) {
          return confidenceBuilder_.getMessageOrBuilder();
        } else {
          return confidence_ == null ?
              org.sensoris.types.base.Confidence.getDefaultInstance() : confidence_;
        }
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder> 
          getConfidenceFieldBuilder() {
        if (confidenceBuilder_ == null) {
          confidenceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder>(
                  getConfidence(),
                  getParentForChildren(),
                  isClean());
          confidence_ = null;
        }
        return confidenceBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
    }

    // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
    private static final org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence();
    }

    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SurfaceTypeAndConfidence>
        PARSER = new com.google.protobuf.AbstractParser<SurfaceTypeAndConfidence>() {
      @java.lang.Override
      public SurfaceTypeAndConfidence parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SurfaceTypeAndConfidence(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SurfaceTypeAndConfidence> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SurfaceTypeAndConfidence> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SurfaceMaterialAndConfidenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type type = 1;</code>
     */
    org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type getType();

    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    boolean hasConfidence();
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    org.sensoris.types.base.Confidence getConfidence();
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    org.sensoris.types.base.ConfidenceOrBuilder getConfidenceOrBuilder();

    /**
     * <pre>
     * Reflectivity.
     * An object is reflective if there are elements on the object, that are explicitly designed to increase visibility in low light or bad light situations.
     * &#64;unit 1
     * &#64;range [0, 100]
     * &#64;resolution 1
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    boolean hasReflectivityAndAccuracy();
    /**
     * <pre>
     * Reflectivity.
     * An object is reflective if there are elements on the object, that are explicitly designed to increase visibility in low light or bad light situations.
     * &#64;unit 1
     * &#64;range [0, 100]
     * &#64;resolution 1
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    org.sensoris.types.base.Int64ValueAndAccuracy getReflectivityAndAccuracy();
    /**
     * <pre>
     * Reflectivity.
     * An object is reflective if there are elements on the object, that are explicitly designed to increase visibility in low light or bad light situations.
     * &#64;unit 1
     * &#64;range [0, 100]
     * &#64;resolution 1
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getReflectivityAndAccuracyOrBuilder();
  }
  /**
   * <pre>
   * Surface material and confidence.
   * &#64;example Detected object has a stone surface with 80 % confidence.
   * </pre>
   *
   * Protobuf type {@code sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence}
   */
  public  static final class SurfaceMaterialAndConfidence extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
      SurfaceMaterialAndConfidenceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SurfaceMaterialAndConfidence.newBuilder() to construct.
    private SurfaceMaterialAndConfidence(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SurfaceMaterialAndConfidence() {
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SurfaceMaterialAndConfidence(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              org.sensoris.types.base.Confidence.Builder subBuilder = null;
              if (confidence_ != null) {
                subBuilder = confidence_.toBuilder();
              }
              confidence_ = input.readMessage(org.sensoris.types.base.Confidence.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(confidence_);
                confidence_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              org.sensoris.types.base.Int64ValueAndAccuracy.Builder subBuilder = null;
              if (reflectivityAndAccuracy_ != null) {
                subBuilder = reflectivityAndAccuracy_.toBuilder();
              }
              reflectivityAndAccuracy_ = input.readMessage(org.sensoris.types.base.Int64ValueAndAccuracy.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(reflectivityAndAccuracy_);
                reflectivityAndAccuracy_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_SurfaceMaterialAndConfidence_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_SurfaceMaterialAndConfidence_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.class, org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Builder.class);
    }

    /**
     * <pre>
     * Type.
     * </pre>
     *
     * Protobuf enum {@code sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Unknown.
       * </pre>
       *
       * <code>UNKNOWN_TYPE = 0;</code>
       */
      UNKNOWN_TYPE(0),
      /**
       * <pre>
       * Metal.
       * </pre>
       *
       * <code>METAL = 1;</code>
       */
      METAL(1),
      /**
       * <pre>
       * Concrete.
       * </pre>
       *
       * <code>CONCRETE = 2;</code>
       */
      CONCRETE(2),
      /**
       * <pre>
       * Stone.
       * </pre>
       *
       * <code>STONE = 3;</code>
       */
      STONE(3),
      /**
       * <pre>
       * Wood.
       * </pre>
       *
       * <code>WOOD = 4;</code>
       */
      WOOD(4),
      /**
       * <pre>
       * Plastic.
       * </pre>
       *
       * <code>PLASTIC = 5;</code>
       */
      PLASTIC(5),
      /**
       * <pre>
       * Asphalt.
       * </pre>
       *
       * <code>ASPHALT = 6;</code>
       */
      ASPHALT(6),
      /**
       * <pre>
       * Organic.
       * </pre>
       *
       * <code>ORGANIC = 7;</code>
       */
      ORGANIC(7),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Unknown.
       * </pre>
       *
       * <code>UNKNOWN_TYPE = 0;</code>
       */
      public static final int UNKNOWN_TYPE_VALUE = 0;
      /**
       * <pre>
       * Metal.
       * </pre>
       *
       * <code>METAL = 1;</code>
       */
      public static final int METAL_VALUE = 1;
      /**
       * <pre>
       * Concrete.
       * </pre>
       *
       * <code>CONCRETE = 2;</code>
       */
      public static final int CONCRETE_VALUE = 2;
      /**
       * <pre>
       * Stone.
       * </pre>
       *
       * <code>STONE = 3;</code>
       */
      public static final int STONE_VALUE = 3;
      /**
       * <pre>
       * Wood.
       * </pre>
       *
       * <code>WOOD = 4;</code>
       */
      public static final int WOOD_VALUE = 4;
      /**
       * <pre>
       * Plastic.
       * </pre>
       *
       * <code>PLASTIC = 5;</code>
       */
      public static final int PLASTIC_VALUE = 5;
      /**
       * <pre>
       * Asphalt.
       * </pre>
       *
       * <code>ASPHALT = 6;</code>
       */
      public static final int ASPHALT_VALUE = 6;
      /**
       * <pre>
       * Organic.
       * </pre>
       *
       * <code>ORGANIC = 7;</code>
       */
      public static final int ORGANIC_VALUE = 7;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN_TYPE;
          case 1: return METAL;
          case 2: return CONCRETE;
          case 3: return STONE;
          case 4: return WOOD;
          case 5: return PLASTIC;
          case 6: return ASPHALT;
          case 7: return ORGANIC;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type type = 1;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type getType() {
      @SuppressWarnings("deprecation")
      org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type result = org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type.valueOf(type_);
      return result == null ? org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type.UNRECOGNIZED : result;
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 2;
    private org.sensoris.types.base.Confidence confidence_;
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    public boolean hasConfidence() {
      return confidence_ != null;
    }
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    public org.sensoris.types.base.Confidence getConfidence() {
      return confidence_ == null ? org.sensoris.types.base.Confidence.getDefaultInstance() : confidence_;
    }
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    public org.sensoris.types.base.ConfidenceOrBuilder getConfidenceOrBuilder() {
      return getConfidence();
    }

    public static final int REFLECTIVITY_AND_ACCURACY_FIELD_NUMBER = 3;
    private org.sensoris.types.base.Int64ValueAndAccuracy reflectivityAndAccuracy_;
    /**
     * <pre>
     * Reflectivity.
     * An object is reflective if there are elements on the object, that are explicitly designed to increase visibility in low light or bad light situations.
     * &#64;unit 1
     * &#64;range [0, 100]
     * &#64;resolution 1
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public boolean hasReflectivityAndAccuracy() {
      return reflectivityAndAccuracy_ != null;
    }
    /**
     * <pre>
     * Reflectivity.
     * An object is reflective if there are elements on the object, that are explicitly designed to increase visibility in low light or bad light situations.
     * &#64;unit 1
     * &#64;range [0, 100]
     * &#64;resolution 1
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public org.sensoris.types.base.Int64ValueAndAccuracy getReflectivityAndAccuracy() {
      return reflectivityAndAccuracy_ == null ? org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : reflectivityAndAccuracy_;
    }
    /**
     * <pre>
     * Reflectivity.
     * An object is reflective if there are elements on the object, that are explicitly designed to increase visibility in low light or bad light situations.
     * &#64;unit 1
     * &#64;range [0, 100]
     * &#64;resolution 1
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getReflectivityAndAccuracyOrBuilder() {
      return getReflectivityAndAccuracy();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type.UNKNOWN_TYPE.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (confidence_ != null) {
        output.writeMessage(2, getConfidence());
      }
      if (reflectivityAndAccuracy_ != null) {
        output.writeMessage(3, getReflectivityAndAccuracy());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type.UNKNOWN_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (confidence_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getConfidence());
      }
      if (reflectivityAndAccuracy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getReflectivityAndAccuracy());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)) {
        return super.equals(obj);
      }
      org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence other = (org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && (hasConfidence() == other.hasConfidence());
      if (hasConfidence()) {
        result = result && getConfidence()
            .equals(other.getConfidence());
      }
      result = result && (hasReflectivityAndAccuracy() == other.hasReflectivityAndAccuracy());
      if (hasReflectivityAndAccuracy()) {
        result = result && getReflectivityAndAccuracy()
            .equals(other.getReflectivityAndAccuracy());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasConfidence()) {
        hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
        hash = (53 * hash) + getConfidence().hashCode();
      }
      if (hasReflectivityAndAccuracy()) {
        hash = (37 * hash) + REFLECTIVITY_AND_ACCURACY_FIELD_NUMBER;
        hash = (53 * hash) + getReflectivityAndAccuracy().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Surface material and confidence.
     * &#64;example Detected object has a stone surface with 80 % confidence.
     * </pre>
     *
     * Protobuf type {@code sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
        org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_SurfaceMaterialAndConfidence_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_SurfaceMaterialAndConfidence_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.class, org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Builder.class);
      }

      // Construct using org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (confidenceBuilder_ == null) {
          confidence_ = null;
        } else {
          confidence_ = null;
          confidenceBuilder_ = null;
        }
        if (reflectivityAndAccuracyBuilder_ == null) {
          reflectivityAndAccuracy_ = null;
        } else {
          reflectivityAndAccuracy_ = null;
          reflectivityAndAccuracyBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_SurfaceMaterialAndConfidence_descriptor;
      }

      @java.lang.Override
      public org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence getDefaultInstanceForType() {
        return org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.getDefaultInstance();
      }

      @java.lang.Override
      public org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence build() {
        org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence buildPartial() {
        org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence result = new org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence(this);
        result.type_ = type_;
        if (confidenceBuilder_ == null) {
          result.confidence_ = confidence_;
        } else {
          result.confidence_ = confidenceBuilder_.build();
        }
        if (reflectivityAndAccuracyBuilder_ == null) {
          result.reflectivityAndAccuracy_ = reflectivityAndAccuracy_;
        } else {
          result.reflectivityAndAccuracy_ = reflectivityAndAccuracyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence) {
          return mergeFrom((org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence other) {
        if (other == org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasConfidence()) {
          mergeConfidence(other.getConfidence());
        }
        if (other.hasReflectivityAndAccuracy()) {
          mergeReflectivityAndAccuracy(other.getReflectivityAndAccuracy());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * Type.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Type.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type type = 1;</code>
       */
      public org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type getType() {
        @SuppressWarnings("deprecation")
        org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type result = org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type.valueOf(type_);
        return result == null ? org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Type.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type type = 1;</code>
       */
      public Builder setType(org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private org.sensoris.types.base.Confidence confidence_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder> confidenceBuilder_;
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public boolean hasConfidence() {
        return confidenceBuilder_ != null || confidence_ != null;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public org.sensoris.types.base.Confidence getConfidence() {
        if (confidenceBuilder_ == null) {
          return confidence_ == null ? org.sensoris.types.base.Confidence.getDefaultInstance() : confidence_;
        } else {
          return confidenceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public Builder setConfidence(org.sensoris.types.base.Confidence value) {
        if (confidenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          confidence_ = value;
          onChanged();
        } else {
          confidenceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public Builder setConfidence(
          org.sensoris.types.base.Confidence.Builder builderForValue) {
        if (confidenceBuilder_ == null) {
          confidence_ = builderForValue.build();
          onChanged();
        } else {
          confidenceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public Builder mergeConfidence(org.sensoris.types.base.Confidence value) {
        if (confidenceBuilder_ == null) {
          if (confidence_ != null) {
            confidence_ =
              org.sensoris.types.base.Confidence.newBuilder(confidence_).mergeFrom(value).buildPartial();
          } else {
            confidence_ = value;
          }
          onChanged();
        } else {
          confidenceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public Builder clearConfidence() {
        if (confidenceBuilder_ == null) {
          confidence_ = null;
          onChanged();
        } else {
          confidence_ = null;
          confidenceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public org.sensoris.types.base.Confidence.Builder getConfidenceBuilder() {
        
        onChanged();
        return getConfidenceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public org.sensoris.types.base.ConfidenceOrBuilder getConfidenceOrBuilder() {
        if (confidenceBuilder_ != null) {
          return confidenceBuilder_.getMessageOrBuilder();
        } else {
          return confidence_ == null ?
              org.sensoris.types.base.Confidence.getDefaultInstance() : confidence_;
        }
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder> 
          getConfidenceFieldBuilder() {
        if (confidenceBuilder_ == null) {
          confidenceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder>(
                  getConfidence(),
                  getParentForChildren(),
                  isClean());
          confidence_ = null;
        }
        return confidenceBuilder_;
      }

      private org.sensoris.types.base.Int64ValueAndAccuracy reflectivityAndAccuracy_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder> reflectivityAndAccuracyBuilder_;
      /**
       * <pre>
       * Reflectivity.
       * An object is reflective if there are elements on the object, that are explicitly designed to increase visibility in low light or bad light situations.
       * &#64;unit 1
       * &#64;range [0, 100]
       * &#64;resolution 1
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public boolean hasReflectivityAndAccuracy() {
        return reflectivityAndAccuracyBuilder_ != null || reflectivityAndAccuracy_ != null;
      }
      /**
       * <pre>
       * Reflectivity.
       * An object is reflective if there are elements on the object, that are explicitly designed to increase visibility in low light or bad light situations.
       * &#64;unit 1
       * &#64;range [0, 100]
       * &#64;resolution 1
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public org.sensoris.types.base.Int64ValueAndAccuracy getReflectivityAndAccuracy() {
        if (reflectivityAndAccuracyBuilder_ == null) {
          return reflectivityAndAccuracy_ == null ? org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : reflectivityAndAccuracy_;
        } else {
          return reflectivityAndAccuracyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Reflectivity.
       * An object is reflective if there are elements on the object, that are explicitly designed to increase visibility in low light or bad light situations.
       * &#64;unit 1
       * &#64;range [0, 100]
       * &#64;resolution 1
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public Builder setReflectivityAndAccuracy(org.sensoris.types.base.Int64ValueAndAccuracy value) {
        if (reflectivityAndAccuracyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          reflectivityAndAccuracy_ = value;
          onChanged();
        } else {
          reflectivityAndAccuracyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Reflectivity.
       * An object is reflective if there are elements on the object, that are explicitly designed to increase visibility in low light or bad light situations.
       * &#64;unit 1
       * &#64;range [0, 100]
       * &#64;resolution 1
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public Builder setReflectivityAndAccuracy(
          org.sensoris.types.base.Int64ValueAndAccuracy.Builder builderForValue) {
        if (reflectivityAndAccuracyBuilder_ == null) {
          reflectivityAndAccuracy_ = builderForValue.build();
          onChanged();
        } else {
          reflectivityAndAccuracyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Reflectivity.
       * An object is reflective if there are elements on the object, that are explicitly designed to increase visibility in low light or bad light situations.
       * &#64;unit 1
       * &#64;range [0, 100]
       * &#64;resolution 1
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public Builder mergeReflectivityAndAccuracy(org.sensoris.types.base.Int64ValueAndAccuracy value) {
        if (reflectivityAndAccuracyBuilder_ == null) {
          if (reflectivityAndAccuracy_ != null) {
            reflectivityAndAccuracy_ =
              org.sensoris.types.base.Int64ValueAndAccuracy.newBuilder(reflectivityAndAccuracy_).mergeFrom(value).buildPartial();
          } else {
            reflectivityAndAccuracy_ = value;
          }
          onChanged();
        } else {
          reflectivityAndAccuracyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Reflectivity.
       * An object is reflective if there are elements on the object, that are explicitly designed to increase visibility in low light or bad light situations.
       * &#64;unit 1
       * &#64;range [0, 100]
       * &#64;resolution 1
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public Builder clearReflectivityAndAccuracy() {
        if (reflectivityAndAccuracyBuilder_ == null) {
          reflectivityAndAccuracy_ = null;
          onChanged();
        } else {
          reflectivityAndAccuracy_ = null;
          reflectivityAndAccuracyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Reflectivity.
       * An object is reflective if there are elements on the object, that are explicitly designed to increase visibility in low light or bad light situations.
       * &#64;unit 1
       * &#64;range [0, 100]
       * &#64;resolution 1
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public org.sensoris.types.base.Int64ValueAndAccuracy.Builder getReflectivityAndAccuracyBuilder() {
        
        onChanged();
        return getReflectivityAndAccuracyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Reflectivity.
       * An object is reflective if there are elements on the object, that are explicitly designed to increase visibility in low light or bad light situations.
       * &#64;unit 1
       * &#64;range [0, 100]
       * &#64;resolution 1
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      public org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getReflectivityAndAccuracyOrBuilder() {
        if (reflectivityAndAccuracyBuilder_ != null) {
          return reflectivityAndAccuracyBuilder_.getMessageOrBuilder();
        } else {
          return reflectivityAndAccuracy_ == null ?
              org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : reflectivityAndAccuracy_;
        }
      }
      /**
       * <pre>
       * Reflectivity.
       * An object is reflective if there are elements on the object, that are explicitly designed to increase visibility in low light or bad light situations.
       * &#64;unit 1
       * &#64;range [0, 100]
       * &#64;resolution 1
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder> 
          getReflectivityAndAccuracyFieldBuilder() {
        if (reflectivityAndAccuracyBuilder_ == null) {
          reflectivityAndAccuracyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder>(
                  getReflectivityAndAccuracy(),
                  getParentForChildren(),
                  isClean());
          reflectivityAndAccuracy_ = null;
        }
        return reflectivityAndAccuracyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
    }

    // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
    private static final org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence();
    }

    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SurfaceMaterialAndConfidence>
        PARSER = new com.google.protobuf.AbstractParser<SurfaceMaterialAndConfidence>() {
      @java.lang.Override
      public SurfaceMaterialAndConfidence parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SurfaceMaterialAndConfidence(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SurfaceMaterialAndConfidence> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SurfaceMaterialAndConfidence> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SurfaceColorAndConfidenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type type = 1;</code>
     */
    org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type getType();

    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    boolean hasConfidence();
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    org.sensoris.types.base.Confidence getConfidence();
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    org.sensoris.types.base.ConfidenceOrBuilder getConfidenceOrBuilder();
  }
  /**
   * <pre>
   * Surface color and confidence.
   * </pre>
   *
   * Protobuf type {@code sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence}
   */
  public  static final class SurfaceColorAndConfidence extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
      SurfaceColorAndConfidenceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SurfaceColorAndConfidence.newBuilder() to construct.
    private SurfaceColorAndConfidence(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SurfaceColorAndConfidence() {
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SurfaceColorAndConfidence(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              org.sensoris.types.base.Confidence.Builder subBuilder = null;
              if (confidence_ != null) {
                subBuilder = confidence_.toBuilder();
              }
              confidence_ = input.readMessage(org.sensoris.types.base.Confidence.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(confidence_);
                confidence_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_SurfaceColorAndConfidence_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_SurfaceColorAndConfidence_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.class, org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Builder.class);
    }

    /**
     * <pre>
     * Type.
     * </pre>
     *
     * Protobuf enum {@code sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Unknown.
       * </pre>
       *
       * <code>UNKOWN_TYPE = 0;</code>
       */
      UNKOWN_TYPE(0),
      /**
       * <pre>
       * Other, i.e. none of the listed enum values.
       * </pre>
       *
       * <code>OTHER = 1;</code>
       */
      OTHER(1),
      /**
       * <pre>
       * White.
       * </pre>
       *
       * <code>WHITE = 2;</code>
       */
      WHITE(2),
      /**
       * <pre>
       * Gray.
       * </pre>
       *
       * <code>GRAY = 3;</code>
       */
      GRAY(3),
      /**
       * <pre>
       * Light gray.
       * </pre>
       *
       * <code>GRAY_LIGHT = 4;</code>
       */
      GRAY_LIGHT(4),
      /**
       * <pre>
       * Dark gray.
       * </pre>
       *
       * <code>GRAY_DARK = 5;</code>
       */
      GRAY_DARK(5),
      /**
       * <pre>
       * Black.
       * </pre>
       *
       * <code>BLACK = 6;</code>
       */
      BLACK(6),
      /**
       * <pre>
       * Red.
       * </pre>
       *
       * <code>RED = 7;</code>
       */
      RED(7),
      /**
       * <pre>
       * Green.
       * </pre>
       *
       * <code>GREEN = 8;</code>
       */
      GREEN(8),
      /**
       * <pre>
       * Blue.
       * </pre>
       *
       * <code>BLUE = 9;</code>
       */
      BLUE(9),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Unknown.
       * </pre>
       *
       * <code>UNKOWN_TYPE = 0;</code>
       */
      public static final int UNKOWN_TYPE_VALUE = 0;
      /**
       * <pre>
       * Other, i.e. none of the listed enum values.
       * </pre>
       *
       * <code>OTHER = 1;</code>
       */
      public static final int OTHER_VALUE = 1;
      /**
       * <pre>
       * White.
       * </pre>
       *
       * <code>WHITE = 2;</code>
       */
      public static final int WHITE_VALUE = 2;
      /**
       * <pre>
       * Gray.
       * </pre>
       *
       * <code>GRAY = 3;</code>
       */
      public static final int GRAY_VALUE = 3;
      /**
       * <pre>
       * Light gray.
       * </pre>
       *
       * <code>GRAY_LIGHT = 4;</code>
       */
      public static final int GRAY_LIGHT_VALUE = 4;
      /**
       * <pre>
       * Dark gray.
       * </pre>
       *
       * <code>GRAY_DARK = 5;</code>
       */
      public static final int GRAY_DARK_VALUE = 5;
      /**
       * <pre>
       * Black.
       * </pre>
       *
       * <code>BLACK = 6;</code>
       */
      public static final int BLACK_VALUE = 6;
      /**
       * <pre>
       * Red.
       * </pre>
       *
       * <code>RED = 7;</code>
       */
      public static final int RED_VALUE = 7;
      /**
       * <pre>
       * Green.
       * </pre>
       *
       * <code>GREEN = 8;</code>
       */
      public static final int GREEN_VALUE = 8;
      /**
       * <pre>
       * Blue.
       * </pre>
       *
       * <code>BLUE = 9;</code>
       */
      public static final int BLUE_VALUE = 9;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 0: return UNKOWN_TYPE;
          case 1: return OTHER;
          case 2: return WHITE;
          case 3: return GRAY;
          case 4: return GRAY_LIGHT;
          case 5: return GRAY_DARK;
          case 6: return BLACK;
          case 7: return RED;
          case 8: return GREEN;
          case 9: return BLUE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type type = 1;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type getType() {
      @SuppressWarnings("deprecation")
      org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type result = org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type.valueOf(type_);
      return result == null ? org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type.UNRECOGNIZED : result;
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 2;
    private org.sensoris.types.base.Confidence confidence_;
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    public boolean hasConfidence() {
      return confidence_ != null;
    }
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    public org.sensoris.types.base.Confidence getConfidence() {
      return confidence_ == null ? org.sensoris.types.base.Confidence.getDefaultInstance() : confidence_;
    }
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    public org.sensoris.types.base.ConfidenceOrBuilder getConfidenceOrBuilder() {
      return getConfidence();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type.UNKOWN_TYPE.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (confidence_ != null) {
        output.writeMessage(2, getConfidence());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type.UNKOWN_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (confidence_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getConfidence());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)) {
        return super.equals(obj);
      }
      org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence other = (org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && (hasConfidence() == other.hasConfidence());
      if (hasConfidence()) {
        result = result && getConfidence()
            .equals(other.getConfidence());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasConfidence()) {
        hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
        hash = (53 * hash) + getConfidence().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Surface color and confidence.
     * </pre>
     *
     * Protobuf type {@code sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
        org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_SurfaceColorAndConfidence_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_SurfaceColorAndConfidence_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.class, org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Builder.class);
      }

      // Construct using org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (confidenceBuilder_ == null) {
          confidence_ = null;
        } else {
          confidence_ = null;
          confidenceBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_SurfaceColorAndConfidence_descriptor;
      }

      @java.lang.Override
      public org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence getDefaultInstanceForType() {
        return org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.getDefaultInstance();
      }

      @java.lang.Override
      public org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence build() {
        org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence buildPartial() {
        org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence result = new org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence(this);
        result.type_ = type_;
        if (confidenceBuilder_ == null) {
          result.confidence_ = confidence_;
        } else {
          result.confidence_ = confidenceBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence) {
          return mergeFrom((org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence other) {
        if (other == org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasConfidence()) {
          mergeConfidence(other.getConfidence());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * Type.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Type.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type type = 1;</code>
       */
      public org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type getType() {
        @SuppressWarnings("deprecation")
        org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type result = org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type.valueOf(type_);
        return result == null ? org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Type.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type type = 1;</code>
       */
      public Builder setType(org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private org.sensoris.types.base.Confidence confidence_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder> confidenceBuilder_;
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public boolean hasConfidence() {
        return confidenceBuilder_ != null || confidence_ != null;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public org.sensoris.types.base.Confidence getConfidence() {
        if (confidenceBuilder_ == null) {
          return confidence_ == null ? org.sensoris.types.base.Confidence.getDefaultInstance() : confidence_;
        } else {
          return confidenceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public Builder setConfidence(org.sensoris.types.base.Confidence value) {
        if (confidenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          confidence_ = value;
          onChanged();
        } else {
          confidenceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public Builder setConfidence(
          org.sensoris.types.base.Confidence.Builder builderForValue) {
        if (confidenceBuilder_ == null) {
          confidence_ = builderForValue.build();
          onChanged();
        } else {
          confidenceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public Builder mergeConfidence(org.sensoris.types.base.Confidence value) {
        if (confidenceBuilder_ == null) {
          if (confidence_ != null) {
            confidence_ =
              org.sensoris.types.base.Confidence.newBuilder(confidence_).mergeFrom(value).buildPartial();
          } else {
            confidence_ = value;
          }
          onChanged();
        } else {
          confidenceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public Builder clearConfidence() {
        if (confidenceBuilder_ == null) {
          confidence_ = null;
          onChanged();
        } else {
          confidence_ = null;
          confidenceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public org.sensoris.types.base.Confidence.Builder getConfidenceBuilder() {
        
        onChanged();
        return getConfidenceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public org.sensoris.types.base.ConfidenceOrBuilder getConfidenceOrBuilder() {
        if (confidenceBuilder_ != null) {
          return confidenceBuilder_.getMessageOrBuilder();
        } else {
          return confidence_ == null ?
              org.sensoris.types.base.Confidence.getDefaultInstance() : confidence_;
        }
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder> 
          getConfidenceFieldBuilder() {
        if (confidenceBuilder_ == null) {
          confidenceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder>(
                  getConfidence(),
                  getParentForChildren(),
                  isClean());
          confidence_ = null;
        }
        return confidenceBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
    }

    // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
    private static final org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence();
    }

    public static org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SurfaceColorAndConfidence>
        PARSER = new com.google.protobuf.AbstractParser<SurfaceColorAndConfidence>() {
      @java.lang.Override
      public SurfaceColorAndConfidence parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SurfaceColorAndConfidence(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SurfaceColorAndConfidence> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SurfaceColorAndConfidence> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  private int geometryCase_ = 0;
  private java.lang.Object geometry_;
  public enum GeometryCase
      implements com.google.protobuf.Internal.EnumLite {
    RECTANGULAR_BOX_AND_ACCURACY(6),
    CONE_AND_ACCURACY(7),
    GEOMETRY_NOT_SET(0);
    private final int value;
    private GeometryCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static GeometryCase valueOf(int value) {
      return forNumber(value);
    }

    public static GeometryCase forNumber(int value) {
      switch (value) {
        case 6: return RECTANGULAR_BOX_AND_ACCURACY;
        case 7: return CONE_AND_ACCURACY;
        case 0: return GEOMETRY_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public GeometryCase
  getGeometryCase() {
    return GeometryCase.forNumber(
        geometryCase_);
  }

  public static final int ENVELOPE_FIELD_NUMBER = 1;
  private org.sensoris.types.base.EventEnvelope envelope_;
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  public boolean hasEnvelope() {
    return envelope_ != null;
  }
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  public org.sensoris.types.base.EventEnvelope getEnvelope() {
    return envelope_ == null ? org.sensoris.types.base.EventEnvelope.getDefaultInstance() : envelope_;
  }
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  public org.sensoris.types.base.EventEnvelopeOrBuilder getEnvelopeOrBuilder() {
    return getEnvelope();
  }

  public static final int OBJECT_ID_FIELD_NUMBER = 2;
  private com.google.protobuf.Int64Value objectId_;
  /**
   * <pre>
   * Static object identifier.
   * Identifier is unique within a DataMessage and can be used to trace static objects.
   * &#64;unit 1
   * &#64;resolution 1
   * &#64;range [1, )
   * </pre>
   *
   * <code>.google.protobuf.Int64Value object_id = 2;</code>
   */
  public boolean hasObjectId() {
    return objectId_ != null;
  }
  /**
   * <pre>
   * Static object identifier.
   * Identifier is unique within a DataMessage and can be used to trace static objects.
   * &#64;unit 1
   * &#64;resolution 1
   * &#64;range [1, )
   * </pre>
   *
   * <code>.google.protobuf.Int64Value object_id = 2;</code>
   */
  public com.google.protobuf.Int64Value getObjectId() {
    return objectId_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : objectId_;
  }
  /**
   * <pre>
   * Static object identifier.
   * Identifier is unique within a DataMessage and can be used to trace static objects.
   * &#64;unit 1
   * &#64;resolution 1
   * &#64;range [1, )
   * </pre>
   *
   * <code>.google.protobuf.Int64Value object_id = 2;</code>
   */
  public com.google.protobuf.Int64ValueOrBuilder getObjectIdOrBuilder() {
    return getObjectId();
  }

  public static final int EXISTENCE_CONFIDENCE_FIELD_NUMBER = 3;
  private org.sensoris.types.base.Confidence existenceConfidence_;
  /**
   * <pre>
   * Confidence that a static object has been detected.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 3;</code>
   */
  public boolean hasExistenceConfidence() {
    return existenceConfidence_ != null;
  }
  /**
   * <pre>
   * Confidence that a static object has been detected.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 3;</code>
   */
  public org.sensoris.types.base.Confidence getExistenceConfidence() {
    return existenceConfidence_ == null ? org.sensoris.types.base.Confidence.getDefaultInstance() : existenceConfidence_;
  }
  /**
   * <pre>
   * Confidence that a static object has been detected.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 3;</code>
   */
  public org.sensoris.types.base.ConfidenceOrBuilder getExistenceConfidenceOrBuilder() {
    return getExistenceConfidence();
  }

  public static final int DETECTION_STATUS_FIELD_NUMBER = 4;
  private org.sensoris.types.base.EventDetectionStatus detectionStatus_;
  /**
   * <pre>
   * Event detection status.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;</code>
   */
  public boolean hasDetectionStatus() {
    return detectionStatus_ != null;
  }
  /**
   * <pre>
   * Event detection status.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;</code>
   */
  public org.sensoris.types.base.EventDetectionStatus getDetectionStatus() {
    return detectionStatus_ == null ? org.sensoris.types.base.EventDetectionStatus.getDefaultInstance() : detectionStatus_;
  }
  /**
   * <pre>
   * Event detection status.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;</code>
   */
  public org.sensoris.types.base.EventDetectionStatusOrBuilder getDetectionStatusOrBuilder() {
    return getDetectionStatus();
  }

  public static final int TYPE_AND_CONFIDENCE_FIELD_NUMBER = 5;
  private org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence typeAndConfidence_;
  /**
   * <pre>
   * Type and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;</code>
   */
  public boolean hasTypeAndConfidence() {
    return typeAndConfidence_ != null;
  }
  /**
   * <pre>
   * Type and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;</code>
   */
  public org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence getTypeAndConfidence() {
    return typeAndConfidence_ == null ? org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.getDefaultInstance() : typeAndConfidence_;
  }
  /**
   * <pre>
   * Type and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;</code>
   */
  public org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidenceOrBuilder getTypeAndConfidenceOrBuilder() {
    return getTypeAndConfidence();
  }

  public static final int RECTANGULAR_BOX_AND_ACCURACY_FIELD_NUMBER = 6;
  /**
   * <pre>
   * Rectangular box and accuracy.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;</code>
   */
  public boolean hasRectangularBoxAndAccuracy() {
    return geometryCase_ == 6;
  }
  /**
   * <pre>
   * Rectangular box and accuracy.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;</code>
   */
  public org.sensoris.types.spatial.RectangularBoxAndAccuracy getRectangularBoxAndAccuracy() {
    if (geometryCase_ == 6) {
       return (org.sensoris.types.spatial.RectangularBoxAndAccuracy) geometry_;
    }
    return org.sensoris.types.spatial.RectangularBoxAndAccuracy.getDefaultInstance();
  }
  /**
   * <pre>
   * Rectangular box and accuracy.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;</code>
   */
  public org.sensoris.types.spatial.RectangularBoxAndAccuracyOrBuilder getRectangularBoxAndAccuracyOrBuilder() {
    if (geometryCase_ == 6) {
       return (org.sensoris.types.spatial.RectangularBoxAndAccuracy) geometry_;
    }
    return org.sensoris.types.spatial.RectangularBoxAndAccuracy.getDefaultInstance();
  }

  public static final int CONE_AND_ACCURACY_FIELD_NUMBER = 7;
  /**
   * <pre>
   * Cone shaped circular geometry defined by a lower and upper position and a lower and upper diameter.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy cone_and_accuracy = 7;</code>
   */
  public boolean hasConeAndAccuracy() {
    return geometryCase_ == 7;
  }
  /**
   * <pre>
   * Cone shaped circular geometry defined by a lower and upper position and a lower and upper diameter.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy cone_and_accuracy = 7;</code>
   */
  public org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy getConeAndAccuracy() {
    if (geometryCase_ == 7) {
       return (org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy) geometry_;
    }
    return org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.getDefaultInstance();
  }
  /**
   * <pre>
   * Cone shaped circular geometry defined by a lower and upper position and a lower and upper diameter.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy cone_and_accuracy = 7;</code>
   */
  public org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracyOrBuilder getConeAndAccuracyOrBuilder() {
    if (geometryCase_ == 7) {
       return (org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy) geometry_;
    }
    return org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.getDefaultInstance();
  }

  public static final int SURFACE_TYPE_AND_CONFIDENCE_FIELD_NUMBER = 8;
  private org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surfaceTypeAndConfidence_;
  /**
   * <pre>
   * Surface type and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;</code>
   */
  public boolean hasSurfaceTypeAndConfidence() {
    return surfaceTypeAndConfidence_ != null;
  }
  /**
   * <pre>
   * Surface type and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;</code>
   */
  public org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence getSurfaceTypeAndConfidence() {
    return surfaceTypeAndConfidence_ == null ? org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.getDefaultInstance() : surfaceTypeAndConfidence_;
  }
  /**
   * <pre>
   * Surface type and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;</code>
   */
  public org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidenceOrBuilder getSurfaceTypeAndConfidenceOrBuilder() {
    return getSurfaceTypeAndConfidence();
  }

  public static final int SURFACE_MATERIAL_AND_CONFIDENCE_FIELD_NUMBER = 9;
  private org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surfaceMaterialAndConfidence_;
  /**
   * <pre>
   * Surface material and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;</code>
   */
  public boolean hasSurfaceMaterialAndConfidence() {
    return surfaceMaterialAndConfidence_ != null;
  }
  /**
   * <pre>
   * Surface material and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;</code>
   */
  public org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence getSurfaceMaterialAndConfidence() {
    return surfaceMaterialAndConfidence_ == null ? org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.getDefaultInstance() : surfaceMaterialAndConfidence_;
  }
  /**
   * <pre>
   * Surface material and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;</code>
   */
  public org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidenceOrBuilder getSurfaceMaterialAndConfidenceOrBuilder() {
    return getSurfaceMaterialAndConfidence();
  }

  public static final int SURFACE_COLOR_AND_CONFIDENCE_FIELD_NUMBER = 10;
  private java.util.List<org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence> surfaceColorAndConfidence_;
  /**
   * <pre>
   * Surface color and confidence.
   * An object may have multiple colors. If only one color is set, this is the dominant color.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
   */
  public java.util.List<org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence> getSurfaceColorAndConfidenceList() {
    return surfaceColorAndConfidence_;
  }
  /**
   * <pre>
   * Surface color and confidence.
   * An object may have multiple colors. If only one color is set, this is the dominant color.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
   */
  public java.util.List<? extends org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidenceOrBuilder> 
      getSurfaceColorAndConfidenceOrBuilderList() {
    return surfaceColorAndConfidence_;
  }
  /**
   * <pre>
   * Surface color and confidence.
   * An object may have multiple colors. If only one color is set, this is the dominant color.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
   */
  public int getSurfaceColorAndConfidenceCount() {
    return surfaceColorAndConfidence_.size();
  }
  /**
   * <pre>
   * Surface color and confidence.
   * An object may have multiple colors. If only one color is set, this is the dominant color.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
   */
  public org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence getSurfaceColorAndConfidence(int index) {
    return surfaceColorAndConfidence_.get(index);
  }
  /**
   * <pre>
   * Surface color and confidence.
   * An object may have multiple colors. If only one color is set, this is the dominant color.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
   */
  public org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidenceOrBuilder getSurfaceColorAndConfidenceOrBuilder(
      int index) {
    return surfaceColorAndConfidence_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (envelope_ != null) {
      output.writeMessage(1, getEnvelope());
    }
    if (objectId_ != null) {
      output.writeMessage(2, getObjectId());
    }
    if (existenceConfidence_ != null) {
      output.writeMessage(3, getExistenceConfidence());
    }
    if (detectionStatus_ != null) {
      output.writeMessage(4, getDetectionStatus());
    }
    if (typeAndConfidence_ != null) {
      output.writeMessage(5, getTypeAndConfidence());
    }
    if (geometryCase_ == 6) {
      output.writeMessage(6, (org.sensoris.types.spatial.RectangularBoxAndAccuracy) geometry_);
    }
    if (geometryCase_ == 7) {
      output.writeMessage(7, (org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy) geometry_);
    }
    if (surfaceTypeAndConfidence_ != null) {
      output.writeMessage(8, getSurfaceTypeAndConfidence());
    }
    if (surfaceMaterialAndConfidence_ != null) {
      output.writeMessage(9, getSurfaceMaterialAndConfidence());
    }
    for (int i = 0; i < surfaceColorAndConfidence_.size(); i++) {
      output.writeMessage(10, surfaceColorAndConfidence_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (envelope_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getEnvelope());
    }
    if (objectId_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getObjectId());
    }
    if (existenceConfidence_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getExistenceConfidence());
    }
    if (detectionStatus_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getDetectionStatus());
    }
    if (typeAndConfidence_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getTypeAndConfidence());
    }
    if (geometryCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (org.sensoris.types.spatial.RectangularBoxAndAccuracy) geometry_);
    }
    if (geometryCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, (org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy) geometry_);
    }
    if (surfaceTypeAndConfidence_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getSurfaceTypeAndConfidence());
    }
    if (surfaceMaterialAndConfidence_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getSurfaceMaterialAndConfidence());
    }
    for (int i = 0; i < surfaceColorAndConfidence_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, surfaceColorAndConfidence_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.sensoris.categories.objectdetection.StaticObject)) {
      return super.equals(obj);
    }
    org.sensoris.categories.objectdetection.StaticObject other = (org.sensoris.categories.objectdetection.StaticObject) obj;

    boolean result = true;
    result = result && (hasEnvelope() == other.hasEnvelope());
    if (hasEnvelope()) {
      result = result && getEnvelope()
          .equals(other.getEnvelope());
    }
    result = result && (hasObjectId() == other.hasObjectId());
    if (hasObjectId()) {
      result = result && getObjectId()
          .equals(other.getObjectId());
    }
    result = result && (hasExistenceConfidence() == other.hasExistenceConfidence());
    if (hasExistenceConfidence()) {
      result = result && getExistenceConfidence()
          .equals(other.getExistenceConfidence());
    }
    result = result && (hasDetectionStatus() == other.hasDetectionStatus());
    if (hasDetectionStatus()) {
      result = result && getDetectionStatus()
          .equals(other.getDetectionStatus());
    }
    result = result && (hasTypeAndConfidence() == other.hasTypeAndConfidence());
    if (hasTypeAndConfidence()) {
      result = result && getTypeAndConfidence()
          .equals(other.getTypeAndConfidence());
    }
    result = result && (hasSurfaceTypeAndConfidence() == other.hasSurfaceTypeAndConfidence());
    if (hasSurfaceTypeAndConfidence()) {
      result = result && getSurfaceTypeAndConfidence()
          .equals(other.getSurfaceTypeAndConfidence());
    }
    result = result && (hasSurfaceMaterialAndConfidence() == other.hasSurfaceMaterialAndConfidence());
    if (hasSurfaceMaterialAndConfidence()) {
      result = result && getSurfaceMaterialAndConfidence()
          .equals(other.getSurfaceMaterialAndConfidence());
    }
    result = result && getSurfaceColorAndConfidenceList()
        .equals(other.getSurfaceColorAndConfidenceList());
    result = result && getGeometryCase().equals(
        other.getGeometryCase());
    if (!result) return false;
    switch (geometryCase_) {
      case 6:
        result = result && getRectangularBoxAndAccuracy()
            .equals(other.getRectangularBoxAndAccuracy());
        break;
      case 7:
        result = result && getConeAndAccuracy()
            .equals(other.getConeAndAccuracy());
        break;
      case 0:
      default:
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasEnvelope()) {
      hash = (37 * hash) + ENVELOPE_FIELD_NUMBER;
      hash = (53 * hash) + getEnvelope().hashCode();
    }
    if (hasObjectId()) {
      hash = (37 * hash) + OBJECT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getObjectId().hashCode();
    }
    if (hasExistenceConfidence()) {
      hash = (37 * hash) + EXISTENCE_CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + getExistenceConfidence().hashCode();
    }
    if (hasDetectionStatus()) {
      hash = (37 * hash) + DETECTION_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getDetectionStatus().hashCode();
    }
    if (hasTypeAndConfidence()) {
      hash = (37 * hash) + TYPE_AND_CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeAndConfidence().hashCode();
    }
    if (hasSurfaceTypeAndConfidence()) {
      hash = (37 * hash) + SURFACE_TYPE_AND_CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + getSurfaceTypeAndConfidence().hashCode();
    }
    if (hasSurfaceMaterialAndConfidence()) {
      hash = (37 * hash) + SURFACE_MATERIAL_AND_CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + getSurfaceMaterialAndConfidence().hashCode();
    }
    if (getSurfaceColorAndConfidenceCount() > 0) {
      hash = (37 * hash) + SURFACE_COLOR_AND_CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + getSurfaceColorAndConfidenceList().hashCode();
    }
    switch (geometryCase_) {
      case 6:
        hash = (37 * hash) + RECTANGULAR_BOX_AND_ACCURACY_FIELD_NUMBER;
        hash = (53 * hash) + getRectangularBoxAndAccuracy().hashCode();
        break;
      case 7:
        hash = (37 * hash) + CONE_AND_ACCURACY_FIELD_NUMBER;
        hash = (53 * hash) + getConeAndAccuracy().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.sensoris.categories.objectdetection.StaticObject parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.categories.objectdetection.StaticObject parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.categories.objectdetection.StaticObject parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.categories.objectdetection.StaticObject parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.categories.objectdetection.StaticObject parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.categories.objectdetection.StaticObject parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.categories.objectdetection.StaticObject parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.sensoris.categories.objectdetection.StaticObject parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.sensoris.categories.objectdetection.StaticObject parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.sensoris.categories.objectdetection.StaticObject parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.sensoris.categories.objectdetection.StaticObject parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.sensoris.categories.objectdetection.StaticObject parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.sensoris.categories.objectdetection.StaticObject prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Detected object, which is not able to move.
   * Traffic signs can be related to a static object of the type POLE or SIGN_BRIDGE.
   * Traffic lights can be related to static object of type TRAFFIC_LIGHT_BODY.
   * &#64;relation 1 sensoris.protobuf.categories.objectdetection.StaticObject CONTAIN 1..* sensoris.protobuf.categories.trafficregulation.TrafficSign
   * &#64;relation 1 sensoris.protobuf.categories.objectdetection.StaticObject CONTAIN 1..* sensoris.protobuf.categories.intersectionattribution.TrafficSignal
   * &#64;relation 1 sensoris.protobuf.categories.objectdetection.StaticObject MAP_REFERENCE 1 sensoris.protobuf.categories.map.MapReference
   * &#64;relation 1 sensoris.protobuf.categories.brake.BrakeSystemsStatus TRIGGERED_BY 1..* sensoris.protobuf.categories.objectdetection.StaticObject
   * &#64;relation 1..* sensoris.protobuf.categories.intersectionattribution.TrafficSignal EQUAL 1 sensoris.protobuf.categories.objectdetection.StaticObject
   * &#64;relation 1 sensoris.protobuf.categories.trafficmaneuver.Maneuver TRIGGERED_BY 1..* sensoris.protobuf.categories.objectdetection.StaticObject
   * &#64;relation 1 sensoris.protobuf.categories.roadattribution.Lane CONTAINS 1..* sensoris.protobuf.categories.objectdetection.StaticObject
   * </pre>
   *
   * Protobuf type {@code sensoris.protobuf.categories.objectdetection.StaticObject}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:sensoris.protobuf.categories.objectdetection.StaticObject)
      org.sensoris.categories.objectdetection.StaticObjectOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.sensoris.categories.objectdetection.StaticObject.class, org.sensoris.categories.objectdetection.StaticObject.Builder.class);
    }

    // Construct using org.sensoris.categories.objectdetection.StaticObject.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getSurfaceColorAndConfidenceFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (envelopeBuilder_ == null) {
        envelope_ = null;
      } else {
        envelope_ = null;
        envelopeBuilder_ = null;
      }
      if (objectIdBuilder_ == null) {
        objectId_ = null;
      } else {
        objectId_ = null;
        objectIdBuilder_ = null;
      }
      if (existenceConfidenceBuilder_ == null) {
        existenceConfidence_ = null;
      } else {
        existenceConfidence_ = null;
        existenceConfidenceBuilder_ = null;
      }
      if (detectionStatusBuilder_ == null) {
        detectionStatus_ = null;
      } else {
        detectionStatus_ = null;
        detectionStatusBuilder_ = null;
      }
      if (typeAndConfidenceBuilder_ == null) {
        typeAndConfidence_ = null;
      } else {
        typeAndConfidence_ = null;
        typeAndConfidenceBuilder_ = null;
      }
      if (surfaceTypeAndConfidenceBuilder_ == null) {
        surfaceTypeAndConfidence_ = null;
      } else {
        surfaceTypeAndConfidence_ = null;
        surfaceTypeAndConfidenceBuilder_ = null;
      }
      if (surfaceMaterialAndConfidenceBuilder_ == null) {
        surfaceMaterialAndConfidence_ = null;
      } else {
        surfaceMaterialAndConfidence_ = null;
        surfaceMaterialAndConfidenceBuilder_ = null;
      }
      if (surfaceColorAndConfidenceBuilder_ == null) {
        surfaceColorAndConfidence_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
      } else {
        surfaceColorAndConfidenceBuilder_.clear();
      }
      geometryCase_ = 0;
      geometry_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.sensoris.categories.objectdetection.SensorisObjectDetectionCategory.internal_static_sensoris_protobuf_categories_objectdetection_StaticObject_descriptor;
    }

    @java.lang.Override
    public org.sensoris.categories.objectdetection.StaticObject getDefaultInstanceForType() {
      return org.sensoris.categories.objectdetection.StaticObject.getDefaultInstance();
    }

    @java.lang.Override
    public org.sensoris.categories.objectdetection.StaticObject build() {
      org.sensoris.categories.objectdetection.StaticObject result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.sensoris.categories.objectdetection.StaticObject buildPartial() {
      org.sensoris.categories.objectdetection.StaticObject result = new org.sensoris.categories.objectdetection.StaticObject(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (envelopeBuilder_ == null) {
        result.envelope_ = envelope_;
      } else {
        result.envelope_ = envelopeBuilder_.build();
      }
      if (objectIdBuilder_ == null) {
        result.objectId_ = objectId_;
      } else {
        result.objectId_ = objectIdBuilder_.build();
      }
      if (existenceConfidenceBuilder_ == null) {
        result.existenceConfidence_ = existenceConfidence_;
      } else {
        result.existenceConfidence_ = existenceConfidenceBuilder_.build();
      }
      if (detectionStatusBuilder_ == null) {
        result.detectionStatus_ = detectionStatus_;
      } else {
        result.detectionStatus_ = detectionStatusBuilder_.build();
      }
      if (typeAndConfidenceBuilder_ == null) {
        result.typeAndConfidence_ = typeAndConfidence_;
      } else {
        result.typeAndConfidence_ = typeAndConfidenceBuilder_.build();
      }
      if (geometryCase_ == 6) {
        if (rectangularBoxAndAccuracyBuilder_ == null) {
          result.geometry_ = geometry_;
        } else {
          result.geometry_ = rectangularBoxAndAccuracyBuilder_.build();
        }
      }
      if (geometryCase_ == 7) {
        if (coneAndAccuracyBuilder_ == null) {
          result.geometry_ = geometry_;
        } else {
          result.geometry_ = coneAndAccuracyBuilder_.build();
        }
      }
      if (surfaceTypeAndConfidenceBuilder_ == null) {
        result.surfaceTypeAndConfidence_ = surfaceTypeAndConfidence_;
      } else {
        result.surfaceTypeAndConfidence_ = surfaceTypeAndConfidenceBuilder_.build();
      }
      if (surfaceMaterialAndConfidenceBuilder_ == null) {
        result.surfaceMaterialAndConfidence_ = surfaceMaterialAndConfidence_;
      } else {
        result.surfaceMaterialAndConfidence_ = surfaceMaterialAndConfidenceBuilder_.build();
      }
      if (surfaceColorAndConfidenceBuilder_ == null) {
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          surfaceColorAndConfidence_ = java.util.Collections.unmodifiableList(surfaceColorAndConfidence_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.surfaceColorAndConfidence_ = surfaceColorAndConfidence_;
      } else {
        result.surfaceColorAndConfidence_ = surfaceColorAndConfidenceBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      result.geometryCase_ = geometryCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.sensoris.categories.objectdetection.StaticObject) {
        return mergeFrom((org.sensoris.categories.objectdetection.StaticObject)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.sensoris.categories.objectdetection.StaticObject other) {
      if (other == org.sensoris.categories.objectdetection.StaticObject.getDefaultInstance()) return this;
      if (other.hasEnvelope()) {
        mergeEnvelope(other.getEnvelope());
      }
      if (other.hasObjectId()) {
        mergeObjectId(other.getObjectId());
      }
      if (other.hasExistenceConfidence()) {
        mergeExistenceConfidence(other.getExistenceConfidence());
      }
      if (other.hasDetectionStatus()) {
        mergeDetectionStatus(other.getDetectionStatus());
      }
      if (other.hasTypeAndConfidence()) {
        mergeTypeAndConfidence(other.getTypeAndConfidence());
      }
      if (other.hasSurfaceTypeAndConfidence()) {
        mergeSurfaceTypeAndConfidence(other.getSurfaceTypeAndConfidence());
      }
      if (other.hasSurfaceMaterialAndConfidence()) {
        mergeSurfaceMaterialAndConfidence(other.getSurfaceMaterialAndConfidence());
      }
      if (surfaceColorAndConfidenceBuilder_ == null) {
        if (!other.surfaceColorAndConfidence_.isEmpty()) {
          if (surfaceColorAndConfidence_.isEmpty()) {
            surfaceColorAndConfidence_ = other.surfaceColorAndConfidence_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureSurfaceColorAndConfidenceIsMutable();
            surfaceColorAndConfidence_.addAll(other.surfaceColorAndConfidence_);
          }
          onChanged();
        }
      } else {
        if (!other.surfaceColorAndConfidence_.isEmpty()) {
          if (surfaceColorAndConfidenceBuilder_.isEmpty()) {
            surfaceColorAndConfidenceBuilder_.dispose();
            surfaceColorAndConfidenceBuilder_ = null;
            surfaceColorAndConfidence_ = other.surfaceColorAndConfidence_;
            bitField0_ = (bitField0_ & ~0x00000200);
            surfaceColorAndConfidenceBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSurfaceColorAndConfidenceFieldBuilder() : null;
          } else {
            surfaceColorAndConfidenceBuilder_.addAllMessages(other.surfaceColorAndConfidence_);
          }
        }
      }
      switch (other.getGeometryCase()) {
        case RECTANGULAR_BOX_AND_ACCURACY: {
          mergeRectangularBoxAndAccuracy(other.getRectangularBoxAndAccuracy());
          break;
        }
        case CONE_AND_ACCURACY: {
          mergeConeAndAccuracy(other.getConeAndAccuracy());
          break;
        }
        case GEOMETRY_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.sensoris.categories.objectdetection.StaticObject parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.sensoris.categories.objectdetection.StaticObject) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int geometryCase_ = 0;
    private java.lang.Object geometry_;
    public GeometryCase
        getGeometryCase() {
      return GeometryCase.forNumber(
          geometryCase_);
    }

    public Builder clearGeometry() {
      geometryCase_ = 0;
      geometry_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private org.sensoris.types.base.EventEnvelope envelope_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.EventEnvelope, org.sensoris.types.base.EventEnvelope.Builder, org.sensoris.types.base.EventEnvelopeOrBuilder> envelopeBuilder_;
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public boolean hasEnvelope() {
      return envelopeBuilder_ != null || envelope_ != null;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public org.sensoris.types.base.EventEnvelope getEnvelope() {
      if (envelopeBuilder_ == null) {
        return envelope_ == null ? org.sensoris.types.base.EventEnvelope.getDefaultInstance() : envelope_;
      } else {
        return envelopeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public Builder setEnvelope(org.sensoris.types.base.EventEnvelope value) {
      if (envelopeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        envelope_ = value;
        onChanged();
      } else {
        envelopeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public Builder setEnvelope(
        org.sensoris.types.base.EventEnvelope.Builder builderForValue) {
      if (envelopeBuilder_ == null) {
        envelope_ = builderForValue.build();
        onChanged();
      } else {
        envelopeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public Builder mergeEnvelope(org.sensoris.types.base.EventEnvelope value) {
      if (envelopeBuilder_ == null) {
        if (envelope_ != null) {
          envelope_ =
            org.sensoris.types.base.EventEnvelope.newBuilder(envelope_).mergeFrom(value).buildPartial();
        } else {
          envelope_ = value;
        }
        onChanged();
      } else {
        envelopeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public Builder clearEnvelope() {
      if (envelopeBuilder_ == null) {
        envelope_ = null;
        onChanged();
      } else {
        envelope_ = null;
        envelopeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public org.sensoris.types.base.EventEnvelope.Builder getEnvelopeBuilder() {
      
      onChanged();
      return getEnvelopeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public org.sensoris.types.base.EventEnvelopeOrBuilder getEnvelopeOrBuilder() {
      if (envelopeBuilder_ != null) {
        return envelopeBuilder_.getMessageOrBuilder();
      } else {
        return envelope_ == null ?
            org.sensoris.types.base.EventEnvelope.getDefaultInstance() : envelope_;
      }
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.EventEnvelope, org.sensoris.types.base.EventEnvelope.Builder, org.sensoris.types.base.EventEnvelopeOrBuilder> 
        getEnvelopeFieldBuilder() {
      if (envelopeBuilder_ == null) {
        envelopeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.base.EventEnvelope, org.sensoris.types.base.EventEnvelope.Builder, org.sensoris.types.base.EventEnvelopeOrBuilder>(
                getEnvelope(),
                getParentForChildren(),
                isClean());
        envelope_ = null;
      }
      return envelopeBuilder_;
    }

    private com.google.protobuf.Int64Value objectId_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> objectIdBuilder_;
    /**
     * <pre>
     * Static object identifier.
     * Identifier is unique within a DataMessage and can be used to trace static objects.
     * &#64;unit 1
     * &#64;resolution 1
     * &#64;range [1, )
     * </pre>
     *
     * <code>.google.protobuf.Int64Value object_id = 2;</code>
     */
    public boolean hasObjectId() {
      return objectIdBuilder_ != null || objectId_ != null;
    }
    /**
     * <pre>
     * Static object identifier.
     * Identifier is unique within a DataMessage and can be used to trace static objects.
     * &#64;unit 1
     * &#64;resolution 1
     * &#64;range [1, )
     * </pre>
     *
     * <code>.google.protobuf.Int64Value object_id = 2;</code>
     */
    public com.google.protobuf.Int64Value getObjectId() {
      if (objectIdBuilder_ == null) {
        return objectId_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : objectId_;
      } else {
        return objectIdBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Static object identifier.
     * Identifier is unique within a DataMessage and can be used to trace static objects.
     * &#64;unit 1
     * &#64;resolution 1
     * &#64;range [1, )
     * </pre>
     *
     * <code>.google.protobuf.Int64Value object_id = 2;</code>
     */
    public Builder setObjectId(com.google.protobuf.Int64Value value) {
      if (objectIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        objectId_ = value;
        onChanged();
      } else {
        objectIdBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Static object identifier.
     * Identifier is unique within a DataMessage and can be used to trace static objects.
     * &#64;unit 1
     * &#64;resolution 1
     * &#64;range [1, )
     * </pre>
     *
     * <code>.google.protobuf.Int64Value object_id = 2;</code>
     */
    public Builder setObjectId(
        com.google.protobuf.Int64Value.Builder builderForValue) {
      if (objectIdBuilder_ == null) {
        objectId_ = builderForValue.build();
        onChanged();
      } else {
        objectIdBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Static object identifier.
     * Identifier is unique within a DataMessage and can be used to trace static objects.
     * &#64;unit 1
     * &#64;resolution 1
     * &#64;range [1, )
     * </pre>
     *
     * <code>.google.protobuf.Int64Value object_id = 2;</code>
     */
    public Builder mergeObjectId(com.google.protobuf.Int64Value value) {
      if (objectIdBuilder_ == null) {
        if (objectId_ != null) {
          objectId_ =
            com.google.protobuf.Int64Value.newBuilder(objectId_).mergeFrom(value).buildPartial();
        } else {
          objectId_ = value;
        }
        onChanged();
      } else {
        objectIdBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Static object identifier.
     * Identifier is unique within a DataMessage and can be used to trace static objects.
     * &#64;unit 1
     * &#64;resolution 1
     * &#64;range [1, )
     * </pre>
     *
     * <code>.google.protobuf.Int64Value object_id = 2;</code>
     */
    public Builder clearObjectId() {
      if (objectIdBuilder_ == null) {
        objectId_ = null;
        onChanged();
      } else {
        objectId_ = null;
        objectIdBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Static object identifier.
     * Identifier is unique within a DataMessage and can be used to trace static objects.
     * &#64;unit 1
     * &#64;resolution 1
     * &#64;range [1, )
     * </pre>
     *
     * <code>.google.protobuf.Int64Value object_id = 2;</code>
     */
    public com.google.protobuf.Int64Value.Builder getObjectIdBuilder() {
      
      onChanged();
      return getObjectIdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Static object identifier.
     * Identifier is unique within a DataMessage and can be used to trace static objects.
     * &#64;unit 1
     * &#64;resolution 1
     * &#64;range [1, )
     * </pre>
     *
     * <code>.google.protobuf.Int64Value object_id = 2;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getObjectIdOrBuilder() {
      if (objectIdBuilder_ != null) {
        return objectIdBuilder_.getMessageOrBuilder();
      } else {
        return objectId_ == null ?
            com.google.protobuf.Int64Value.getDefaultInstance() : objectId_;
      }
    }
    /**
     * <pre>
     * Static object identifier.
     * Identifier is unique within a DataMessage and can be used to trace static objects.
     * &#64;unit 1
     * &#64;resolution 1
     * &#64;range [1, )
     * </pre>
     *
     * <code>.google.protobuf.Int64Value object_id = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
        getObjectIdFieldBuilder() {
      if (objectIdBuilder_ == null) {
        objectIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                getObjectId(),
                getParentForChildren(),
                isClean());
        objectId_ = null;
      }
      return objectIdBuilder_;
    }

    private org.sensoris.types.base.Confidence existenceConfidence_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder> existenceConfidenceBuilder_;
    /**
     * <pre>
     * Confidence that a static object has been detected.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 3;</code>
     */
    public boolean hasExistenceConfidence() {
      return existenceConfidenceBuilder_ != null || existenceConfidence_ != null;
    }
    /**
     * <pre>
     * Confidence that a static object has been detected.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 3;</code>
     */
    public org.sensoris.types.base.Confidence getExistenceConfidence() {
      if (existenceConfidenceBuilder_ == null) {
        return existenceConfidence_ == null ? org.sensoris.types.base.Confidence.getDefaultInstance() : existenceConfidence_;
      } else {
        return existenceConfidenceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Confidence that a static object has been detected.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 3;</code>
     */
    public Builder setExistenceConfidence(org.sensoris.types.base.Confidence value) {
      if (existenceConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        existenceConfidence_ = value;
        onChanged();
      } else {
        existenceConfidenceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Confidence that a static object has been detected.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 3;</code>
     */
    public Builder setExistenceConfidence(
        org.sensoris.types.base.Confidence.Builder builderForValue) {
      if (existenceConfidenceBuilder_ == null) {
        existenceConfidence_ = builderForValue.build();
        onChanged();
      } else {
        existenceConfidenceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Confidence that a static object has been detected.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 3;</code>
     */
    public Builder mergeExistenceConfidence(org.sensoris.types.base.Confidence value) {
      if (existenceConfidenceBuilder_ == null) {
        if (existenceConfidence_ != null) {
          existenceConfidence_ =
            org.sensoris.types.base.Confidence.newBuilder(existenceConfidence_).mergeFrom(value).buildPartial();
        } else {
          existenceConfidence_ = value;
        }
        onChanged();
      } else {
        existenceConfidenceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Confidence that a static object has been detected.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 3;</code>
     */
    public Builder clearExistenceConfidence() {
      if (existenceConfidenceBuilder_ == null) {
        existenceConfidence_ = null;
        onChanged();
      } else {
        existenceConfidence_ = null;
        existenceConfidenceBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Confidence that a static object has been detected.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 3;</code>
     */
    public org.sensoris.types.base.Confidence.Builder getExistenceConfidenceBuilder() {
      
      onChanged();
      return getExistenceConfidenceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Confidence that a static object has been detected.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 3;</code>
     */
    public org.sensoris.types.base.ConfidenceOrBuilder getExistenceConfidenceOrBuilder() {
      if (existenceConfidenceBuilder_ != null) {
        return existenceConfidenceBuilder_.getMessageOrBuilder();
      } else {
        return existenceConfidence_ == null ?
            org.sensoris.types.base.Confidence.getDefaultInstance() : existenceConfidence_;
      }
    }
    /**
     * <pre>
     * Confidence that a static object has been detected.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder> 
        getExistenceConfidenceFieldBuilder() {
      if (existenceConfidenceBuilder_ == null) {
        existenceConfidenceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder>(
                getExistenceConfidence(),
                getParentForChildren(),
                isClean());
        existenceConfidence_ = null;
      }
      return existenceConfidenceBuilder_;
    }

    private org.sensoris.types.base.EventDetectionStatus detectionStatus_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.EventDetectionStatus, org.sensoris.types.base.EventDetectionStatus.Builder, org.sensoris.types.base.EventDetectionStatusOrBuilder> detectionStatusBuilder_;
    /**
     * <pre>
     * Event detection status.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;</code>
     */
    public boolean hasDetectionStatus() {
      return detectionStatusBuilder_ != null || detectionStatus_ != null;
    }
    /**
     * <pre>
     * Event detection status.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;</code>
     */
    public org.sensoris.types.base.EventDetectionStatus getDetectionStatus() {
      if (detectionStatusBuilder_ == null) {
        return detectionStatus_ == null ? org.sensoris.types.base.EventDetectionStatus.getDefaultInstance() : detectionStatus_;
      } else {
        return detectionStatusBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Event detection status.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;</code>
     */
    public Builder setDetectionStatus(org.sensoris.types.base.EventDetectionStatus value) {
      if (detectionStatusBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        detectionStatus_ = value;
        onChanged();
      } else {
        detectionStatusBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Event detection status.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;</code>
     */
    public Builder setDetectionStatus(
        org.sensoris.types.base.EventDetectionStatus.Builder builderForValue) {
      if (detectionStatusBuilder_ == null) {
        detectionStatus_ = builderForValue.build();
        onChanged();
      } else {
        detectionStatusBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Event detection status.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;</code>
     */
    public Builder mergeDetectionStatus(org.sensoris.types.base.EventDetectionStatus value) {
      if (detectionStatusBuilder_ == null) {
        if (detectionStatus_ != null) {
          detectionStatus_ =
            org.sensoris.types.base.EventDetectionStatus.newBuilder(detectionStatus_).mergeFrom(value).buildPartial();
        } else {
          detectionStatus_ = value;
        }
        onChanged();
      } else {
        detectionStatusBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Event detection status.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;</code>
     */
    public Builder clearDetectionStatus() {
      if (detectionStatusBuilder_ == null) {
        detectionStatus_ = null;
        onChanged();
      } else {
        detectionStatus_ = null;
        detectionStatusBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Event detection status.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;</code>
     */
    public org.sensoris.types.base.EventDetectionStatus.Builder getDetectionStatusBuilder() {
      
      onChanged();
      return getDetectionStatusFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Event detection status.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;</code>
     */
    public org.sensoris.types.base.EventDetectionStatusOrBuilder getDetectionStatusOrBuilder() {
      if (detectionStatusBuilder_ != null) {
        return detectionStatusBuilder_.getMessageOrBuilder();
      } else {
        return detectionStatus_ == null ?
            org.sensoris.types.base.EventDetectionStatus.getDefaultInstance() : detectionStatus_;
      }
    }
    /**
     * <pre>
     * Event detection status.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.EventDetectionStatus, org.sensoris.types.base.EventDetectionStatus.Builder, org.sensoris.types.base.EventDetectionStatusOrBuilder> 
        getDetectionStatusFieldBuilder() {
      if (detectionStatusBuilder_ == null) {
        detectionStatusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.base.EventDetectionStatus, org.sensoris.types.base.EventDetectionStatus.Builder, org.sensoris.types.base.EventDetectionStatusOrBuilder>(
                getDetectionStatus(),
                getParentForChildren(),
                isClean());
        detectionStatus_ = null;
      }
      return detectionStatusBuilder_;
    }

    private org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence typeAndConfidence_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence, org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.Builder, org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidenceOrBuilder> typeAndConfidenceBuilder_;
    /**
     * <pre>
     * Type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;</code>
     */
    public boolean hasTypeAndConfidence() {
      return typeAndConfidenceBuilder_ != null || typeAndConfidence_ != null;
    }
    /**
     * <pre>
     * Type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence getTypeAndConfidence() {
      if (typeAndConfidenceBuilder_ == null) {
        return typeAndConfidence_ == null ? org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.getDefaultInstance() : typeAndConfidence_;
      } else {
        return typeAndConfidenceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;</code>
     */
    public Builder setTypeAndConfidence(org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence value) {
      if (typeAndConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        typeAndConfidence_ = value;
        onChanged();
      } else {
        typeAndConfidenceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;</code>
     */
    public Builder setTypeAndConfidence(
        org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.Builder builderForValue) {
      if (typeAndConfidenceBuilder_ == null) {
        typeAndConfidence_ = builderForValue.build();
        onChanged();
      } else {
        typeAndConfidenceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;</code>
     */
    public Builder mergeTypeAndConfidence(org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence value) {
      if (typeAndConfidenceBuilder_ == null) {
        if (typeAndConfidence_ != null) {
          typeAndConfidence_ =
            org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.newBuilder(typeAndConfidence_).mergeFrom(value).buildPartial();
        } else {
          typeAndConfidence_ = value;
        }
        onChanged();
      } else {
        typeAndConfidenceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;</code>
     */
    public Builder clearTypeAndConfidence() {
      if (typeAndConfidenceBuilder_ == null) {
        typeAndConfidence_ = null;
        onChanged();
      } else {
        typeAndConfidence_ = null;
        typeAndConfidenceBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.Builder getTypeAndConfidenceBuilder() {
      
      onChanged();
      return getTypeAndConfidenceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidenceOrBuilder getTypeAndConfidenceOrBuilder() {
      if (typeAndConfidenceBuilder_ != null) {
        return typeAndConfidenceBuilder_.getMessageOrBuilder();
      } else {
        return typeAndConfidence_ == null ?
            org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.getDefaultInstance() : typeAndConfidence_;
      }
    }
    /**
     * <pre>
     * Type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence, org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.Builder, org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidenceOrBuilder> 
        getTypeAndConfidenceFieldBuilder() {
      if (typeAndConfidenceBuilder_ == null) {
        typeAndConfidenceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence, org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidence.Builder, org.sensoris.categories.objectdetection.StaticObject.TypeAndConfidenceOrBuilder>(
                getTypeAndConfidence(),
                getParentForChildren(),
                isClean());
        typeAndConfidence_ = null;
      }
      return typeAndConfidenceBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.spatial.RectangularBoxAndAccuracy, org.sensoris.types.spatial.RectangularBoxAndAccuracy.Builder, org.sensoris.types.spatial.RectangularBoxAndAccuracyOrBuilder> rectangularBoxAndAccuracyBuilder_;
    /**
     * <pre>
     * Rectangular box and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;</code>
     */
    public boolean hasRectangularBoxAndAccuracy() {
      return geometryCase_ == 6;
    }
    /**
     * <pre>
     * Rectangular box and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;</code>
     */
    public org.sensoris.types.spatial.RectangularBoxAndAccuracy getRectangularBoxAndAccuracy() {
      if (rectangularBoxAndAccuracyBuilder_ == null) {
        if (geometryCase_ == 6) {
          return (org.sensoris.types.spatial.RectangularBoxAndAccuracy) geometry_;
        }
        return org.sensoris.types.spatial.RectangularBoxAndAccuracy.getDefaultInstance();
      } else {
        if (geometryCase_ == 6) {
          return rectangularBoxAndAccuracyBuilder_.getMessage();
        }
        return org.sensoris.types.spatial.RectangularBoxAndAccuracy.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Rectangular box and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;</code>
     */
    public Builder setRectangularBoxAndAccuracy(org.sensoris.types.spatial.RectangularBoxAndAccuracy value) {
      if (rectangularBoxAndAccuracyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        geometry_ = value;
        onChanged();
      } else {
        rectangularBoxAndAccuracyBuilder_.setMessage(value);
      }
      geometryCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Rectangular box and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;</code>
     */
    public Builder setRectangularBoxAndAccuracy(
        org.sensoris.types.spatial.RectangularBoxAndAccuracy.Builder builderForValue) {
      if (rectangularBoxAndAccuracyBuilder_ == null) {
        geometry_ = builderForValue.build();
        onChanged();
      } else {
        rectangularBoxAndAccuracyBuilder_.setMessage(builderForValue.build());
      }
      geometryCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Rectangular box and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;</code>
     */
    public Builder mergeRectangularBoxAndAccuracy(org.sensoris.types.spatial.RectangularBoxAndAccuracy value) {
      if (rectangularBoxAndAccuracyBuilder_ == null) {
        if (geometryCase_ == 6 &&
            geometry_ != org.sensoris.types.spatial.RectangularBoxAndAccuracy.getDefaultInstance()) {
          geometry_ = org.sensoris.types.spatial.RectangularBoxAndAccuracy.newBuilder((org.sensoris.types.spatial.RectangularBoxAndAccuracy) geometry_)
              .mergeFrom(value).buildPartial();
        } else {
          geometry_ = value;
        }
        onChanged();
      } else {
        if (geometryCase_ == 6) {
          rectangularBoxAndAccuracyBuilder_.mergeFrom(value);
        }
        rectangularBoxAndAccuracyBuilder_.setMessage(value);
      }
      geometryCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Rectangular box and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;</code>
     */
    public Builder clearRectangularBoxAndAccuracy() {
      if (rectangularBoxAndAccuracyBuilder_ == null) {
        if (geometryCase_ == 6) {
          geometryCase_ = 0;
          geometry_ = null;
          onChanged();
        }
      } else {
        if (geometryCase_ == 6) {
          geometryCase_ = 0;
          geometry_ = null;
        }
        rectangularBoxAndAccuracyBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Rectangular box and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;</code>
     */
    public org.sensoris.types.spatial.RectangularBoxAndAccuracy.Builder getRectangularBoxAndAccuracyBuilder() {
      return getRectangularBoxAndAccuracyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Rectangular box and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;</code>
     */
    public org.sensoris.types.spatial.RectangularBoxAndAccuracyOrBuilder getRectangularBoxAndAccuracyOrBuilder() {
      if ((geometryCase_ == 6) && (rectangularBoxAndAccuracyBuilder_ != null)) {
        return rectangularBoxAndAccuracyBuilder_.getMessageOrBuilder();
      } else {
        if (geometryCase_ == 6) {
          return (org.sensoris.types.spatial.RectangularBoxAndAccuracy) geometry_;
        }
        return org.sensoris.types.spatial.RectangularBoxAndAccuracy.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Rectangular box and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.spatial.RectangularBoxAndAccuracy, org.sensoris.types.spatial.RectangularBoxAndAccuracy.Builder, org.sensoris.types.spatial.RectangularBoxAndAccuracyOrBuilder> 
        getRectangularBoxAndAccuracyFieldBuilder() {
      if (rectangularBoxAndAccuracyBuilder_ == null) {
        if (!(geometryCase_ == 6)) {
          geometry_ = org.sensoris.types.spatial.RectangularBoxAndAccuracy.getDefaultInstance();
        }
        rectangularBoxAndAccuracyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.spatial.RectangularBoxAndAccuracy, org.sensoris.types.spatial.RectangularBoxAndAccuracy.Builder, org.sensoris.types.spatial.RectangularBoxAndAccuracyOrBuilder>(
                (org.sensoris.types.spatial.RectangularBoxAndAccuracy) geometry_,
                getParentForChildren(),
                isClean());
        geometry_ = null;
      }
      geometryCase_ = 6;
      onChanged();;
      return rectangularBoxAndAccuracyBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy, org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.Builder, org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracyOrBuilder> coneAndAccuracyBuilder_;
    /**
     * <pre>
     * Cone shaped circular geometry defined by a lower and upper position and a lower and upper diameter.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy cone_and_accuracy = 7;</code>
     */
    public boolean hasConeAndAccuracy() {
      return geometryCase_ == 7;
    }
    /**
     * <pre>
     * Cone shaped circular geometry defined by a lower and upper position and a lower and upper diameter.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy cone_and_accuracy = 7;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy getConeAndAccuracy() {
      if (coneAndAccuracyBuilder_ == null) {
        if (geometryCase_ == 7) {
          return (org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy) geometry_;
        }
        return org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.getDefaultInstance();
      } else {
        if (geometryCase_ == 7) {
          return coneAndAccuracyBuilder_.getMessage();
        }
        return org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Cone shaped circular geometry defined by a lower and upper position and a lower and upper diameter.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy cone_and_accuracy = 7;</code>
     */
    public Builder setConeAndAccuracy(org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy value) {
      if (coneAndAccuracyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        geometry_ = value;
        onChanged();
      } else {
        coneAndAccuracyBuilder_.setMessage(value);
      }
      geometryCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * Cone shaped circular geometry defined by a lower and upper position and a lower and upper diameter.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy cone_and_accuracy = 7;</code>
     */
    public Builder setConeAndAccuracy(
        org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.Builder builderForValue) {
      if (coneAndAccuracyBuilder_ == null) {
        geometry_ = builderForValue.build();
        onChanged();
      } else {
        coneAndAccuracyBuilder_.setMessage(builderForValue.build());
      }
      geometryCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * Cone shaped circular geometry defined by a lower and upper position and a lower and upper diameter.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy cone_and_accuracy = 7;</code>
     */
    public Builder mergeConeAndAccuracy(org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy value) {
      if (coneAndAccuracyBuilder_ == null) {
        if (geometryCase_ == 7 &&
            geometry_ != org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.getDefaultInstance()) {
          geometry_ = org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.newBuilder((org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy) geometry_)
              .mergeFrom(value).buildPartial();
        } else {
          geometry_ = value;
        }
        onChanged();
      } else {
        if (geometryCase_ == 7) {
          coneAndAccuracyBuilder_.mergeFrom(value);
        }
        coneAndAccuracyBuilder_.setMessage(value);
      }
      geometryCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * Cone shaped circular geometry defined by a lower and upper position and a lower and upper diameter.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy cone_and_accuracy = 7;</code>
     */
    public Builder clearConeAndAccuracy() {
      if (coneAndAccuracyBuilder_ == null) {
        if (geometryCase_ == 7) {
          geometryCase_ = 0;
          geometry_ = null;
          onChanged();
        }
      } else {
        if (geometryCase_ == 7) {
          geometryCase_ = 0;
          geometry_ = null;
        }
        coneAndAccuracyBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Cone shaped circular geometry defined by a lower and upper position and a lower and upper diameter.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy cone_and_accuracy = 7;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.Builder getConeAndAccuracyBuilder() {
      return getConeAndAccuracyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Cone shaped circular geometry defined by a lower and upper position and a lower and upper diameter.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy cone_and_accuracy = 7;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracyOrBuilder getConeAndAccuracyOrBuilder() {
      if ((geometryCase_ == 7) && (coneAndAccuracyBuilder_ != null)) {
        return coneAndAccuracyBuilder_.getMessageOrBuilder();
      } else {
        if (geometryCase_ == 7) {
          return (org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy) geometry_;
        }
        return org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Cone shaped circular geometry defined by a lower and upper position and a lower and upper diameter.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy cone_and_accuracy = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy, org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.Builder, org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracyOrBuilder> 
        getConeAndAccuracyFieldBuilder() {
      if (coneAndAccuracyBuilder_ == null) {
        if (!(geometryCase_ == 7)) {
          geometry_ = org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.getDefaultInstance();
        }
        coneAndAccuracyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy, org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy.Builder, org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracyOrBuilder>(
                (org.sensoris.categories.objectdetection.StaticObject.ConeAndAccuracy) geometry_,
                getParentForChildren(),
                isClean());
        geometry_ = null;
      }
      geometryCase_ = 7;
      onChanged();;
      return coneAndAccuracyBuilder_;
    }

    private org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surfaceTypeAndConfidence_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence, org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Builder, org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidenceOrBuilder> surfaceTypeAndConfidenceBuilder_;
    /**
     * <pre>
     * Surface type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;</code>
     */
    public boolean hasSurfaceTypeAndConfidence() {
      return surfaceTypeAndConfidenceBuilder_ != null || surfaceTypeAndConfidence_ != null;
    }
    /**
     * <pre>
     * Surface type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence getSurfaceTypeAndConfidence() {
      if (surfaceTypeAndConfidenceBuilder_ == null) {
        return surfaceTypeAndConfidence_ == null ? org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.getDefaultInstance() : surfaceTypeAndConfidence_;
      } else {
        return surfaceTypeAndConfidenceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Surface type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;</code>
     */
    public Builder setSurfaceTypeAndConfidence(org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence value) {
      if (surfaceTypeAndConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        surfaceTypeAndConfidence_ = value;
        onChanged();
      } else {
        surfaceTypeAndConfidenceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Surface type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;</code>
     */
    public Builder setSurfaceTypeAndConfidence(
        org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Builder builderForValue) {
      if (surfaceTypeAndConfidenceBuilder_ == null) {
        surfaceTypeAndConfidence_ = builderForValue.build();
        onChanged();
      } else {
        surfaceTypeAndConfidenceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Surface type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;</code>
     */
    public Builder mergeSurfaceTypeAndConfidence(org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence value) {
      if (surfaceTypeAndConfidenceBuilder_ == null) {
        if (surfaceTypeAndConfidence_ != null) {
          surfaceTypeAndConfidence_ =
            org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.newBuilder(surfaceTypeAndConfidence_).mergeFrom(value).buildPartial();
        } else {
          surfaceTypeAndConfidence_ = value;
        }
        onChanged();
      } else {
        surfaceTypeAndConfidenceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Surface type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;</code>
     */
    public Builder clearSurfaceTypeAndConfidence() {
      if (surfaceTypeAndConfidenceBuilder_ == null) {
        surfaceTypeAndConfidence_ = null;
        onChanged();
      } else {
        surfaceTypeAndConfidence_ = null;
        surfaceTypeAndConfidenceBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Surface type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Builder getSurfaceTypeAndConfidenceBuilder() {
      
      onChanged();
      return getSurfaceTypeAndConfidenceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Surface type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidenceOrBuilder getSurfaceTypeAndConfidenceOrBuilder() {
      if (surfaceTypeAndConfidenceBuilder_ != null) {
        return surfaceTypeAndConfidenceBuilder_.getMessageOrBuilder();
      } else {
        return surfaceTypeAndConfidence_ == null ?
            org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.getDefaultInstance() : surfaceTypeAndConfidence_;
      }
    }
    /**
     * <pre>
     * Surface type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence, org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Builder, org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidenceOrBuilder> 
        getSurfaceTypeAndConfidenceFieldBuilder() {
      if (surfaceTypeAndConfidenceBuilder_ == null) {
        surfaceTypeAndConfidenceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence, org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Builder, org.sensoris.categories.objectdetection.StaticObject.SurfaceTypeAndConfidenceOrBuilder>(
                getSurfaceTypeAndConfidence(),
                getParentForChildren(),
                isClean());
        surfaceTypeAndConfidence_ = null;
      }
      return surfaceTypeAndConfidenceBuilder_;
    }

    private org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surfaceMaterialAndConfidence_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence, org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Builder, org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidenceOrBuilder> surfaceMaterialAndConfidenceBuilder_;
    /**
     * <pre>
     * Surface material and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;</code>
     */
    public boolean hasSurfaceMaterialAndConfidence() {
      return surfaceMaterialAndConfidenceBuilder_ != null || surfaceMaterialAndConfidence_ != null;
    }
    /**
     * <pre>
     * Surface material and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence getSurfaceMaterialAndConfidence() {
      if (surfaceMaterialAndConfidenceBuilder_ == null) {
        return surfaceMaterialAndConfidence_ == null ? org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.getDefaultInstance() : surfaceMaterialAndConfidence_;
      } else {
        return surfaceMaterialAndConfidenceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Surface material and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;</code>
     */
    public Builder setSurfaceMaterialAndConfidence(org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence value) {
      if (surfaceMaterialAndConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        surfaceMaterialAndConfidence_ = value;
        onChanged();
      } else {
        surfaceMaterialAndConfidenceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Surface material and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;</code>
     */
    public Builder setSurfaceMaterialAndConfidence(
        org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Builder builderForValue) {
      if (surfaceMaterialAndConfidenceBuilder_ == null) {
        surfaceMaterialAndConfidence_ = builderForValue.build();
        onChanged();
      } else {
        surfaceMaterialAndConfidenceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Surface material and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;</code>
     */
    public Builder mergeSurfaceMaterialAndConfidence(org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence value) {
      if (surfaceMaterialAndConfidenceBuilder_ == null) {
        if (surfaceMaterialAndConfidence_ != null) {
          surfaceMaterialAndConfidence_ =
            org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.newBuilder(surfaceMaterialAndConfidence_).mergeFrom(value).buildPartial();
        } else {
          surfaceMaterialAndConfidence_ = value;
        }
        onChanged();
      } else {
        surfaceMaterialAndConfidenceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Surface material and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;</code>
     */
    public Builder clearSurfaceMaterialAndConfidence() {
      if (surfaceMaterialAndConfidenceBuilder_ == null) {
        surfaceMaterialAndConfidence_ = null;
        onChanged();
      } else {
        surfaceMaterialAndConfidence_ = null;
        surfaceMaterialAndConfidenceBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Surface material and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Builder getSurfaceMaterialAndConfidenceBuilder() {
      
      onChanged();
      return getSurfaceMaterialAndConfidenceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Surface material and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidenceOrBuilder getSurfaceMaterialAndConfidenceOrBuilder() {
      if (surfaceMaterialAndConfidenceBuilder_ != null) {
        return surfaceMaterialAndConfidenceBuilder_.getMessageOrBuilder();
      } else {
        return surfaceMaterialAndConfidence_ == null ?
            org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.getDefaultInstance() : surfaceMaterialAndConfidence_;
      }
    }
    /**
     * <pre>
     * Surface material and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence, org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Builder, org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidenceOrBuilder> 
        getSurfaceMaterialAndConfidenceFieldBuilder() {
      if (surfaceMaterialAndConfidenceBuilder_ == null) {
        surfaceMaterialAndConfidenceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence, org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Builder, org.sensoris.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidenceOrBuilder>(
                getSurfaceMaterialAndConfidence(),
                getParentForChildren(),
                isClean());
        surfaceMaterialAndConfidence_ = null;
      }
      return surfaceMaterialAndConfidenceBuilder_;
    }

    private java.util.List<org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence> surfaceColorAndConfidence_ =
      java.util.Collections.emptyList();
    private void ensureSurfaceColorAndConfidenceIsMutable() {
      if (!((bitField0_ & 0x00000200) == 0x00000200)) {
        surfaceColorAndConfidence_ = new java.util.ArrayList<org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence>(surfaceColorAndConfidence_);
        bitField0_ |= 0x00000200;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence, org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Builder, org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidenceOrBuilder> surfaceColorAndConfidenceBuilder_;

    /**
     * <pre>
     * Surface color and confidence.
     * An object may have multiple colors. If only one color is set, this is the dominant color.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
     */
    public java.util.List<org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence> getSurfaceColorAndConfidenceList() {
      if (surfaceColorAndConfidenceBuilder_ == null) {
        return java.util.Collections.unmodifiableList(surfaceColorAndConfidence_);
      } else {
        return surfaceColorAndConfidenceBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Surface color and confidence.
     * An object may have multiple colors. If only one color is set, this is the dominant color.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
     */
    public int getSurfaceColorAndConfidenceCount() {
      if (surfaceColorAndConfidenceBuilder_ == null) {
        return surfaceColorAndConfidence_.size();
      } else {
        return surfaceColorAndConfidenceBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Surface color and confidence.
     * An object may have multiple colors. If only one color is set, this is the dominant color.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence getSurfaceColorAndConfidence(int index) {
      if (surfaceColorAndConfidenceBuilder_ == null) {
        return surfaceColorAndConfidence_.get(index);
      } else {
        return surfaceColorAndConfidenceBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Surface color and confidence.
     * An object may have multiple colors. If only one color is set, this is the dominant color.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
     */
    public Builder setSurfaceColorAndConfidence(
        int index, org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence value) {
      if (surfaceColorAndConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSurfaceColorAndConfidenceIsMutable();
        surfaceColorAndConfidence_.set(index, value);
        onChanged();
      } else {
        surfaceColorAndConfidenceBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Surface color and confidence.
     * An object may have multiple colors. If only one color is set, this is the dominant color.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
     */
    public Builder setSurfaceColorAndConfidence(
        int index, org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Builder builderForValue) {
      if (surfaceColorAndConfidenceBuilder_ == null) {
        ensureSurfaceColorAndConfidenceIsMutable();
        surfaceColorAndConfidence_.set(index, builderForValue.build());
        onChanged();
      } else {
        surfaceColorAndConfidenceBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Surface color and confidence.
     * An object may have multiple colors. If only one color is set, this is the dominant color.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
     */
    public Builder addSurfaceColorAndConfidence(org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence value) {
      if (surfaceColorAndConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSurfaceColorAndConfidenceIsMutable();
        surfaceColorAndConfidence_.add(value);
        onChanged();
      } else {
        surfaceColorAndConfidenceBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Surface color and confidence.
     * An object may have multiple colors. If only one color is set, this is the dominant color.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
     */
    public Builder addSurfaceColorAndConfidence(
        int index, org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence value) {
      if (surfaceColorAndConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSurfaceColorAndConfidenceIsMutable();
        surfaceColorAndConfidence_.add(index, value);
        onChanged();
      } else {
        surfaceColorAndConfidenceBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Surface color and confidence.
     * An object may have multiple colors. If only one color is set, this is the dominant color.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
     */
    public Builder addSurfaceColorAndConfidence(
        org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Builder builderForValue) {
      if (surfaceColorAndConfidenceBuilder_ == null) {
        ensureSurfaceColorAndConfidenceIsMutable();
        surfaceColorAndConfidence_.add(builderForValue.build());
        onChanged();
      } else {
        surfaceColorAndConfidenceBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Surface color and confidence.
     * An object may have multiple colors. If only one color is set, this is the dominant color.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
     */
    public Builder addSurfaceColorAndConfidence(
        int index, org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Builder builderForValue) {
      if (surfaceColorAndConfidenceBuilder_ == null) {
        ensureSurfaceColorAndConfidenceIsMutable();
        surfaceColorAndConfidence_.add(index, builderForValue.build());
        onChanged();
      } else {
        surfaceColorAndConfidenceBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Surface color and confidence.
     * An object may have multiple colors. If only one color is set, this is the dominant color.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
     */
    public Builder addAllSurfaceColorAndConfidence(
        java.lang.Iterable<? extends org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence> values) {
      if (surfaceColorAndConfidenceBuilder_ == null) {
        ensureSurfaceColorAndConfidenceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, surfaceColorAndConfidence_);
        onChanged();
      } else {
        surfaceColorAndConfidenceBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Surface color and confidence.
     * An object may have multiple colors. If only one color is set, this is the dominant color.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
     */
    public Builder clearSurfaceColorAndConfidence() {
      if (surfaceColorAndConfidenceBuilder_ == null) {
        surfaceColorAndConfidence_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
      } else {
        surfaceColorAndConfidenceBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Surface color and confidence.
     * An object may have multiple colors. If only one color is set, this is the dominant color.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
     */
    public Builder removeSurfaceColorAndConfidence(int index) {
      if (surfaceColorAndConfidenceBuilder_ == null) {
        ensureSurfaceColorAndConfidenceIsMutable();
        surfaceColorAndConfidence_.remove(index);
        onChanged();
      } else {
        surfaceColorAndConfidenceBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Surface color and confidence.
     * An object may have multiple colors. If only one color is set, this is the dominant color.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Builder getSurfaceColorAndConfidenceBuilder(
        int index) {
      return getSurfaceColorAndConfidenceFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Surface color and confidence.
     * An object may have multiple colors. If only one color is set, this is the dominant color.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidenceOrBuilder getSurfaceColorAndConfidenceOrBuilder(
        int index) {
      if (surfaceColorAndConfidenceBuilder_ == null) {
        return surfaceColorAndConfidence_.get(index);  } else {
        return surfaceColorAndConfidenceBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Surface color and confidence.
     * An object may have multiple colors. If only one color is set, this is the dominant color.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
     */
    public java.util.List<? extends org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidenceOrBuilder> 
         getSurfaceColorAndConfidenceOrBuilderList() {
      if (surfaceColorAndConfidenceBuilder_ != null) {
        return surfaceColorAndConfidenceBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(surfaceColorAndConfidence_);
      }
    }
    /**
     * <pre>
     * Surface color and confidence.
     * An object may have multiple colors. If only one color is set, this is the dominant color.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Builder addSurfaceColorAndConfidenceBuilder() {
      return getSurfaceColorAndConfidenceFieldBuilder().addBuilder(
          org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.getDefaultInstance());
    }
    /**
     * <pre>
     * Surface color and confidence.
     * An object may have multiple colors. If only one color is set, this is the dominant color.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
     */
    public org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Builder addSurfaceColorAndConfidenceBuilder(
        int index) {
      return getSurfaceColorAndConfidenceFieldBuilder().addBuilder(
          index, org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.getDefaultInstance());
    }
    /**
     * <pre>
     * Surface color and confidence.
     * An object may have multiple colors. If only one color is set, this is the dominant color.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;</code>
     */
    public java.util.List<org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Builder> 
         getSurfaceColorAndConfidenceBuilderList() {
      return getSurfaceColorAndConfidenceFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence, org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Builder, org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidenceOrBuilder> 
        getSurfaceColorAndConfidenceFieldBuilder() {
      if (surfaceColorAndConfidenceBuilder_ == null) {
        surfaceColorAndConfidenceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence, org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Builder, org.sensoris.categories.objectdetection.StaticObject.SurfaceColorAndConfidenceOrBuilder>(
                surfaceColorAndConfidence_,
                ((bitField0_ & 0x00000200) == 0x00000200),
                getParentForChildren(),
                isClean());
        surfaceColorAndConfidence_ = null;
      }
      return surfaceColorAndConfidenceBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:sensoris.protobuf.categories.objectdetection.StaticObject)
  }

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.objectdetection.StaticObject)
  private static final org.sensoris.categories.objectdetection.StaticObject DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.sensoris.categories.objectdetection.StaticObject();
  }

  public static org.sensoris.categories.objectdetection.StaticObject getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<StaticObject>
      PARSER = new com.google.protobuf.AbstractParser<StaticObject>() {
    @java.lang.Override
    public StaticObject parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new StaticObject(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<StaticObject> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<StaticObject> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.sensoris.categories.objectdetection.StaticObject getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

