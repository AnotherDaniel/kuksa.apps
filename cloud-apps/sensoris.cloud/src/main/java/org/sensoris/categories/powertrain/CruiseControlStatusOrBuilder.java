// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/categories/powertrain.proto

package org.sensoris.categories.powertrain;

public interface CruiseControlStatusOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sensoris.protobuf.categories.powertrain.CruiseControlStatus)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  boolean hasEnvelope();
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  org.sensoris.types.base.EventEnvelope getEnvelope();
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  org.sensoris.types.base.EventEnvelopeOrBuilder getEnvelopeOrBuilder();

  /**
   * <pre>
   * Type.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.powertrain.CruiseControlStatus.Type type = 2;</code>
   */
  int getTypeValue();
  /**
   * <pre>
   * Type.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.powertrain.CruiseControlStatus.Type type = 2;</code>
   */
  org.sensoris.categories.powertrain.CruiseControlStatus.Type getType();

  /**
   * <pre>
   * Status.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.SystemStatus status = 3;</code>
   */
  int getStatusValue();
  /**
   * <pre>
   * Status.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.SystemStatus status = 3;</code>
   */
  org.sensoris.types.base.SystemStatus getStatus();

  /**
   * <pre>
   * Selected speed.
   * &#64;unit Meter per Second
   * &#64;resolution 0.1
   * &#64;range (0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Value selected_speed = 4 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
   */
  boolean hasSelectedSpeed();
  /**
   * <pre>
   * Selected speed.
   * &#64;unit Meter per Second
   * &#64;resolution 0.1
   * &#64;range (0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Value selected_speed = 4 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
   */
  org.sensoris.types.base.Int64Value getSelectedSpeed();
  /**
   * <pre>
   * Selected speed.
   * &#64;unit Meter per Second
   * &#64;resolution 0.1
   * &#64;range (0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Value selected_speed = 4 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
   */
  org.sensoris.types.base.Int64ValueOrBuilder getSelectedSpeedOrBuilder();

  /**
   * <pre>
   * Selected lead time.
   * &#64;unit Second
   * &#64;resolution 0.1
   * &#64;range [0, 100]
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Value selected_time_to_lead_vehicle = 5 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
   */
  boolean hasSelectedTimeToLeadVehicle();
  /**
   * <pre>
   * Selected lead time.
   * &#64;unit Second
   * &#64;resolution 0.1
   * &#64;range [0, 100]
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Value selected_time_to_lead_vehicle = 5 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
   */
  org.sensoris.types.base.Int64Value getSelectedTimeToLeadVehicle();
  /**
   * <pre>
   * Selected lead time.
   * &#64;unit Second
   * &#64;resolution 0.1
   * &#64;range [0, 100]
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Value selected_time_to_lead_vehicle = 5 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
   */
  org.sensoris.types.base.Int64ValueOrBuilder getSelectedTimeToLeadVehicleOrBuilder();
}
